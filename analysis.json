{
  "schema_version": "1.0.0",
  "namespaces": [
    {
      "name": "EsmmDemoHelpers",
      "description": " ",
      "summary": "",
      "sourceRange": {
        "file": "demo/mixins/test-actions-mixin.html",
        "start": {
          "line": 4,
          "column": 2
        },
        "end": {
          "line": 4,
          "column": 56
        }
      },
      "mixins": [
        {
          "description": "Dropdown test dummy data",
          "summary": "",
          "path": "demo/mixins/test-data-mixin.html",
          "properties": [
            {
              "name": "simpleOptions",
              "type": "Array",
              "description": "",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 14,
                  "column": 8
                },
                "end": {
                  "line": 24,
                  "column": 9
                }
              },
              "metadata": {
                "polymer": {
                  "notify": true
                }
              }
            },
            {
              "name": "twoLineOptions",
              "type": "Array",
              "description": "",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 25,
                  "column": 8
                },
                "end": {
                  "line": 35,
                  "column": 9
                }
              },
              "metadata": {
                "polymer": {
                  "notify": true
                }
              }
            }
          ],
          "methods": [],
          "staticMethods": [],
          "demos": [],
          "metadata": {},
          "sourceRange": {
            "start": {
              "line": 11,
              "column": 2
            },
            "end": {
              "line": 38,
              "column": 3
            }
          },
          "privacy": "public",
          "name": "EsmmDemoHelpers.TestData",
          "attributes": [
            {
              "name": "simple-options",
              "description": "",
              "sourceRange": {
                "start": {
                  "line": 14,
                  "column": 8
                },
                "end": {
                  "line": 24,
                  "column": 9
                }
              },
              "metadata": {},
              "type": "Array"
            },
            {
              "name": "two-line-options",
              "description": "",
              "sourceRange": {
                "start": {
                  "line": 25,
                  "column": 8
                },
                "end": {
                  "line": 35,
                  "column": 9
                }
              },
              "metadata": {},
              "type": "Array"
            }
          ],
          "events": [],
          "styling": {
            "cssVariables": [],
            "selectors": []
          },
          "slots": []
        },
        {
          "description": "Dropdown test actions",
          "summary": "",
          "path": "demo/mixins/test-actions-mixin.html",
          "properties": [],
          "methods": [],
          "staticMethods": [],
          "demos": [],
          "metadata": {},
          "sourceRange": {
            "start": {
              "line": 12,
              "column": 2
            },
            "end": {
              "line": 18,
              "column": 3
            }
          },
          "privacy": "public",
          "name": "EsmmDemoHelpers.TestActions",
          "attributes": [],
          "events": [],
          "styling": {
            "cssVariables": [],
            "selectors": []
          },
          "slots": []
        }
      ]
    },
    {
      "name": "EsmmMixins",
      "description": " ",
      "summary": "",
      "sourceRange": {
        "file": "mixins/missing-options-mixin.html",
        "start": {
          "line": 4,
          "column": 2
        },
        "end": {
          "line": 4,
          "column": 46
        }
      },
      "mixins": [
        {
          "description": "Item data utils mixin",
          "summary": "",
          "path": "mixins/list-item-utils-mixin.html",
          "properties": [
            {
              "name": "optionValue",
              "type": "string",
              "description": "Option object property to use as value for selection",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 17,
                  "column": 12
                },
                "end": {
                  "line": 20,
                  "column": 13
                }
              },
              "metadata": {
                "polymer": {}
              },
              "defaultValue": "\"value\""
            },
            {
              "name": "optionLabel",
              "type": "string",
              "description": "Option object property to use as label",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 22,
                  "column": 12
                },
                "end": {
                  "line": 25,
                  "column": 13
                }
              },
              "metadata": {
                "polymer": {}
              },
              "defaultValue": "\"label\""
            },
            {
              "name": "twoLinesLabel",
              "type": "boolean",
              "description": "Show option label on 2 lines",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 27,
                  "column": 12
                },
                "end": {
                  "line": 31,
                  "column": 13
                }
              },
              "metadata": {
                "polymer": {}
              },
              "defaultValue": "false"
            },
            {
              "name": "noneOptionLabel",
              "type": "string",
              "description": "None option label",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 33,
                  "column": 12
                },
                "end": {
                  "line": 36,
                  "column": 13
                }
              },
              "metadata": {
                "polymer": {}
              },
              "defaultValue": "\"-- NONE --\""
            },
            {
              "name": "capitalize",
              "type": "boolean",
              "description": "Capitalize selected values/option, UI only",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 38,
                  "column": 12
                },
                "end": {
                  "line": 41,
                  "column": 13
                }
              },
              "metadata": {
                "polymer": {}
              },
              "defaultValue": "false"
            }
          ],
          "methods": [
            {
              "name": "getPrimaryLabel",
              "description": "Get option primary label. All chars until `|` .",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 50,
                  "column": 8
                },
                "end": {
                  "line": 59,
                  "column": 9
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "label"
                }
              ],
              "return": {
                "type": "string"
              }
            },
            {
              "name": "getSecondaryLabel",
              "description": "Get option secondary label. All chars after `|`",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 66,
                  "column": 8
                },
                "end": {
                  "line": 78,
                  "column": 9
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "label"
                }
              ],
              "return": {
                "type": "*"
              }
            },
            {
              "name": "_getValue",
              "description": "Get current option value",
              "privacy": "private",
              "sourceRange": {
                "start": {
                  "line": 86,
                  "column": 8
                },
                "end": {
                  "line": 88,
                  "column": 9
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "item"
                }
              ],
              "return": {
                "type": "null"
              }
            },
            {
              "name": "_getLabel",
              "description": "Get option label",
              "privacy": "private",
              "sourceRange": {
                "start": {
                  "line": 96,
                  "column": 8
                },
                "end": {
                  "line": 106,
                  "column": 9
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "item"
                }
              ],
              "return": {
                "type": "*"
              }
            },
            {
              "name": "_capitalizeString",
              "description": "Capitalize string",
              "privacy": "private",
              "sourceRange": {
                "start": {
                  "line": 114,
                  "column": 8
                },
                "end": {
                  "line": 116,
                  "column": 9
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "string"
                }
              ],
              "return": {
                "type": "string"
              }
            }
          ],
          "staticMethods": [],
          "demos": [],
          "metadata": {},
          "sourceRange": {
            "start": {
              "line": 11,
              "column": 2
            },
            "end": {
              "line": 118,
              "column": 8
            }
          },
          "privacy": "public",
          "name": "EsmmMixins.ListItemUtils",
          "attributes": [
            {
              "name": "option-value",
              "description": "Option object property to use as value for selection",
              "sourceRange": {
                "start": {
                  "line": 17,
                  "column": 12
                },
                "end": {
                  "line": 20,
                  "column": 13
                }
              },
              "metadata": {},
              "type": "string"
            },
            {
              "name": "option-label",
              "description": "Option object property to use as label",
              "sourceRange": {
                "start": {
                  "line": 22,
                  "column": 12
                },
                "end": {
                  "line": 25,
                  "column": 13
                }
              },
              "metadata": {},
              "type": "string"
            },
            {
              "name": "two-lines-label",
              "description": "Show option label on 2 lines",
              "sourceRange": {
                "start": {
                  "line": 27,
                  "column": 12
                },
                "end": {
                  "line": 31,
                  "column": 13
                }
              },
              "metadata": {},
              "type": "boolean"
            },
            {
              "name": "none-option-label",
              "description": "None option label",
              "sourceRange": {
                "start": {
                  "line": 33,
                  "column": 12
                },
                "end": {
                  "line": 36,
                  "column": 13
                }
              },
              "metadata": {},
              "type": "string"
            },
            {
              "name": "capitalize",
              "description": "Capitalize selected values/option, UI only",
              "sourceRange": {
                "start": {
                  "line": 38,
                  "column": 12
                },
                "end": {
                  "line": 41,
                  "column": 13
                }
              },
              "metadata": {},
              "type": "boolean"
            }
          ],
          "events": [],
          "styling": {
            "cssVariables": [],
            "selectors": []
          },
          "slots": []
        },
        {
          "description": "Common functionality for single selection and multiple selection dropdown",
          "summary": "",
          "path": "mixins/common-mixin.html",
          "properties": [
            {
              "name": "optionValue",
              "type": "string",
              "description": "Option object property to use as value for selection",
              "privacy": "public",
              "sourceRange": {
                "file": "list-item-utils-mixin.html",
                "start": {
                  "line": 17,
                  "column": 12
                },
                "end": {
                  "line": 20,
                  "column": 13
                }
              },
              "metadata": {
                "polymer": {}
              },
              "defaultValue": "\"value\"",
              "inheritedFrom": "EsmmMixins.ListItemUtils"
            },
            {
              "name": "optionLabel",
              "type": "string",
              "description": "Option object property to use as label",
              "privacy": "public",
              "sourceRange": {
                "file": "list-item-utils-mixin.html",
                "start": {
                  "line": 22,
                  "column": 12
                },
                "end": {
                  "line": 25,
                  "column": 13
                }
              },
              "metadata": {
                "polymer": {}
              },
              "defaultValue": "\"label\"",
              "inheritedFrom": "EsmmMixins.ListItemUtils"
            },
            {
              "name": "twoLinesLabel",
              "type": "boolean",
              "description": "Show option label on 2 lines",
              "privacy": "public",
              "sourceRange": {
                "file": "list-item-utils-mixin.html",
                "start": {
                  "line": 27,
                  "column": 12
                },
                "end": {
                  "line": 31,
                  "column": 13
                }
              },
              "metadata": {
                "polymer": {}
              },
              "defaultValue": "false",
              "inheritedFrom": "EsmmMixins.ListItemUtils"
            },
            {
              "name": "noneOptionLabel",
              "type": "string",
              "description": "None option label",
              "privacy": "public",
              "sourceRange": {
                "file": "list-item-utils-mixin.html",
                "start": {
                  "line": 33,
                  "column": 12
                },
                "end": {
                  "line": 36,
                  "column": 13
                }
              },
              "metadata": {
                "polymer": {}
              },
              "defaultValue": "\"-- NONE --\"",
              "inheritedFrom": "EsmmMixins.ListItemUtils"
            },
            {
              "name": "capitalize",
              "type": "boolean",
              "description": "Capitalize selected values/option, UI only",
              "privacy": "public",
              "sourceRange": {
                "file": "list-item-utils-mixin.html",
                "start": {
                  "line": 38,
                  "column": 12
                },
                "end": {
                  "line": 41,
                  "column": 13
                }
              },
              "metadata": {
                "polymer": {}
              },
              "defaultValue": "false",
              "inheritedFrom": "EsmmMixins.ListItemUtils"
            },
            {
              "name": "label",
              "type": "string",
              "description": "Dropdown label",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 19,
                  "column": 8
                },
                "end": {
                  "line": 21,
                  "column": 9
                }
              },
              "metadata": {
                "polymer": {}
              }
            },
            {
              "name": "noLabelFloat",
              "type": "boolean",
              "description": "",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 22,
                  "column": 8
                },
                "end": {
                  "line": 22,
                  "column": 29
                }
              },
              "metadata": {
                "polymer": {}
              }
            },
            {
              "name": "alwaysFloatLabel",
              "type": "boolean",
              "description": "",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 23,
                  "column": 8
                },
                "end": {
                  "line": 26,
                  "column": 9
                }
              },
              "metadata": {
                "polymer": {}
              },
              "defaultValue": "true"
            },
            {
              "name": "placeholder",
              "type": "string",
              "description": "",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 27,
                  "column": 8
                },
                "end": {
                  "line": 30,
                  "column": 9
                }
              },
              "metadata": {
                "polymer": {}
              },
              "defaultValue": "\"—\""
            },
            {
              "name": "required",
              "type": "boolean",
              "description": "",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 31,
                  "column": 8
                },
                "end": {
                  "line": 35,
                  "column": 9
                }
              },
              "metadata": {
                "polymer": {
                  "observer": "\"_requiredChanged\""
                }
              }
            },
            {
              "name": "errorMessage",
              "type": "string",
              "description": "",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 36,
                  "column": 8
                },
                "end": {
                  "line": 39,
                  "column": 9
                }
              },
              "metadata": {
                "polymer": {}
              },
              "defaultValue": "\"This field is required\""
            },
            {
              "name": "autoValidate",
              "type": "boolean",
              "description": "",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 40,
                  "column": 8
                },
                "end": {
                  "line": 42,
                  "column": 9
                }
              },
              "metadata": {
                "polymer": {}
              }
            },
            {
              "name": "disabled",
              "type": "boolean",
              "description": "",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 43,
                  "column": 8
                },
                "end": {
                  "line": 47,
                  "column": 9
                }
              },
              "metadata": {
                "polymer": {}
              },
              "defaultValue": "false"
            },
            {
              "name": "readonly",
              "type": "boolean",
              "description": "",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 48,
                  "column": 8
                },
                "end": {
                  "line": 55,
                  "column": 9
                }
              },
              "metadata": {
                "polymer": {
                  "observer": "\"_readonlyChanged\""
                }
              },
              "defaultValue": "false"
            },
            {
              "name": "invalid",
              "type": "boolean",
              "description": "",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 56,
                  "column": 8
                },
                "end": {
                  "line": 62,
                  "column": 9
                }
              },
              "metadata": {
                "polymer": {}
              },
              "defaultValue": "false"
            },
            {
              "name": "dynamicAlign",
              "type": "boolean",
              "description": "Makes the dropdown to show top or bottom where it will fit better",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 64,
                  "column": 8
                },
                "end": {
                  "line": 67,
                  "column": 9
                }
              },
              "metadata": {
                "polymer": {}
              },
              "defaultValue": "true"
            },
            {
              "name": "allowOutsideScroll",
              "type": "boolean",
              "description": "Allows scroll outside opened dropdown",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 69,
                  "column": 8
                },
                "end": {
                  "line": 71,
                  "column": 9
                }
              },
              "metadata": {
                "polymer": {}
              }
            },
            {
              "name": "search",
              "type": "string",
              "description": "",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 72,
                  "column": 8
                },
                "end": {
                  "line": 75,
                  "column": 9
                }
              },
              "metadata": {
                "polymer": {}
              }
            },
            {
              "name": "options",
              "type": "Array",
              "description": "Array of objects, dropdowns options used to compute shownOptions",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 77,
                  "column": 8
                },
                "end": {
                  "line": 79,
                  "column": 9
                }
              },
              "metadata": {
                "polymer": {}
              }
            },
            {
              "name": "shownOptions",
              "type": "Array",
              "description": "Options seen by user",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 81,
                  "column": 8
                },
                "end": {
                  "line": 84,
                  "column": 9
                }
              },
              "metadata": {
                "polymer": {
                  "readOnly": true
                }
              }
            },
            {
              "name": "enableNoneOption",
              "type": "boolean",
              "description": "Flag to show `None` option (first dropdown option)\nUsed to reset single selection dropdown selected value",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 89,
                  "column": 8
                },
                "end": {
                  "line": 92,
                  "column": 9
                }
              },
              "metadata": {
                "polymer": {}
              },
              "defaultValue": "false"
            },
            {
              "name": "hideSearch",
              "type": "boolean",
              "description": "",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 93,
                  "column": 8
                },
                "end": {
                  "line": 96,
                  "column": 9
                }
              },
              "metadata": {
                "polymer": {}
              },
              "defaultValue": "false"
            },
            {
              "name": "shownOptionsLimit",
              "type": "number",
              "description": "Limit displayed options",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 98,
                  "column": 8
                },
                "end": {
                  "line": 101,
                  "column": 9
                }
              },
              "metadata": {
                "polymer": {}
              },
              "defaultValue": "50"
            },
            {
              "name": "noOptionsAvailable",
              "type": "boolean",
              "description": "Flag to show a no options avaliable warning",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 103,
                  "column": 8
                },
                "end": {
                  "line": 107,
                  "column": 9
                }
              },
              "metadata": {
                "polymer": {
                  "readOnly": true
                }
              },
              "defaultValue": "true"
            },
            {
              "name": "showLimitWarning",
              "type": "boolean",
              "description": "Flag to show the limit of options shown in dropdown",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 109,
                  "column": 8
                },
                "end": {
                  "line": 113,
                  "column": 9
                }
              },
              "metadata": {
                "polymer": {
                  "readOnly": true
                }
              },
              "defaultValue": "false"
            },
            {
              "name": "showNoSearchResultsWarning",
              "type": "boolean",
              "description": "Flag used to show no search result found warning",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 115,
                  "column": 8
                },
                "end": {
                  "line": 119,
                  "column": 9
                }
              },
              "metadata": {
                "polymer": {
                  "readOnly": true
                }
              },
              "defaultValue": "false"
            },
            {
              "name": "disableOnFocusHandling",
              "type": "boolean",
              "description": "Stop autofocus from paper-dialog",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 121,
                  "column": 8
                },
                "end": {
                  "line": 127,
                  "column": 9
                }
              },
              "metadata": {
                "polymer": {}
              }
            },
            {
              "name": "fitInto",
              "type": "Object",
              "description": "Element that will prevent dropdown to overflow outside it's margins",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 132,
                  "column": 8
                },
                "end": {
                  "line": 132,
                  "column": 23
                }
              },
              "metadata": {
                "polymer": {}
              }
            },
            {
              "name": "viewportEdgeMargin",
              "type": "number",
              "description": "Margin added if dropdown bottom is too close to the viewport bottom margin",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 134,
                  "column": 8
                },
                "end": {
                  "line": 137,
                  "column": 9
                }
              },
              "metadata": {
                "polymer": {}
              },
              "defaultValue": "20"
            }
          ],
          "methods": [
            {
              "name": "getPrimaryLabel",
              "description": "Get option primary label. All chars until `|` .",
              "privacy": "public",
              "sourceRange": {
                "file": "list-item-utils-mixin.html",
                "start": {
                  "line": 50,
                  "column": 8
                },
                "end": {
                  "line": 59,
                  "column": 9
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "label"
                }
              ],
              "return": {
                "type": "string"
              },
              "inheritedFrom": "EsmmMixins.ListItemUtils"
            },
            {
              "name": "getSecondaryLabel",
              "description": "Get option secondary label. All chars after `|`",
              "privacy": "public",
              "sourceRange": {
                "file": "list-item-utils-mixin.html",
                "start": {
                  "line": 66,
                  "column": 8
                },
                "end": {
                  "line": 78,
                  "column": 9
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "label"
                }
              ],
              "return": {
                "type": "*"
              },
              "inheritedFrom": "EsmmMixins.ListItemUtils"
            },
            {
              "name": "_getValue",
              "description": "Get current option value",
              "privacy": "private",
              "sourceRange": {
                "file": "list-item-utils-mixin.html",
                "start": {
                  "line": 86,
                  "column": 8
                },
                "end": {
                  "line": 88,
                  "column": 9
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "item"
                }
              ],
              "return": {
                "type": "null"
              },
              "inheritedFrom": "EsmmMixins.ListItemUtils"
            },
            {
              "name": "_getLabel",
              "description": "Get option label",
              "privacy": "private",
              "sourceRange": {
                "file": "list-item-utils-mixin.html",
                "start": {
                  "line": 96,
                  "column": 8
                },
                "end": {
                  "line": 106,
                  "column": 9
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "item"
                }
              ],
              "return": {
                "type": "*"
              },
              "inheritedFrom": "EsmmMixins.ListItemUtils"
            },
            {
              "name": "_capitalizeString",
              "description": "Capitalize string",
              "privacy": "private",
              "sourceRange": {
                "file": "list-item-utils-mixin.html",
                "start": {
                  "line": 114,
                  "column": 8
                },
                "end": {
                  "line": 116,
                  "column": 9
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "string"
                }
              ],
              "return": {
                "type": "string"
              },
              "inheritedFrom": "EsmmMixins.ListItemUtils"
            },
            {
              "name": "connectedCallback",
              "description": "",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 141,
                  "column": 4
                },
                "end": {
                  "line": 153,
                  "column": 5
                }
              },
              "metadata": {},
              "params": []
            },
            {
              "name": "_setFitInto",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 155,
                  "column": 4
                },
                "end": {
                  "line": 164,
                  "column": 5
                }
              },
              "metadata": {},
              "params": []
            },
            {
              "name": "_setResetSizeHandler",
              "description": "Reset dropdown size on close",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 169,
                  "column": 4
                },
                "end": {
                  "line": 172,
                  "column": 5
                }
              },
              "metadata": {},
              "params": []
            },
            {
              "name": "_isUndefined",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 174,
                  "column": 4
                },
                "end": {
                  "line": 176,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "prop"
                }
              ]
            },
            {
              "name": "resetIronDropdownSize",
              "description": "Reset previous calculated maxHeight,\nin this way on each dropdown open action we'll get the same calculated new height.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 182,
                  "column": 4
                },
                "end": {
                  "line": 187,
                  "column": 5
                }
              },
              "metadata": {},
              "params": []
            },
            {
              "name": "_dropdownOpenedDownwards",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 189,
                  "column": 4
                },
                "end": {
                  "line": 192,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "overlayCoord"
                }
              ]
            },
            {
              "name": "_noOptions",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 194,
                  "column": 4
                },
                "end": {
                  "line": 196,
                  "column": 5
                }
              },
              "metadata": {},
              "params": []
            },
            {
              "name": "_menuBtnIsDisabled",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 198,
                  "column": 4
                },
                "end": {
                  "line": 200,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "disabled"
                },
                {
                  "name": "readonly"
                }
              ]
            },
            {
              "name": "resetInvalidState",
              "description": "",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 202,
                  "column": 4
                },
                "end": {
                  "line": 204,
                  "column": 5
                }
              },
              "metadata": {},
              "params": []
            },
            {
              "name": "_computeNoOptionsAvailable",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 206,
                  "column": 4
                },
                "end": {
                  "line": 211,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "options"
                },
                {
                  "name": "optionsLength"
                }
              ]
            },
            {
              "name": "_readonlyChanged",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 213,
                  "column": 4
                },
                "end": {
                  "line": 221,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "newValue"
                },
                {
                  "name": "oldValue"
                }
              ]
            },
            {
              "name": "_requiredChanged",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 223,
                  "column": 4
                },
                "end": {
                  "line": 231,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "newValue"
                },
                {
                  "name": "oldValue"
                }
              ]
            },
            {
              "name": "_attributeRepaintNeeded",
              "description": "Force styles update",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 236,
                  "column": 4
                },
                "end": {
                  "line": 240,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "newValue"
                },
                {
                  "name": "oldValue"
                }
              ]
            },
            {
              "name": "_computeShownOptions",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 242,
                  "column": 4
                },
                "end": {
                  "line": 263,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "options"
                },
                {
                  "name": "search"
                },
                {
                  "name": "enableNoneOption"
                }
              ]
            },
            {
              "name": "_trimByShownOptionsLimit",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 265,
                  "column": 4
                },
                "end": {
                  "line": 267,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "options"
                }
              ]
            },
            {
              "name": "_itemContainsSearchString",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 269,
                  "column": 4
                },
                "end": {
                  "line": 272,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "item"
                }
              ]
            },
            {
              "name": "_computeShowLimitWarning",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 274,
                  "column": 4
                },
                "end": {
                  "line": 279,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "limit"
                },
                {
                  "name": "shownOptions"
                }
              ]
            },
            {
              "name": "_showNoSearchResultsWarning",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 281,
                  "column": 4
                },
                "end": {
                  "line": 287,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "noOptionsAvailable"
                },
                {
                  "name": "shownOptionsLength"
                },
                {
                  "name": "optionsLength"
                }
              ]
            },
            {
              "name": "_validCoordinates",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 289,
                  "column": 4
                },
                "end": {
                  "line": 294,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "coords"
                }
              ]
            },
            {
              "name": "_bottomTooCloseToViewportEdge",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 296,
                  "column": 4
                },
                "end": {
                  "line": 299,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "dropdownBottom"
                }
              ]
            },
            {
              "name": "_dropdownBottomOutsideViewPort",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 301,
                  "column": 4
                },
                "end": {
                  "line": 306,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "openedDropdownCoord"
                }
              ]
            },
            {
              "name": "_getViewportHeight",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 308,
                  "column": 4
                },
                "end": {
                  "line": 310,
                  "column": 5
                }
              },
              "metadata": {},
              "params": []
            },
            {
              "name": "_recalculateOptionsListHeightForIE11",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 312,
                  "column": 4
                },
                "end": {
                  "line": 338,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "newComputedHeight"
                },
                {
                  "name": "openedDropdownCoord"
                },
                {
                  "name": "searchboxHeight"
                }
              ]
            },
            {
              "name": "_getSearchFieldHeight",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 340,
                  "column": 4
                },
                "end": {
                  "line": 347,
                  "column": 5
                }
              },
              "metadata": {},
              "params": []
            },
            {
              "name": "_getNewHeightRelatedToBottomViewportEdge",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 349,
                  "column": 4
                },
                "end": {
                  "line": 352,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "openedDropdownCoord"
                },
                {
                  "name": "searchboxHeight"
                }
              ]
            },
            {
              "name": "_resizeOptionsListHeight",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 354,
                  "column": 4
                },
                "end": {
                  "line": 382,
                  "column": 5
                }
              },
              "metadata": {},
              "params": []
            },
            {
              "name": "_onDropdownOpen",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 384,
                  "column": 4
                },
                "end": {
                  "line": 387,
                  "column": 5
                }
              },
              "metadata": {},
              "params": []
            },
            {
              "name": "_setDropdownWidth",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 389,
                  "column": 4
                },
                "end": {
                  "line": 392,
                  "column": 5
                }
              },
              "metadata": {},
              "params": []
            },
            {
              "name": "_setFocusTarget",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 394,
                  "column": 4
                },
                "end": {
                  "line": 398,
                  "column": 5
                }
              },
              "metadata": {},
              "params": []
            },
            {
              "name": "_setPositionTarget",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 400,
                  "column": 4
                },
                "end": {
                  "line": 404,
                  "column": 5
                }
              },
              "metadata": {},
              "params": []
            },
            {
              "name": "_getIronDropdown",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 406,
                  "column": 4
                },
                "end": {
                  "line": 408,
                  "column": 5
                }
              },
              "metadata": {},
              "params": []
            },
            {
              "name": "_getIronDropdownContent",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 410,
                  "column": 4
                },
                "end": {
                  "line": 412,
                  "column": 5
                }
              },
              "metadata": {},
              "params": []
            },
            {
              "name": "_getOptionsList",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 414,
                  "column": 4
                },
                "end": {
                  "line": 416,
                  "column": 5
                }
              },
              "metadata": {},
              "params": []
            },
            {
              "name": "_getSearchox",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 418,
                  "column": 4
                },
                "end": {
                  "line": 420,
                  "column": 5
                }
              },
              "metadata": {},
              "params": []
            },
            {
              "name": "_openMenu",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 422,
                  "column": 4
                },
                "end": {
                  "line": 427,
                  "column": 5
                }
              },
              "metadata": {},
              "params": []
            },
            {
              "name": "_closeMenu",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 429,
                  "column": 4
                },
                "end": {
                  "line": 431,
                  "column": 5
                }
              },
              "metadata": {},
              "params": []
            },
            {
              "name": "notifyDropdownResize",
              "description": "",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 450,
                  "column": 4
                },
                "end": {
                  "line": 453,
                  "column": 5
                }
              },
              "metadata": {},
              "params": []
            },
            {
              "name": "onInputFocus",
              "description": "On focus received from a previous element (filds navigation in form using Tab)",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 459,
                  "column": 4
                },
                "end": {
                  "line": 468,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "e"
                }
              ]
            },
            {
              "name": "isIEBrowser",
              "description": "Checks for IE11 browser :)",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 474,
                  "column": 4
                },
                "end": {
                  "line": 477,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [],
              "return": {
                "type": "boolean"
              }
            }
          ],
          "staticMethods": [],
          "demos": [],
          "metadata": {},
          "sourceRange": {
            "start": {
              "line": 14,
              "column": 2
            },
            "end": {
              "line": 479,
              "column": 3
            }
          },
          "privacy": "public",
          "name": "EsmmMixins.CommonFunctionality",
          "attributes": [
            {
              "name": "option-value",
              "description": "Option object property to use as value for selection",
              "sourceRange": {
                "file": "list-item-utils-mixin.html",
                "start": {
                  "line": 17,
                  "column": 12
                },
                "end": {
                  "line": 20,
                  "column": 13
                }
              },
              "metadata": {},
              "type": "string",
              "inheritedFrom": "EsmmMixins.ListItemUtils"
            },
            {
              "name": "option-label",
              "description": "Option object property to use as label",
              "sourceRange": {
                "file": "list-item-utils-mixin.html",
                "start": {
                  "line": 22,
                  "column": 12
                },
                "end": {
                  "line": 25,
                  "column": 13
                }
              },
              "metadata": {},
              "type": "string",
              "inheritedFrom": "EsmmMixins.ListItemUtils"
            },
            {
              "name": "two-lines-label",
              "description": "Show option label on 2 lines",
              "sourceRange": {
                "file": "list-item-utils-mixin.html",
                "start": {
                  "line": 27,
                  "column": 12
                },
                "end": {
                  "line": 31,
                  "column": 13
                }
              },
              "metadata": {},
              "type": "boolean",
              "inheritedFrom": "EsmmMixins.ListItemUtils"
            },
            {
              "name": "none-option-label",
              "description": "None option label",
              "sourceRange": {
                "file": "list-item-utils-mixin.html",
                "start": {
                  "line": 33,
                  "column": 12
                },
                "end": {
                  "line": 36,
                  "column": 13
                }
              },
              "metadata": {},
              "type": "string",
              "inheritedFrom": "EsmmMixins.ListItemUtils"
            },
            {
              "name": "capitalize",
              "description": "Capitalize selected values/option, UI only",
              "sourceRange": {
                "file": "list-item-utils-mixin.html",
                "start": {
                  "line": 38,
                  "column": 12
                },
                "end": {
                  "line": 41,
                  "column": 13
                }
              },
              "metadata": {},
              "type": "boolean",
              "inheritedFrom": "EsmmMixins.ListItemUtils"
            },
            {
              "name": "label",
              "description": "Dropdown label",
              "sourceRange": {
                "start": {
                  "line": 19,
                  "column": 8
                },
                "end": {
                  "line": 21,
                  "column": 9
                }
              },
              "metadata": {},
              "type": "string"
            },
            {
              "name": "no-label-float",
              "description": "",
              "sourceRange": {
                "start": {
                  "line": 22,
                  "column": 8
                },
                "end": {
                  "line": 22,
                  "column": 29
                }
              },
              "metadata": {},
              "type": "boolean"
            },
            {
              "name": "always-float-label",
              "description": "",
              "sourceRange": {
                "start": {
                  "line": 23,
                  "column": 8
                },
                "end": {
                  "line": 26,
                  "column": 9
                }
              },
              "metadata": {},
              "type": "boolean"
            },
            {
              "name": "placeholder",
              "description": "",
              "sourceRange": {
                "start": {
                  "line": 27,
                  "column": 8
                },
                "end": {
                  "line": 30,
                  "column": 9
                }
              },
              "metadata": {},
              "type": "string"
            },
            {
              "name": "required",
              "description": "",
              "sourceRange": {
                "start": {
                  "line": 31,
                  "column": 8
                },
                "end": {
                  "line": 35,
                  "column": 9
                }
              },
              "metadata": {},
              "type": "boolean"
            },
            {
              "name": "error-message",
              "description": "",
              "sourceRange": {
                "start": {
                  "line": 36,
                  "column": 8
                },
                "end": {
                  "line": 39,
                  "column": 9
                }
              },
              "metadata": {},
              "type": "string"
            },
            {
              "name": "auto-validate",
              "description": "",
              "sourceRange": {
                "start": {
                  "line": 40,
                  "column": 8
                },
                "end": {
                  "line": 42,
                  "column": 9
                }
              },
              "metadata": {},
              "type": "boolean"
            },
            {
              "name": "disabled",
              "description": "",
              "sourceRange": {
                "start": {
                  "line": 43,
                  "column": 8
                },
                "end": {
                  "line": 47,
                  "column": 9
                }
              },
              "metadata": {},
              "type": "boolean"
            },
            {
              "name": "readonly",
              "description": "",
              "sourceRange": {
                "start": {
                  "line": 48,
                  "column": 8
                },
                "end": {
                  "line": 55,
                  "column": 9
                }
              },
              "metadata": {},
              "type": "boolean"
            },
            {
              "name": "invalid",
              "description": "",
              "sourceRange": {
                "start": {
                  "line": 56,
                  "column": 8
                },
                "end": {
                  "line": 62,
                  "column": 9
                }
              },
              "metadata": {},
              "type": "boolean"
            },
            {
              "name": "dynamic-align",
              "description": "Makes the dropdown to show top or bottom where it will fit better",
              "sourceRange": {
                "start": {
                  "line": 64,
                  "column": 8
                },
                "end": {
                  "line": 67,
                  "column": 9
                }
              },
              "metadata": {},
              "type": "boolean"
            },
            {
              "name": "allow-outside-scroll",
              "description": "Allows scroll outside opened dropdown",
              "sourceRange": {
                "start": {
                  "line": 69,
                  "column": 8
                },
                "end": {
                  "line": 71,
                  "column": 9
                }
              },
              "metadata": {},
              "type": "boolean"
            },
            {
              "name": "search",
              "description": "",
              "sourceRange": {
                "start": {
                  "line": 72,
                  "column": 8
                },
                "end": {
                  "line": 75,
                  "column": 9
                }
              },
              "metadata": {},
              "type": "string"
            },
            {
              "name": "options",
              "description": "Array of objects, dropdowns options used to compute shownOptions",
              "sourceRange": {
                "start": {
                  "line": 77,
                  "column": 8
                },
                "end": {
                  "line": 79,
                  "column": 9
                }
              },
              "metadata": {},
              "type": "Array"
            },
            {
              "name": "shown-options",
              "description": "Options seen by user",
              "sourceRange": {
                "start": {
                  "line": 81,
                  "column": 8
                },
                "end": {
                  "line": 84,
                  "column": 9
                }
              },
              "metadata": {},
              "type": "Array"
            },
            {
              "name": "enable-none-option",
              "description": "Flag to show `None` option (first dropdown option)\nUsed to reset single selection dropdown selected value",
              "sourceRange": {
                "start": {
                  "line": 89,
                  "column": 8
                },
                "end": {
                  "line": 92,
                  "column": 9
                }
              },
              "metadata": {},
              "type": "boolean"
            },
            {
              "name": "hide-search",
              "description": "",
              "sourceRange": {
                "start": {
                  "line": 93,
                  "column": 8
                },
                "end": {
                  "line": 96,
                  "column": 9
                }
              },
              "metadata": {},
              "type": "boolean"
            },
            {
              "name": "shown-options-limit",
              "description": "Limit displayed options",
              "sourceRange": {
                "start": {
                  "line": 98,
                  "column": 8
                },
                "end": {
                  "line": 101,
                  "column": 9
                }
              },
              "metadata": {},
              "type": "number"
            },
            {
              "name": "no-options-available",
              "description": "Flag to show a no options avaliable warning",
              "sourceRange": {
                "start": {
                  "line": 103,
                  "column": 8
                },
                "end": {
                  "line": 107,
                  "column": 9
                }
              },
              "metadata": {},
              "type": "boolean"
            },
            {
              "name": "show-limit-warning",
              "description": "Flag to show the limit of options shown in dropdown",
              "sourceRange": {
                "start": {
                  "line": 109,
                  "column": 8
                },
                "end": {
                  "line": 113,
                  "column": 9
                }
              },
              "metadata": {},
              "type": "boolean"
            },
            {
              "name": "show-no-search-results-warning",
              "description": "Flag used to show no search result found warning",
              "sourceRange": {
                "start": {
                  "line": 115,
                  "column": 8
                },
                "end": {
                  "line": 119,
                  "column": 9
                }
              },
              "metadata": {},
              "type": "boolean"
            },
            {
              "name": "disable-on-focus-handling",
              "description": "Stop autofocus from paper-dialog",
              "sourceRange": {
                "start": {
                  "line": 121,
                  "column": 8
                },
                "end": {
                  "line": 127,
                  "column": 9
                }
              },
              "metadata": {},
              "type": "boolean"
            },
            {
              "name": "fit-into",
              "description": "Element that will prevent dropdown to overflow outside it's margins",
              "sourceRange": {
                "start": {
                  "line": 132,
                  "column": 8
                },
                "end": {
                  "line": 132,
                  "column": 23
                }
              },
              "metadata": {},
              "type": "Object"
            },
            {
              "name": "viewport-edge-margin",
              "description": "Margin added if dropdown bottom is too close to the viewport bottom margin",
              "sourceRange": {
                "start": {
                  "line": 134,
                  "column": 8
                },
                "end": {
                  "line": 137,
                  "column": 9
                }
              },
              "metadata": {},
              "type": "number"
            }
          ],
          "events": [],
          "styling": {
            "cssVariables": [],
            "selectors": []
          },
          "slots": [],
          "mixins": [
            "EsmmMixins.ListItemUtils"
          ]
        },
        {
          "description": "Missing options helper",
          "summary": "",
          "path": "mixins/missing-options-mixin.html",
          "properties": [
            {
              "name": "url",
              "type": "string",
              "description": "",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 16,
                  "column": 8
                },
                "end": {
                  "line": 16,
                  "column": 19
                }
              },
              "metadata": {
                "polymer": {}
              }
            },
            {
              "name": "ajaxParams",
              "type": "Object",
              "description": "",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 17,
                  "column": 8
                },
                "end": {
                  "line": 17,
                  "column": 26
                }
              },
              "metadata": {
                "polymer": {}
              }
            }
          ],
          "methods": [
            {
              "name": "requestMissingOptions",
              "description": "If there are no selected options that are not found in dropdown options then request them from server using\nurl and ajaxParams(values property will contain missing values)\najaxParams = {\n   values: 1 // single value\n}\n\najaxParams = {\n   values: 1,2,3,4 // multiple values\n}",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 34,
                  "column": 4
                },
                "end": {
                  "line": 57,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "notFoundValues",
                  "type": "Array"
                }
              ]
            },
            {
              "name": "handleMissingOptionsReqResponse",
              "description": "Handle missing option request response",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 63,
                  "column": 4
                },
                "end": {
                  "line": 91,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "response"
                }
              ]
            },
            {
              "name": "handleMissingOptionsReqError",
              "description": "Handle missing options request error",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 97,
                  "column": 4
                },
                "end": {
                  "line": 100,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "errorResponse"
                }
              ]
            },
            {
              "name": "shouldRequestMissingOption",
              "description": "Check if request missing option functionality can be used",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 107,
                  "column": 4
                },
                "end": {
                  "line": 112,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "url"
                }
              ],
              "return": {
                "type": "boolean"
              }
            },
            {
              "name": "isValidOption",
              "description": "Check if option received from missing options request is valid",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 119,
                  "column": 4
                },
                "end": {
                  "line": 121,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "optionObj"
                }
              ],
              "return": {
                "type": "(boolean|*)"
              }
            },
            {
              "name": "prepareReceivedOptions",
              "description": "Prepare new received options to add them to the current options list",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 128,
                  "column": 4
                },
                "end": {
                  "line": 149,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "receivedOptions"
                }
              ],
              "return": {
                "type": "*"
              }
            }
          ],
          "staticMethods": [],
          "demos": [],
          "metadata": {},
          "sourceRange": {
            "start": {
              "line": 12,
              "column": 2
            },
            "end": {
              "line": 151,
              "column": 4
            }
          },
          "privacy": "public",
          "name": "EsmmMixins.MissingOptions",
          "attributes": [
            {
              "name": "url",
              "description": "",
              "sourceRange": {
                "start": {
                  "line": 16,
                  "column": 8
                },
                "end": {
                  "line": 16,
                  "column": 19
                }
              },
              "metadata": {},
              "type": "string"
            },
            {
              "name": "ajax-params",
              "description": "",
              "sourceRange": {
                "start": {
                  "line": 17,
                  "column": 8
                },
                "end": {
                  "line": 17,
                  "column": 26
                }
              },
              "metadata": {},
              "type": "Object"
            }
          ],
          "events": [],
          "styling": {
            "cssVariables": [],
            "selectors": []
          },
          "slots": []
        }
      ]
    }
  ],
  "elements": [
    {
      "description": "",
      "summary": "",
      "path": "elements/selected-options.html",
      "properties": [
        {
          "name": "optionValue",
          "type": "string",
          "description": "Option object property to use as value for selection",
          "privacy": "public",
          "sourceRange": {
            "file": "../mixins/list-item-utils-mixin.html",
            "start": {
              "line": 17,
              "column": 12
            },
            "end": {
              "line": 20,
              "column": 13
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "\"value\"",
          "inheritedFrom": "EsmmMixins.ListItemUtils"
        },
        {
          "name": "optionLabel",
          "type": "string",
          "description": "Option object property to use as label",
          "privacy": "public",
          "sourceRange": {
            "file": "../mixins/list-item-utils-mixin.html",
            "start": {
              "line": 22,
              "column": 12
            },
            "end": {
              "line": 25,
              "column": 13
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "\"label\"",
          "inheritedFrom": "EsmmMixins.ListItemUtils"
        },
        {
          "name": "twoLinesLabel",
          "type": "boolean",
          "description": "Show option label on 2 lines",
          "privacy": "public",
          "sourceRange": {
            "file": "../mixins/list-item-utils-mixin.html",
            "start": {
              "line": 27,
              "column": 12
            },
            "end": {
              "line": 31,
              "column": 13
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false",
          "inheritedFrom": "EsmmMixins.ListItemUtils"
        },
        {
          "name": "noneOptionLabel",
          "type": "string",
          "description": "None option label",
          "privacy": "public",
          "sourceRange": {
            "file": "../mixins/list-item-utils-mixin.html",
            "start": {
              "line": 33,
              "column": 12
            },
            "end": {
              "line": 36,
              "column": 13
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "\"-- NONE --\"",
          "inheritedFrom": "EsmmMixins.ListItemUtils"
        },
        {
          "name": "capitalize",
          "type": "boolean",
          "description": "Capitalize selected values/option, UI only",
          "privacy": "public",
          "sourceRange": {
            "file": "../mixins/list-item-utils-mixin.html",
            "start": {
              "line": 38,
              "column": 12
            },
            "end": {
              "line": 41,
              "column": 13
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false",
          "inheritedFrom": "EsmmMixins.ListItemUtils"
        },
        {
          "name": "selectedItems",
          "type": "Array",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 126,
              "column": 10
            },
            "end": {
              "line": 126,
              "column": 30
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "label",
          "type": "string",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 127,
              "column": 10
            },
            "end": {
              "line": 127,
              "column": 23
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "noLabelFloat",
          "type": "boolean",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 128,
              "column": 10
            },
            "end": {
              "line": 128,
              "column": 31
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "alwaysFloatLabel",
          "type": "boolean",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 129,
              "column": 10
            },
            "end": {
              "line": 129,
              "column": 35
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "placeholder",
          "type": "string",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 130,
              "column": 10
            },
            "end": {
              "line": 130,
              "column": 29
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "autoValidate",
          "type": "boolean",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 131,
              "column": 10
            },
            "end": {
              "line": 131,
              "column": 31
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "readonly",
          "type": "boolean",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 132,
              "column": 10
            },
            "end": {
              "line": 132,
              "column": 27
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "disabled",
          "type": "boolean",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 133,
              "column": 10
            },
            "end": {
              "line": 133,
              "column": 27
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "invalid",
          "type": "boolean",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 134,
              "column": 10
            },
            "end": {
              "line": 134,
              "column": 26
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "errorMessage",
          "type": "string",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 135,
              "column": 10
            },
            "end": {
              "line": 135,
              "column": 30
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "_hidePlaceholder",
          "type": "boolean",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 136,
              "column": 10
            },
            "end": {
              "line": 136,
              "column": 35
            }
          },
          "metadata": {
            "polymer": {}
          }
        }
      ],
      "methods": [
        {
          "name": "getPrimaryLabel",
          "description": "Get option primary label. All chars until `|` .",
          "privacy": "public",
          "sourceRange": {
            "file": "../mixins/list-item-utils-mixin.html",
            "start": {
              "line": 50,
              "column": 8
            },
            "end": {
              "line": 59,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "label"
            }
          ],
          "return": {
            "type": "string"
          },
          "inheritedFrom": "EsmmMixins.ListItemUtils"
        },
        {
          "name": "getSecondaryLabel",
          "description": "Get option secondary label. All chars after `|`",
          "privacy": "public",
          "sourceRange": {
            "file": "../mixins/list-item-utils-mixin.html",
            "start": {
              "line": 66,
              "column": 8
            },
            "end": {
              "line": 78,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "label"
            }
          ],
          "return": {
            "type": "*"
          },
          "inheritedFrom": "EsmmMixins.ListItemUtils"
        },
        {
          "name": "_getValue",
          "description": "Get current option value",
          "privacy": "private",
          "sourceRange": {
            "file": "../mixins/list-item-utils-mixin.html",
            "start": {
              "line": 86,
              "column": 8
            },
            "end": {
              "line": 88,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "item"
            }
          ],
          "return": {
            "type": "null"
          },
          "inheritedFrom": "EsmmMixins.ListItemUtils"
        },
        {
          "name": "_getLabel",
          "description": "Get option label",
          "privacy": "private",
          "sourceRange": {
            "file": "../mixins/list-item-utils-mixin.html",
            "start": {
              "line": 96,
              "column": 8
            },
            "end": {
              "line": 106,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "item"
            }
          ],
          "return": {
            "type": "*"
          },
          "inheritedFrom": "EsmmMixins.ListItemUtils"
        },
        {
          "name": "_capitalizeString",
          "description": "Capitalize string",
          "privacy": "private",
          "sourceRange": {
            "file": "../mixins/list-item-utils-mixin.html",
            "start": {
              "line": 114,
              "column": 8
            },
            "end": {
              "line": 116,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "string"
            }
          ],
          "return": {
            "type": "string"
          },
          "inheritedFrom": "EsmmMixins.ListItemUtils"
        },
        {
          "name": "_computeAlwaysFloatLabel",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 146,
              "column": 6
            },
            "end": {
              "line": 148,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "alwaysFloatLabel"
            },
            {
              "name": "placeholder"
            }
          ],
          "return": {
            "type": "*"
          }
        },
        {
          "name": "_selectedItemsDisplayHasChanged",
          "description": "Show or hide placeholder",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 155,
              "column": 6
            },
            "end": {
              "line": 163,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ]
        },
        {
          "name": "_removeItem",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 170,
              "column": 6
            },
            "end": {
              "line": 177,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ]
        }
      ],
      "staticMethods": [],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 118,
          "column": 4
        },
        "end": {
          "line": 179,
          "column": 5
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "EsmmSelectedOptions",
      "attributes": [
        {
          "name": "option-value",
          "description": "Option object property to use as value for selection",
          "sourceRange": {
            "file": "../mixins/list-item-utils-mixin.html",
            "start": {
              "line": 17,
              "column": 12
            },
            "end": {
              "line": 20,
              "column": 13
            }
          },
          "metadata": {},
          "type": "string",
          "inheritedFrom": "EsmmMixins.ListItemUtils"
        },
        {
          "name": "option-label",
          "description": "Option object property to use as label",
          "sourceRange": {
            "file": "../mixins/list-item-utils-mixin.html",
            "start": {
              "line": 22,
              "column": 12
            },
            "end": {
              "line": 25,
              "column": 13
            }
          },
          "metadata": {},
          "type": "string",
          "inheritedFrom": "EsmmMixins.ListItemUtils"
        },
        {
          "name": "two-lines-label",
          "description": "Show option label on 2 lines",
          "sourceRange": {
            "file": "../mixins/list-item-utils-mixin.html",
            "start": {
              "line": 27,
              "column": 12
            },
            "end": {
              "line": 31,
              "column": 13
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "EsmmMixins.ListItemUtils"
        },
        {
          "name": "none-option-label",
          "description": "None option label",
          "sourceRange": {
            "file": "../mixins/list-item-utils-mixin.html",
            "start": {
              "line": 33,
              "column": 12
            },
            "end": {
              "line": 36,
              "column": 13
            }
          },
          "metadata": {},
          "type": "string",
          "inheritedFrom": "EsmmMixins.ListItemUtils"
        },
        {
          "name": "capitalize",
          "description": "Capitalize selected values/option, UI only",
          "sourceRange": {
            "file": "../mixins/list-item-utils-mixin.html",
            "start": {
              "line": 38,
              "column": 12
            },
            "end": {
              "line": 41,
              "column": 13
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "EsmmMixins.ListItemUtils"
        },
        {
          "name": "selected-items",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 126,
              "column": 10
            },
            "end": {
              "line": 126,
              "column": 30
            }
          },
          "metadata": {},
          "type": "Array"
        },
        {
          "name": "label",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 127,
              "column": 10
            },
            "end": {
              "line": 127,
              "column": 23
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "no-label-float",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 128,
              "column": 10
            },
            "end": {
              "line": 128,
              "column": 31
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "always-float-label",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 129,
              "column": 10
            },
            "end": {
              "line": 129,
              "column": 35
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "placeholder",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 130,
              "column": 10
            },
            "end": {
              "line": 130,
              "column": 29
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "auto-validate",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 131,
              "column": 10
            },
            "end": {
              "line": 131,
              "column": 31
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "readonly",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 132,
              "column": 10
            },
            "end": {
              "line": 132,
              "column": 27
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "disabled",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 133,
              "column": 10
            },
            "end": {
              "line": 133,
              "column": 27
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "invalid",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 134,
              "column": 10
            },
            "end": {
              "line": 134,
              "column": 26
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "error-message",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 135,
              "column": 10
            },
            "end": {
              "line": 135,
              "column": 30
            }
          },
          "metadata": {},
          "type": "string"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "remove-selected-item",
          "description": "remove-selected-item",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "esmm-selected-options",
      "mixins": [
        "EsmmMixins.ListItemUtils"
      ]
    },
    {
      "description": "",
      "summary": "",
      "path": "elements/searchbox-input.html",
      "properties": [
        {
          "name": "__serializing",
          "type": "boolean",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../bower_components/polymer/lib/mixins/property-accessors.html",
            "start": {
              "line": 125,
              "column": 8
            },
            "end": {
              "line": 125,
              "column": 27
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": false
            }
          },
          "inheritedFrom": "Polymer.PropertyAccessors"
        },
        {
          "name": "__dataCounter",
          "type": "number",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../bower_components/polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 1171,
              "column": 8
            },
            "end": {
              "line": 1171,
              "column": 27
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": false
            }
          },
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "__dataEnabled",
          "type": "boolean",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../bower_components/polymer/lib/mixins/property-accessors.html",
            "start": {
              "line": 129,
              "column": 8
            },
            "end": {
              "line": 129,
              "column": 27
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": false
            }
          },
          "inheritedFrom": "Polymer.PropertyAccessors"
        },
        {
          "name": "__dataReady",
          "type": "boolean",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../bower_components/polymer/lib/mixins/property-accessors.html",
            "start": {
              "line": 131,
              "column": 8
            },
            "end": {
              "line": 131,
              "column": 25
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": false
            }
          },
          "inheritedFrom": "Polymer.PropertyAccessors"
        },
        {
          "name": "__dataInvalid",
          "type": "boolean",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../bower_components/polymer/lib/mixins/property-accessors.html",
            "start": {
              "line": 133,
              "column": 8
            },
            "end": {
              "line": 133,
              "column": 27
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": false
            }
          },
          "inheritedFrom": "Polymer.PropertyAccessors"
        },
        {
          "name": "__data",
          "type": "!Object",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../bower_components/polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 1153,
              "column": 8
            },
            "end": {
              "line": 1153,
              "column": 20
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": false
            }
          },
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "__dataPending",
          "type": "!Object",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../bower_components/polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 1155,
              "column": 8
            },
            "end": {
              "line": 1155,
              "column": 27
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": false
            }
          },
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "__dataOld",
          "type": "!Object",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../bower_components/polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 1157,
              "column": 8
            },
            "end": {
              "line": 1157,
              "column": 23
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": false
            }
          },
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "__dataProto",
          "type": "Object",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../bower_components/polymer/lib/mixins/property-accessors.html",
            "start": {
              "line": 141,
              "column": 8
            },
            "end": {
              "line": 141,
              "column": 25
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": false
            }
          },
          "inheritedFrom": "Polymer.PropertyAccessors"
        },
        {
          "name": "__dataHasAccessor",
          "type": "Object",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../bower_components/polymer/lib/mixins/property-accessors.html",
            "start": {
              "line": 143,
              "column": 8
            },
            "end": {
              "line": 143,
              "column": 31
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": false
            }
          },
          "inheritedFrom": "Polymer.PropertyAccessors"
        },
        {
          "name": "__dataInstanceProps",
          "type": "Object",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../bower_components/polymer/lib/mixins/property-accessors.html",
            "start": {
              "line": 145,
              "column": 8
            },
            "end": {
              "line": 145,
              "column": 33
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": false
            }
          },
          "inheritedFrom": "Polymer.PropertyAccessors"
        },
        {
          "name": "__dataClientsReady",
          "type": "boolean",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../bower_components/polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 1135,
              "column": 8
            },
            "end": {
              "line": 1135,
              "column": 32
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": false
            }
          },
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "__dataPendingClients",
          "type": "Array",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../bower_components/polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 1137,
              "column": 8
            },
            "end": {
              "line": 1137,
              "column": 34
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": false
            }
          },
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "__dataToNotify",
          "type": "Object",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../bower_components/polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 1139,
              "column": 8
            },
            "end": {
              "line": 1139,
              "column": 28
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": false
            }
          },
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "__dataLinkedPaths",
          "type": "Object",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../bower_components/polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 1141,
              "column": 8
            },
            "end": {
              "line": 1141,
              "column": 31
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": false
            }
          },
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "__dataHasPaths",
          "type": "boolean",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../bower_components/polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 1143,
              "column": 8
            },
            "end": {
              "line": 1143,
              "column": 28
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": false
            }
          },
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "__dataCompoundStorage",
          "type": "Object",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../bower_components/polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 1145,
              "column": 8
            },
            "end": {
              "line": 1145,
              "column": 35
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": false
            }
          },
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "__dataHost",
          "type": "Polymer_PropertyEffects",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../bower_components/polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 1147,
              "column": 8
            },
            "end": {
              "line": 1147,
              "column": 24
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": false
            }
          },
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "__dataTemp",
          "type": "!Object",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../bower_components/polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 1149,
              "column": 8
            },
            "end": {
              "line": 1149,
              "column": 24
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": false
            }
          },
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "__dataClientsInitialized",
          "type": "boolean",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../bower_components/polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 1151,
              "column": 8
            },
            "end": {
              "line": 1151,
              "column": 38
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": false
            }
          },
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "__computeEffects",
          "type": "Object",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../bower_components/polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 1159,
              "column": 8
            },
            "end": {
              "line": 1159,
              "column": 30
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": false
            }
          },
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "__reflectEffects",
          "type": "Object",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../bower_components/polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 1161,
              "column": 8
            },
            "end": {
              "line": 1161,
              "column": 30
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": false
            }
          },
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "__notifyEffects",
          "type": "Object",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../bower_components/polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 1163,
              "column": 8
            },
            "end": {
              "line": 1163,
              "column": 29
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": false
            }
          },
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "__propagateEffects",
          "type": "Object",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../bower_components/polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 1165,
              "column": 8
            },
            "end": {
              "line": 1165,
              "column": 32
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": false
            }
          },
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "__observeEffects",
          "type": "Object",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../bower_components/polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 1167,
              "column": 8
            },
            "end": {
              "line": 1167,
              "column": 30
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": false
            }
          },
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "__readOnly",
          "type": "Object",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../bower_components/polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 1169,
              "column": 8
            },
            "end": {
              "line": 1169,
              "column": 24
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": false
            }
          },
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "__templateInfo",
          "type": "!TemplateInfo",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../bower_components/polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 1173,
              "column": 8
            },
            "end": {
              "line": 1173,
              "column": 28
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": false
            }
          },
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "_template",
          "type": "HTMLTemplateElement",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../bower_components/polymer/lib/mixins/element-mixin.html",
            "start": {
              "line": 560,
              "column": 8
            },
            "end": {
              "line": 560,
              "column": 23
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": false
            }
          },
          "inheritedFrom": "Polymer.ElementMixin"
        },
        {
          "name": "_importPath",
          "type": "string",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../bower_components/polymer/lib/mixins/element-mixin.html",
            "start": {
              "line": 562,
              "column": 8
            },
            "end": {
              "line": 562,
              "column": 25
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": false
            }
          },
          "inheritedFrom": "Polymer.ElementMixin"
        },
        {
          "name": "rootPath",
          "type": "string",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "../bower_components/polymer/lib/mixins/element-mixin.html",
            "start": {
              "line": 564,
              "column": 8
            },
            "end": {
              "line": 564,
              "column": 22
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": false
            }
          },
          "inheritedFrom": "Polymer.ElementMixin"
        },
        {
          "name": "importPath",
          "type": "string",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "../bower_components/polymer/lib/mixins/element-mixin.html",
            "start": {
              "line": 566,
              "column": 8
            },
            "end": {
              "line": 566,
              "column": 24
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": false
            }
          },
          "inheritedFrom": "Polymer.ElementMixin"
        },
        {
          "name": "root",
          "type": "(StampedTemplate|HTMLElement|ShadowRoot)",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "../bower_components/polymer/lib/mixins/element-mixin.html",
            "start": {
              "line": 568,
              "column": 8
            },
            "end": {
              "line": 568,
              "column": 18
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": false
            }
          },
          "inheritedFrom": "Polymer.ElementMixin"
        },
        {
          "name": "$",
          "type": "!Object.<string, !Element>",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "../bower_components/polymer/lib/mixins/element-mixin.html",
            "start": {
              "line": 570,
              "column": 8
            },
            "end": {
              "line": 570,
              "column": 15
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": false
            }
          },
          "inheritedFrom": "Polymer.ElementMixin"
        },
        {
          "name": "search",
          "type": "string",
          "description": "Search string property",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 54,
              "column": 10
            },
            "end": {
              "line": 57,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          }
        }
      ],
      "methods": [
        {
          "name": "_stampTemplate",
          "description": "Stamps the provided template and performs instance-time setup for\nPolymer template features, including data bindings, declarative event\nlisteners, and the `this.$` map of `id`'s to nodes.  A document fragment\nis returned containing the stamped DOM, ready for insertion into the\nDOM.\n\nThis method may be called more than once; however note that due to\n`shadycss` polyfill limitations, only styles from templates prepared\nusing `ShadyCSS.prepareTemplate` will be correctly polyfilled (scoped\nto the shadow root and support CSS custom properties), and note that\n`ShadyCSS.prepareTemplate` may only be called once per element. As such,\nany styles required by in runtime-stamped templates must be included\nin the main element template.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../bower_components/polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 2366,
              "column": 6
            },
            "end": {
              "line": 2391,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "template",
              "type": "!HTMLTemplateElement",
              "description": "Template to stamp"
            }
          ],
          "return": {
            "type": "!StampedTemplate",
            "desc": "Cloned template content"
          },
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "_addMethodEventListenerToNode",
          "description": "Adds an event listener by method name for the event provided.\n\nThis method generates a handler function that looks up the method\nname at handling time.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../bower_components/polymer/lib/mixins/template-stamp.html",
            "start": {
              "line": 452,
              "column": 6
            },
            "end": {
              "line": 457,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "node",
              "type": "Node",
              "description": "Node to add listener on"
            },
            {
              "name": "eventName",
              "type": "string",
              "description": "Name of event"
            },
            {
              "name": "methodName",
              "type": "string",
              "description": "Name of method"
            },
            {
              "name": "context",
              "type": "*=",
              "description": "Context the method will be called on (defaults\n  to `node`)"
            }
          ],
          "return": {
            "type": "Function",
            "desc": "Generated handler function"
          },
          "inheritedFrom": "Polymer.TemplateStamp"
        },
        {
          "name": "_addEventListenerToNode",
          "description": "Override point for adding custom or simulated event handling.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../bower_components/polymer/lib/mixins/template-stamp.html",
            "start": {
              "line": 467,
              "column": 6
            },
            "end": {
              "line": 469,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "node",
              "type": "Node",
              "description": "Node to add event listener to"
            },
            {
              "name": "eventName",
              "type": "string",
              "description": "Name of event"
            },
            {
              "name": "handler",
              "type": "Function",
              "description": "Listener function to add"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "Polymer.TemplateStamp"
        },
        {
          "name": "_removeEventListenerFromNode",
          "description": "Override point for adding custom or simulated event handling.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../bower_components/polymer/lib/mixins/template-stamp.html",
            "start": {
              "line": 479,
              "column": 6
            },
            "end": {
              "line": 481,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "node",
              "type": "Node",
              "description": "Node to remove event listener from"
            },
            {
              "name": "eventName",
              "type": "string",
              "description": "Name of event"
            },
            {
              "name": "handler",
              "type": "Function",
              "description": "Listener function to remove"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "Polymer.TemplateStamp"
        },
        {
          "name": "attributeChangedCallback",
          "description": "Provides a default implementation of the standard Custom Elements\n`attributeChangedCallback`.\n\nBy default, attributes declared in `properties` metadata are\ndeserialized using their `type` information to properties of the\nsame name.  \"Dash-cased\" attributes are deserialized to \"camelCase\"\nproperties.",
          "privacy": "public",
          "sourceRange": {
            "file": "../bower_components/polymer/lib/mixins/element-mixin.html",
            "start": {
              "line": 754,
              "column": 6
            },
            "end": {
              "line": 762,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "name",
              "type": "string",
              "description": "Name of attribute."
            },
            {
              "name": "old",
              "type": "?string",
              "description": "Old value of attribute."
            },
            {
              "name": "value",
              "type": "?string",
              "description": "Current value of attribute."
            }
          ],
          "inheritedFrom": "Polymer.ElementMixin"
        },
        {
          "name": "_initializeProperties",
          "description": "Overrides the default `Polymer.PropertyAccessors` to ensure class\nmetaprogramming related to property accessors and effects has\ncompleted (calls `finalize`).\n\nIt also initializes any property defaults provided via `value` in\n`properties` metadata.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../bower_components/polymer/lib/mixins/element-mixin.html",
            "start": {
              "line": 584,
              "column": 6
            },
            "end": {
              "line": 618,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.ElementMixin"
        },
        {
          "name": "_initializeProtoProperties",
          "description": "Overrides `Polymer.PropertyAccessors` implementation to provide a\nmore efficient implementation of initializing properties from\nthe prototype on the instance.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../bower_components/polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 1203,
              "column": 6
            },
            "end": {
              "line": 1207,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "props",
              "type": "Object",
              "description": "Properties to initialize on the prototype"
            }
          ],
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "_initializeInstanceProperties",
          "description": "Overrides `Polymer.PropertyAccessors` implementation to avoid setting\n`_setProperty`'s `shouldNotify: true`.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../bower_components/polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 1216,
              "column": 6
            },
            "end": {
              "line": 1225,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "props",
              "type": "Object",
              "description": "Properties to initialize on the instance"
            }
          ],
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "_ensureAttribute",
          "description": "Ensures the element has the given attribute. If it does not,\nassigns the given value to the attribute.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../bower_components/polymer/lib/mixins/property-accessors.html",
            "start": {
              "line": 242,
              "column": 6
            },
            "end": {
              "line": 246,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "attribute",
              "type": "string",
              "description": "Name of attribute to ensure is set."
            },
            {
              "name": "value",
              "type": "string",
              "description": "of the attribute."
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "Polymer.PropertyAccessors"
        },
        {
          "name": "_attributeToProperty",
          "description": "Deserializes an attribute to its associated property.\n\nThis method calls the `_deserializeValue` method to convert the string to\na typed value.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../bower_components/polymer/lib/mixins/property-accessors.html",
            "start": {
              "line": 259,
              "column": 6
            },
            "end": {
              "line": 265,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "attribute",
              "type": "string",
              "description": "Name of attribute to deserialize."
            },
            {
              "name": "value",
              "type": "?string",
              "description": "of the attribute."
            },
            {
              "name": "type",
              "type": "*=",
              "description": "type to deserialize to."
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "Polymer.PropertyAccessors"
        },
        {
          "name": "_propertyToAttribute",
          "description": "Serializes a property to its associated attribute.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../bower_components/polymer/lib/mixins/property-accessors.html",
            "start": {
              "line": 275,
              "column": 6
            },
            "end": {
              "line": 281,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "property",
              "type": "string",
              "description": "Property name to reflect."
            },
            {
              "name": "attribute",
              "type": "string=",
              "description": "Attribute name to reflect."
            },
            {
              "name": "value",
              "type": "*=",
              "description": "Property value to refect."
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "Polymer.PropertyAccessors"
        },
        {
          "name": "_valueToNodeAttribute",
          "description": "Sets a typed value to an HTML attribute on a node.\n\nThis method calls the `_serializeValue` method to convert the typed\nvalue to a string.  If the `_serializeValue` method returns `undefined`,\nthe attribute will be removed (this is the default for boolean\ntype `false`).",
          "privacy": "protected",
          "sourceRange": {
            "file": "../bower_components/polymer/lib/mixins/property-accessors.html",
            "start": {
              "line": 296,
              "column": 6
            },
            "end": {
              "line": 303,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "node",
              "type": "Element",
              "description": "Element to set attribute to."
            },
            {
              "name": "value",
              "type": "*",
              "description": "Value to serialize."
            },
            {
              "name": "attribute",
              "type": "string",
              "description": "Attribute name to serialize to."
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "Polymer.PropertyAccessors"
        },
        {
          "name": "_serializeValue",
          "description": "Converts a typed JavaScript value to a string.\n\nThis method is called by Polymer when setting JS property values to\nHTML attributes.  Users may override this method on Polymer element\nprototypes to provide serialization for custom types.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../bower_components/polymer/lib/mixins/property-accessors.html",
            "start": {
              "line": 315,
              "column": 6
            },
            "end": {
              "line": 335,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value",
              "type": "*",
              "description": "Property value to serialize."
            }
          ],
          "return": {
            "type": "(string|undefined)",
            "desc": "String serialized from the provided property value."
          },
          "inheritedFrom": "Polymer.PropertyAccessors"
        },
        {
          "name": "_deserializeValue",
          "description": "Converts a string to a typed JavaScript value.\n\nThis method is called by Polymer when reading HTML attribute values to\nJS properties.  Users may override this method on Polymer element\nprototypes to provide deserialization for custom `type`s.  Note,\nthe `type` argument is the value of the `type` field provided in the\n`properties` configuration object for a given property, and is\nby convention the constructor for the type to deserialize.\n\nNote: The return value of `undefined` is used as a sentinel value to\nindicate the attribute should be removed.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../bower_components/polymer/lib/mixins/property-accessors.html",
            "start": {
              "line": 354,
              "column": 6
            },
            "end": {
              "line": 397,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value",
              "type": "?string",
              "description": "Attribute value to deserialize."
            },
            {
              "name": "type",
              "type": "*=",
              "description": "Type to deserialize the string to."
            }
          ],
          "return": {
            "type": "*",
            "desc": "Typed value deserialized from the provided string."
          },
          "inheritedFrom": "Polymer.PropertyAccessors"
        },
        {
          "name": "_createPropertyAccessor",
          "description": "Creates a setter/getter pair for the named property with its own\nlocal storage.  The getter returns the value in the local storage,\nand the setter calls `_setProperty`, which updates the local storage\nfor the property and enqueues a `_propertiesChanged` callback.\n\nThis method may be called on a prototype or an instance.  Calling\nthis method may overwrite a property value that already exists on\nthe prototype/instance by creating the accessor.  When calling on\na prototype, any overwritten values are saved in `__dataProto`,\nand it is up to the subclasser to decide how/when to set those\nproperties back into the accessor.  When calling on an instance,\nthe overwritten value is set via `_setPendingProperty`, and the\nuser should call `_invalidateProperties` or `_flushProperties`\nfor the values to take effect.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../bower_components/polymer/lib/mixins/property-accessors.html",
            "start": {
              "line": 422,
              "column": 6
            },
            "end": {
              "line": 442,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "property",
              "type": "string",
              "description": "Name of the property"
            },
            {
              "name": "readOnly",
              "type": "boolean=",
              "description": "When true, no setter is created; the\n  protected `_setProperty` function must be used to set the property"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "Polymer.PropertyAccessors"
        },
        {
          "name": "_hasAccessor",
          "description": "Returns true if this library created an accessor for the given property.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../bower_components/polymer/lib/mixins/property-accessors.html",
            "start": {
              "line": 450,
              "column": 6
            },
            "end": {
              "line": 452,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "property",
              "type": "string",
              "description": "Property name"
            }
          ],
          "return": {
            "type": "boolean",
            "desc": "True if an accessor was created"
          },
          "inheritedFrom": "Polymer.PropertyAccessors"
        },
        {
          "name": "_setProperty",
          "description": "Overrides base implementation to ensure all accessors set `shouldNotify`\nto true, for per-property notification tracking.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../bower_components/polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 1495,
              "column": 6
            },
            "end": {
              "line": 1499,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "property"
            },
            {
              "name": "value"
            }
          ],
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "_setPendingProperty",
          "description": "Overrides the `PropertyAccessors` implementation to introduce special\ndirty check logic depending on the property & value being set:\n\n1. Any value set to a path (e.g. 'obj.prop': 42 or 'obj.prop': {...})\n   Stored in `__dataTemp`, dirty checked against `__dataTemp`\n2. Object set to simple property (e.g. 'prop': {...})\n   Stored in `__dataTemp` and `__data`, dirty checked against\n   `__dataTemp` by default implementation of `_shouldPropertyChange`\n3. Primitive value set to simple property (e.g. 'prop': 42)\n   Stored in `__data`, dirty checked against `__data`\n\nThe dirty-check is important to prevent cycles due to two-way\nnotification, but paths and objects are only dirty checked against any\nprevious value set during this turn via a \"temporary cache\" that is\ncleared when the last `_propertiesChanged` exits. This is so:\na. any cached array paths (e.g. 'array.3.prop') may be invalidated\n   due to array mutations like shift/unshift/splice; this is fine\n   since path changes are dirty-checked at user entry points like `set`\nb. dirty-checking for objects only lasts one turn to allow the user\n   to mutate the object in-place and re-set it with the same identity\n   and have all sub-properties re-propagated in a subsequent turn.\n\nThe temp cache is not necessarily sufficient to prevent invalid array\npaths, since a splice can happen during the same turn (with pathological\nuser code); we could introduce a \"fixup\" for temporarily cached array\npaths if needed: https://github.com/Polymer/polymer/issues/4227",
          "privacy": "protected",
          "sourceRange": {
            "file": "../bower_components/polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 1458,
              "column": 6
            },
            "end": {
              "line": 1487,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "property",
              "type": "string",
              "description": "Name of the property"
            },
            {
              "name": "value",
              "type": "*",
              "description": "Value to set"
            },
            {
              "name": "shouldNotify",
              "type": "boolean=",
              "description": "True if property should fire notification\n  event (applies only for `notify: true` properties)"
            }
          ],
          "return": {
            "type": "boolean",
            "desc": "Returns true if the property changed"
          },
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "_isPropertyPending",
          "description": "Returns true if the specified property has a pending change.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../bower_components/polymer/lib/mixins/property-accessors.html",
            "start": {
              "line": 505,
              "column": 6
            },
            "end": {
              "line": 507,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "prop",
              "type": "string",
              "description": "Property name"
            }
          ],
          "return": {
            "type": "boolean",
            "desc": "True if property has a pending change"
          },
          "inheritedFrom": "Polymer.PropertyAccessors"
        },
        {
          "name": "_invalidateProperties",
          "description": "Overrides `PropertyAccessor`'s default async queuing of\n`_propertiesChanged`: if `__dataReady` is false (has not yet been\nmanually flushed), the function no-ops; otherwise flushes\n`_propertiesChanged` synchronously.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../bower_components/polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 1509,
              "column": 6
            },
            "end": {
              "line": 1513,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "_enableProperties",
          "description": "Call to enable property accessor processing. Before this method is\ncalled accessor values will be set but side effects are\nqueued. When called, any pending side effects occur immediately.\nFor elements, generally `connectedCallback` is a normal spot to do so.\nIt is safe to call this method multiple times as it only turns on\nproperty accessors once.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../bower_components/polymer/lib/mixins/property-accessors.html",
            "start": {
              "line": 538,
              "column": 6
            },
            "end": {
              "line": 547,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "Polymer.PropertyAccessors"
        },
        {
          "name": "_flushProperties",
          "description": "Calls the `_propertiesChanged` callback with the current set of\npending changes (and old values recorded when pending changes were\nset), and resets the pending set of changes. Generally, this method\nshould not be called in user code.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../bower_components/polymer/lib/mixins/property-accessors.html",
            "start": {
              "line": 558,
              "column": 6
            },
            "end": {
              "line": 566,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "Polymer.PropertyAccessors"
        },
        {
          "name": "ready",
          "description": "Stamps the element template.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../bower_components/polymer/lib/mixins/element-mixin.html",
            "start": {
              "line": 682,
              "column": 6
            },
            "end": {
              "line": 688,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.ElementMixin"
        },
        {
          "name": "_propertiesChanged",
          "description": "Implements `PropertyAccessors`'s properties changed callback.\n\nRuns each class of effects for the batch of changed properties in\na specific order (compute, propagate, reflect, observe, notify).",
          "privacy": "protected",
          "sourceRange": {
            "file": "../bower_components/polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 1652,
              "column": 6
            },
            "end": {
              "line": 1685,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "currentProps"
            },
            {
              "name": "changedProps"
            },
            {
              "name": "oldProps"
            }
          ],
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "_shouldPropertyChange",
          "description": "Method called to determine whether a property value should be\nconsidered as a change and cause the `_propertiesChanged` callback\nto be enqueued.\n\nThe default implementation returns `true` for primitive types if a\nstrict equality check fails, and returns `true` for all Object/Arrays.\nThe method always returns false for `NaN`.\n\nOverride this method to e.g. provide stricter checking for\nObjects/Arrays when using immutable patterns.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../bower_components/polymer/lib/mixins/property-accessors.html",
            "start": {
              "line": 621,
              "column": 6
            },
            "end": {
              "line": 624,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "property",
              "type": "string",
              "description": "Property name"
            },
            {
              "name": "value",
              "type": "*",
              "description": "New property value"
            },
            {
              "name": "old",
              "type": "*",
              "description": "Previous property value"
            }
          ],
          "return": {
            "type": "boolean",
            "desc": "Whether the property should be considered a change\n  and enqueue a `_propertiesChanged` callback"
          },
          "inheritedFrom": "Polymer.PropertyAccessors"
        },
        {
          "name": "_addPropertyEffect",
          "description": "Equivalent to static `addPropertyEffect` API but can be called on\nan instance to add effects at runtime.  See that method for\nfull API docs.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../bower_components/polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 1240,
              "column": 6
            },
            "end": {
              "line": 1248,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "property",
              "type": "string",
              "description": "Property that should trigger the effect"
            },
            {
              "name": "type",
              "type": "string",
              "description": "Effect type, from this.PROPERTY_EFFECT_TYPES"
            },
            {
              "name": "effect",
              "type": "Object=",
              "description": "Effect metadata object"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "_removePropertyEffect",
          "description": "Removes the given property effect.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../bower_components/polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 1258,
              "column": 6
            },
            "end": {
              "line": 1264,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "property",
              "type": "string",
              "description": "Property the effect was associated with"
            },
            {
              "name": "type",
              "type": "string",
              "description": "Effect type, from this.PROPERTY_EFFECT_TYPES"
            },
            {
              "name": "effect",
              "type": "Object=",
              "description": "Effect metadata object to remove"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "_hasPropertyEffect",
          "description": "Returns whether the current prototype/instance has a property effect\nof a certain type.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../bower_components/polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 1275,
              "column": 6
            },
            "end": {
              "line": 1278,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "property",
              "type": "string",
              "description": "Property name"
            },
            {
              "name": "type",
              "type": "string=",
              "description": "Effect type, from this.PROPERTY_EFFECT_TYPES"
            }
          ],
          "return": {
            "type": "boolean",
            "desc": "True if the prototype/instance has an effect of this type"
          },
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "_hasReadOnlyEffect",
          "description": "Returns whether the current prototype/instance has a \"read only\"\naccessor for the given property.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../bower_components/polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 1288,
              "column": 6
            },
            "end": {
              "line": 1290,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "property",
              "type": "string",
              "description": "Property name"
            }
          ],
          "return": {
            "type": "boolean",
            "desc": "True if the prototype/instance has an effect of this type"
          },
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "_hasNotifyEffect",
          "description": "Returns whether the current prototype/instance has a \"notify\"\nproperty effect for the given property.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../bower_components/polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 1300,
              "column": 6
            },
            "end": {
              "line": 1302,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "property",
              "type": "string",
              "description": "Property name"
            }
          ],
          "return": {
            "type": "boolean",
            "desc": "True if the prototype/instance has an effect of this type"
          },
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "_hasReflectEffect",
          "description": "Returns whether the current prototype/instance has a \"reflect to attribute\"\nproperty effect for the given property.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../bower_components/polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 1312,
              "column": 6
            },
            "end": {
              "line": 1314,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "property",
              "type": "string",
              "description": "Property name"
            }
          ],
          "return": {
            "type": "boolean",
            "desc": "True if the prototype/instance has an effect of this type"
          },
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "_hasComputedEffect",
          "description": "Returns whether the current prototype/instance has a \"computed\"\nproperty effect for the given property.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../bower_components/polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 1324,
              "column": 6
            },
            "end": {
              "line": 1326,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "property",
              "type": "string",
              "description": "Property name"
            }
          ],
          "return": {
            "type": "boolean",
            "desc": "True if the prototype/instance has an effect of this type"
          },
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "_setPendingPropertyOrPath",
          "description": "Sets a pending property or path.  If the root property of the path in\nquestion had no accessor, the path is set, otherwise it is enqueued\nvia `_setPendingProperty`.\n\nThis function isolates relatively expensive functionality necessary\nfor the public API (`set`, `setProperties`, `notifyPath`, and property\nchange listeners via {{...}} bindings), such that it is only done\nwhen paths enter the system, and not at every propagation step.  It\nalso sets a `__dataHasPaths` flag on the instance which is used to\nfast-path slower path-matching code in the property effects host paths.\n\n`path` can be a path string or array of path parts as accepted by the\npublic API.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../bower_components/polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 1358,
              "column": 6
            },
            "end": {
              "line": 1390,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "path",
              "type": "(string|!Array.<(number|string)>)",
              "description": "Path to set"
            },
            {
              "name": "value",
              "type": "*",
              "description": "Value to set"
            },
            {
              "name": "shouldNotify",
              "type": "boolean=",
              "description": "Set to true if this change should\n cause a property notification event dispatch"
            },
            {
              "name": "isPathNotification",
              "type": "boolean=",
              "description": "If the path being set is a path\n  notification of an already changed value, as opposed to a request\n  to set and notify the change.  In the latter `false` case, a dirty\n  check is performed and then the value is set to the path before\n  enqueuing the pending property change."
            }
          ],
          "return": {
            "type": "boolean",
            "desc": "Returns true if the property/path was enqueued in\n  the pending changes bag."
          },
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "_setUnmanagedPropertyToNode",
          "description": "Applies a value to a non-Polymer element/node's property.\n\nThe implementation makes a best-effort at binding interop:\nSome native element properties have side-effects when\nre-setting the same value (e.g. setting `<input>.value` resets the\ncursor position), so we do a dirty-check before setting the value.\nHowever, for better interop with non-Polymer custom elements that\naccept objects, we explicitly re-set object changes coming from the\nPolymer world (which may include deep object changes without the\ntop reference changing), erring on the side of providing more\ninformation.\n\nUsers may override this method to provide alternate approaches.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../bower_components/polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 1413,
              "column": 6
            },
            "end": {
              "line": 1421,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "node",
              "type": "Node",
              "description": "The node to set a property on"
            },
            {
              "name": "prop",
              "type": "string",
              "description": "The property to set"
            },
            {
              "name": "value",
              "type": "*",
              "description": "The value to set"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "_enqueueClient",
          "description": "Enqueues the given client on a list of pending clients, whose\npending property changes can later be flushed via a call to\n`_flushClients`.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../bower_components/polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 1524,
              "column": 6
            },
            "end": {
              "line": 1529,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "client",
              "type": "Object",
              "description": "PropertyEffects client to enqueue"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "_flushClients",
          "description": "Flushes any clients previously enqueued via `_enqueueClient`, causing\ntheir `_flushProperties` method to run.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../bower_components/polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 1538,
              "column": 6
            },
            "end": {
              "line": 1549,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "__enableOrFlushClients",
          "description": "(c) the stamped dom enables.",
          "privacy": "private",
          "sourceRange": {
            "file": "../bower_components/polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 1563,
              "column": 6
            },
            "end": {
              "line": 1576,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "_readyClients",
          "description": "Implements `PropertyEffects`'s `_readyClients` call. Attaches\nelement dom by calling `_attachDom` with the dom stamped from the\nelement's template via `_stampTemplate`. Note that this allows\nclient dom to be attached to the element prior to any observers\nrunning.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../bower_components/polymer/lib/mixins/element-mixin.html",
            "start": {
              "line": 699,
              "column": 6
            },
            "end": {
              "line": 708,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.ElementMixin"
        },
        {
          "name": "setProperties",
          "description": "Sets a bag of property changes to this instance, and\nsynchronously processes all effects of the properties as a batch.\n\nProperty names must be simple properties, not paths.  Batched\npath propagation is not supported.",
          "privacy": "public",
          "sourceRange": {
            "file": "../bower_components/polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 1605,
              "column": 6
            },
            "end": {
              "line": 1616,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "props",
              "type": "Object",
              "description": "Bag of one or more key-value pairs whose key is\n  a property and value is the new value to set for that property."
            },
            {
              "name": "setReadOnly",
              "type": "boolean=",
              "description": "When true, any private values set in\n  `props` will be set. By default, `setProperties` will not set\n  `readOnly: true` root properties."
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "_propagatePropertyChanges",
          "description": "Called to propagate any property changes to stamped template nodes\nmanaged by this element.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../bower_components/polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 1697,
              "column": 6
            },
            "end": {
              "line": 1707,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "changedProps",
              "type": "Object",
              "description": "Bag of changed properties"
            },
            {
              "name": "oldProps",
              "type": "Object",
              "description": "Bag of previous values for changed properties"
            },
            {
              "name": "hasPaths",
              "type": "boolean",
              "description": "True with `props` contains one or more paths"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "linkPaths",
          "description": "Aliases one data path as another, such that path notifications from one\nare routed to the other.",
          "privacy": "public",
          "sourceRange": {
            "file": "../bower_components/polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 1718,
              "column": 6
            },
            "end": {
              "line": 1723,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "to",
              "type": "(string|!Array.<(string|number)>)",
              "description": "Target path to link."
            },
            {
              "name": "from",
              "type": "(string|!Array.<(string|number)>)",
              "description": "Source path to link."
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "unlinkPaths",
          "description": "Removes a data path alias previously established with `_linkPaths`.\n\nNote, the path to unlink should be the target (`to`) used when\nlinking the paths.",
          "privacy": "public",
          "sourceRange": {
            "file": "../bower_components/polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 1735,
              "column": 6
            },
            "end": {
              "line": 1740,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "path",
              "type": "(string|!Array.<(string|number)>)",
              "description": "Target path to unlink."
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "notifySplices",
          "description": "Notify that an array has changed.\n\nExample:\n\n    this.items = [ {name: 'Jim'}, {name: 'Todd'}, {name: 'Bill'} ];\n    ...\n    this.items.splice(1, 1, {name: 'Sam'});\n    this.items.push({name: 'Bob'});\n    this.notifySplices('items', [\n      { index: 1, removed: [{name: 'Todd'}], addedCount: 1, object: this.items, type: 'splice' },\n      { index: 3, removed: [], addedCount: 1, object: this.items, type: 'splice'}\n    ]);",
          "privacy": "public",
          "sourceRange": {
            "file": "../bower_components/polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 1772,
              "column": 6
            },
            "end": {
              "line": 1776,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "path",
              "type": "string",
              "description": "Path that should be notified."
            },
            {
              "name": "splices",
              "type": "Array",
              "description": "Array of splice records indicating ordered\n  changes that occurred to the array. Each record should have the\n  following fields:\n   * index: index at which the change occurred\n   * removed: array of items that were removed from this index\n   * addedCount: number of new items added at this index\n   * object: a reference to the array in question\n   * type: the string literal 'splice'\n\n  Note that splice records _must_ be normalized such that they are\n  reported in index order (raw results from `Object.observe` are not\n  ordered and must be normalized/merged before notifying)."
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "get",
          "description": "Convenience method for reading a value from a path.\n\nNote, if any part in the path is undefined, this method returns\n`undefined` (this method does not throw when dereferencing undefined\npaths).",
          "privacy": "public",
          "sourceRange": {
            "file": "../bower_components/polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 1797,
              "column": 6
            },
            "end": {
              "line": 1799,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "path",
              "type": "(string|!Array.<(string|number)>)",
              "description": "Path to the value\n  to read.  The path may be specified as a string (e.g. `foo.bar.baz`)\n  or an array of path parts (e.g. `['foo.bar', 'baz']`).  Note that\n  bracketed expressions are not supported; string-based path parts\n  *must* be separated by dots.  Note that when dereferencing array\n  indices, the index may be used as a dotted part directly\n  (e.g. `users.12.name` or `['users', 12, 'name']`)."
            },
            {
              "name": "root",
              "type": "Object=",
              "description": "Root object from which the path is evaluated."
            }
          ],
          "return": {
            "type": "*",
            "desc": "Value at the path, or `undefined` if any part of the path\n  is undefined."
          },
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "set",
          "description": "Convenience method for setting a value to a path and notifying any\nelements bound to the same path.\n\nNote, if any part in the path except for the last is undefined,\nthis method does nothing (this method does not throw when\ndereferencing undefined paths).",
          "privacy": "public",
          "sourceRange": {
            "file": "../bower_components/polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 1822,
              "column": 6
            },
            "end": {
              "line": 1832,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "path",
              "type": "(string|!Array.<(string|number)>)",
              "description": "Path to the value\n  to write.  The path may be specified as a string (e.g. `'foo.bar.baz'`)\n  or an array of path parts (e.g. `['foo.bar', 'baz']`).  Note that\n  bracketed expressions are not supported; string-based path parts\n  *must* be separated by dots.  Note that when dereferencing array\n  indices, the index may be used as a dotted part directly\n  (e.g. `'users.12.name'` or `['users', 12, 'name']`)."
            },
            {
              "name": "value",
              "type": "*",
              "description": "Value to set at the specified path."
            },
            {
              "name": "root",
              "type": "Object=",
              "description": "Root object from which the path is evaluated.\n  When specified, no notification will occur."
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "push",
          "description": "Adds items onto the end of the array at the path specified.\n\nThe arguments after `path` and return value match that of\n`Array.prototype.push`.\n\nThis method notifies other paths to the same array that a\nsplice occurred to the array.",
          "privacy": "public",
          "sourceRange": {
            "file": "../bower_components/polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 1848,
              "column": 6
            },
            "end": {
              "line": 1857,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "path",
              "type": "(string|!Array.<(string|number)>)",
              "description": "Path to array."
            },
            {
              "name": "items",
              "type": "...*",
              "rest": true,
              "description": "Items to push onto array"
            }
          ],
          "return": {
            "type": "number",
            "desc": "New length of the array."
          },
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "pop",
          "description": "Removes an item from the end of array at the path specified.\n\nThe arguments after `path` and return value match that of\n`Array.prototype.pop`.\n\nThis method notifies other paths to the same array that a\nsplice occurred to the array.",
          "privacy": "public",
          "sourceRange": {
            "file": "../bower_components/polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 1872,
              "column": 6
            },
            "end": {
              "line": 1881,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "path",
              "type": "(string|!Array.<(string|number)>)",
              "description": "Path to array."
            }
          ],
          "return": {
            "type": "*",
            "desc": "Item that was removed."
          },
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "splice",
          "description": "Starting from the start index specified, removes 0 or more items\nfrom the array and inserts 0 or more new items in their place.\n\nThe arguments after `path` and return value match that of\n`Array.prototype.splice`.\n\nThis method notifies other paths to the same array that a\nsplice occurred to the array.",
          "privacy": "public",
          "sourceRange": {
            "file": "../bower_components/polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 1900,
              "column": 6
            },
            "end": {
              "line": 1917,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "path",
              "type": "(string|!Array.<(string|number)>)",
              "description": "Path to array."
            },
            {
              "name": "start",
              "type": "number",
              "description": "Index from which to start removing/inserting."
            },
            {
              "name": "deleteCount",
              "type": "number",
              "description": "Number of items to remove."
            },
            {
              "name": "items",
              "type": "...*",
              "rest": true,
              "description": "Items to insert into array."
            }
          ],
          "return": {
            "type": "Array",
            "desc": "Array of removed items."
          },
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "shift",
          "description": "Removes an item from the beginning of array at the path specified.\n\nThe arguments after `path` and return value match that of\n`Array.prototype.pop`.\n\nThis method notifies other paths to the same array that a\nsplice occurred to the array.",
          "privacy": "public",
          "sourceRange": {
            "file": "../bower_components/polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 1932,
              "column": 6
            },
            "end": {
              "line": 1941,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "path",
              "type": "(string|!Array.<(string|number)>)",
              "description": "Path to array."
            }
          ],
          "return": {
            "type": "*",
            "desc": "Item that was removed."
          },
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "unshift",
          "description": "Adds items onto the beginning of the array at the path specified.\n\nThe arguments after `path` and return value match that of\n`Array.prototype.push`.\n\nThis method notifies other paths to the same array that a\nsplice occurred to the array.",
          "privacy": "public",
          "sourceRange": {
            "file": "../bower_components/polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 1957,
              "column": 6
            },
            "end": {
              "line": 1965,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "path",
              "type": "(string|!Array.<(string|number)>)",
              "description": "Path to array."
            },
            {
              "name": "items",
              "type": "...*",
              "rest": true,
              "description": "Items to insert info array"
            }
          ],
          "return": {
            "type": "number",
            "desc": "New length of the array."
          },
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "notifyPath",
          "description": "Notify that a path has changed.\n\nExample:\n\n    this.item.user.name = 'Bob';\n    this.notifyPath('item.user.name');",
          "privacy": "public",
          "sourceRange": {
            "file": "../bower_components/polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 1980,
              "column": 6
            },
            "end": {
              "line": 1997,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "path",
              "type": "string",
              "description": "Path that should be notified."
            },
            {
              "name": "value",
              "type": "*=",
              "description": "Value at the path (optional)."
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "_createReadOnlyProperty",
          "description": "Equivalent to static `createReadOnlyProperty` API but can be called on\nan instance to add effects at runtime.  See that method for\nfull API docs.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../bower_components/polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 2010,
              "column": 6
            },
            "end": {
              "line": 2017,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "property",
              "type": "string",
              "description": "Property name"
            },
            {
              "name": "protectedSetter",
              "type": "boolean=",
              "description": "Creates a custom protected setter\n  when `true`."
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "_createPropertyObserver",
          "description": "Equivalent to static `createPropertyObserver` API but can be called on\nan instance to add effects at runtime.  See that method for\nfull API docs.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../bower_components/polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 2031,
              "column": 6
            },
            "end": {
              "line": 2041,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "property",
              "type": "string",
              "description": "Property name"
            },
            {
              "name": "method",
              "type": "(string|function (*, *))",
              "description": "Function or name of observer method to call"
            },
            {
              "name": "dynamicFn",
              "type": "boolean=",
              "description": "Whether the method name should be included as\n  a dependency to the effect."
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "_createMethodObserver",
          "description": "Equivalent to static `createMethodObserver` API but can be called on\nan instance to add effects at runtime.  See that method for\nfull API docs.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../bower_components/polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 2054,
              "column": 6
            },
            "end": {
              "line": 2060,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "expression",
              "type": "string",
              "description": "Method expression"
            },
            {
              "name": "dynamicFn",
              "type": "(boolean|Object)=",
              "description": "Boolean or object map indicating\n  whether method names should be included as a dependency to the effect."
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "_createNotifyingProperty",
          "description": "Equivalent to static `createNotifyingProperty` API but can be called on\nan instance to add effects at runtime.  See that method for\nfull API docs.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../bower_components/polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 2071,
              "column": 6
            },
            "end": {
              "line": 2079,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "property",
              "type": "string",
              "description": "Property name"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "_createReflectedProperty",
          "description": "Equivalent to static `createReflectedProperty` API but can be called on\nan instance to add effects at runtime.  See that method for\nfull API docs.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../bower_components/polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 2090,
              "column": 6
            },
            "end": {
              "line": 2103,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "property",
              "type": "string",
              "description": "Property name"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "_createComputedProperty",
          "description": "Equivalent to static `createComputedProperty` API but can be called on\nan instance to add effects at runtime.  See that method for\nfull API docs.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../bower_components/polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 2117,
              "column": 6
            },
            "end": {
              "line": 2123,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "property",
              "type": "string",
              "description": "Name of computed property to set"
            },
            {
              "name": "expression",
              "type": "string",
              "description": "Method expression"
            },
            {
              "name": "dynamicFn",
              "type": "(boolean|Object)=",
              "description": "Boolean or object map indicating\n  whether method names should be included as a dependency to the effect."
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "_bindTemplate",
          "description": "Equivalent to static `bindTemplate` API but can be called on\nan instance to add effects at runtime.  See that method for\nfull API docs.\n\nThis method may be called on the prototype (for prototypical template\nbinding, to avoid creating accessors every instance) once per prototype,\nand will be called with `runtimeBinding: true` by `_stampTemplate` to\ncreate and link an instance of the template metadata associated with a\nparticular stamping.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../bower_components/polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 2300,
              "column": 6
            },
            "end": {
              "line": 2323,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "template",
              "type": "HTMLTemplateElement",
              "description": "Template containing binding\n  bindings"
            },
            {
              "name": "instanceBinding",
              "type": "boolean=",
              "description": "When false (default), performs\n  \"prototypical\" binding of the template and overwrites any previously\n  bound template for the class. When true (as passed from\n  `_stampTemplate`), the template info is instanced and linked into\n  the list of bound templates."
            }
          ],
          "return": {
            "type": "!TemplateInfo",
            "desc": "Template metadata object; for `runtimeBinding`,\n  this is an instance of the prototypical template info"
          },
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "_removeBoundDom",
          "description": "Removes and unbinds the nodes previously contained in the provided\nDocumentFragment returned from `_stampTemplate`.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../bower_components/polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 2402,
              "column": 6
            },
            "end": {
              "line": 2423,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "dom",
              "type": "!StampedTemplate",
              "description": "DocumentFragment previously returned\n  from `_stampTemplate` associated with the nodes to be removed"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "connectedCallback",
          "description": "Provides a default implementation of the standard Custom Elements\n`connectedCallback`.\n\nThe default implementation enables the property effects system and\nflushes any pending properties, and updates shimmed CSS properties\nwhen using the ShadyCSS scoping/custom properties polyfill.",
          "privacy": "public",
          "sourceRange": {
            "file": "../bower_components/polymer/lib/mixins/element-mixin.html",
            "start": {
              "line": 664,
              "column": 6
            },
            "end": {
              "line": 669,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.ElementMixin"
        },
        {
          "name": "disconnectedCallback",
          "description": "Provides a default implementation of the standard Custom Elements\n`disconnectedCallback`.",
          "privacy": "public",
          "sourceRange": {
            "file": "../bower_components/polymer/lib/mixins/element-mixin.html",
            "start": {
              "line": 675,
              "column": 6
            },
            "end": {
              "line": 675,
              "column": 31
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.ElementMixin"
        },
        {
          "name": "_attachDom",
          "description": "Attaches an element's stamped dom to itself. By default,\nthis method creates a `shadowRoot` and adds the dom to it.\nHowever, this method may be overridden to allow an element\nto put its dom in another location.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../bower_components/polymer/lib/mixins/element-mixin.html",
            "start": {
              "line": 722,
              "column": 6
            },
            "end": {
              "line": 738,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "dom",
              "type": "StampedTemplate",
              "description": "to attach to the element."
            }
          ],
          "return": {
            "type": "ShadowRoot",
            "desc": "node to which the dom has been attached."
          },
          "inheritedFrom": "Polymer.ElementMixin"
        },
        {
          "name": "updateStyles",
          "description": "When using the ShadyCSS scoping and custom property shim, causes all\nshimmed styles in this element (and its subtree) to be updated\nbased on current custom property values.\n\nThe optional parameter overrides inline custom property styles with an\nobject of properties where the keys are CSS properties, and the values\nare strings.\n\nExample: `this.updateStyles({'--color': 'blue'})`\n\nThese properties are retained unless a value of `null` is set.",
          "privacy": "public",
          "sourceRange": {
            "file": "../bower_components/polymer/lib/mixins/element-mixin.html",
            "start": {
              "line": 782,
              "column": 6
            },
            "end": {
              "line": 786,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "properties",
              "type": "Object=",
              "description": "Bag of custom property key/values to\n  apply to this element."
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "Polymer.ElementMixin"
        },
        {
          "name": "resolveUrl",
          "description": "Rewrites a given URL relative to a base URL. The base URL defaults to\nthe original location of the document containing the `dom-module` for\nthis element. This method will return the same URL before and after\nbundling.",
          "privacy": "public",
          "sourceRange": {
            "file": "../bower_components/polymer/lib/mixins/element-mixin.html",
            "start": {
              "line": 799,
              "column": 6
            },
            "end": {
              "line": 804,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "url",
              "type": "string",
              "description": "URL to resolve."
            },
            {
              "name": "base",
              "type": "string=",
              "description": "Optional base URL to resolve against, defaults\nto the element's `importPath`"
            }
          ],
          "return": {
            "type": "string",
            "desc": "Rewritten URL relative to base"
          },
          "inheritedFrom": "Polymer.ElementMixin"
        }
      ],
      "staticMethods": [
        {
          "name": "_parseTemplate",
          "description": "Scans a template to produce template metadata.\n\nTemplate-specific metadata are stored in the object returned, and node-\nspecific metadata are stored in objects in its flattened `nodeInfoList`\narray.  Only nodes in the template that were parsed as nodes of\ninterest contain an object in `nodeInfoList`.  Each `nodeInfo` object\ncontains an `index` (`childNodes` index in parent) and optionally\n`parent`, which points to node info of its parent (including its index).\n\nThe template metadata object returned from this method has the following\nstructure (many fields optional):\n\n```js\n  {\n    // Flattened list of node metadata (for nodes that generated metadata)\n    nodeInfoList: [\n      {\n        // `id` attribute for any nodes with id's for generating `$` map\n        id: {string},\n        // `on-event=\"handler\"` metadata\n        events: [\n          {\n            name: {string},   // event name\n            value: {string},  // handler method name\n          }, ...\n        ],\n        // Notes when the template contained a `<slot>` for shady DOM\n        // optimization purposes\n        hasInsertionPoint: {boolean},\n        // For nested `<template>`` nodes, nested template metadata\n        templateInfo: {object}, // nested template metadata\n        // Metadata to allow efficient retrieval of instanced node\n        // corresponding to this metadata\n        parentInfo: {number},   // reference to parent nodeInfo>\n        parentIndex: {number},  // index in parent's `childNodes` collection\n        infoIndex: {number},    // index of this `nodeInfo` in `templateInfo.nodeInfoList`\n      },\n      ...\n    ],\n    // When true, the template had the `strip-whitespace` attribute\n    // or was nested in a template with that setting\n    stripWhitespace: {boolean},\n    // For nested templates, nested template content is moved into\n    // a document fragment stored here; this is an optimization to\n    // avoid the cost of nested template cloning\n    content: {DocumentFragment}\n  }\n```\n\nThis method kicks off a recursive treewalk as follows:\n\n```\n   _parseTemplate <---------------------+\n     _parseTemplateContent              |\n       _parseTemplateNode  <------------|--+\n         _parseTemplateNestedTemplate --+  |\n         _parseTemplateChildNodes ---------+\n         _parseTemplateNodeAttributes\n           _parseTemplateNodeAttribute\n\n```\n\nThese methods may be overridden to add custom metadata about templates\nto either `templateInfo` or `nodeInfo`.\n\nNote that this method may be destructive to the template, in that\ne.g. event annotations may be removed after being noted in the\ntemplate metadata.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../bower_components/polymer/lib/mixins/template-stamp.html",
            "start": {
              "line": 197,
              "column": 6
            },
            "end": {
              "line": 208,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "template",
              "type": "!HTMLTemplateElement",
              "description": "Template to parse"
            },
            {
              "name": "outerTemplateInfo",
              "type": "TemplateInfo=",
              "description": "Template metadata from the outer\n  template, for parsing nested templates"
            }
          ],
          "return": {
            "type": "!TemplateInfo",
            "desc": "Parsed template metadata"
          },
          "inheritedFrom": "Polymer.TemplateStamp"
        },
        {
          "name": "_parseTemplateContent",
          "description": "Overrides `PropertyAccessors` to add map of dynamic functions on\ntemplate info, for consumption by `PropertyEffects` template binding\ncode. This map determines which method templates should have accessors\ncreated for them.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../bower_components/polymer/lib/mixins/element-mixin.html",
            "start": {
              "line": 815,
              "column": 6
            },
            "end": {
              "line": 818,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "template"
            },
            {
              "name": "templateInfo"
            },
            {
              "name": "nodeInfo"
            }
          ],
          "inheritedFrom": "Polymer.ElementMixin"
        },
        {
          "name": "_parseTemplateNode",
          "description": "Overrides default `TemplateStamp` implementation to add support for\nparsing bindings from `TextNode`'s' `textContent`.  A `bindings`\narray is added to `nodeInfo` and populated with binding metadata\nwith information capturing the binding target, and a `parts` array\nwith one or more metadata objects capturing the source(s) of the\nbinding.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../bower_components/polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 2442,
              "column": 6
            },
            "end": {
              "line": 2456,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "node",
              "type": "Node",
              "description": "Node to parse"
            },
            {
              "name": "templateInfo",
              "type": "TemplateInfo",
              "description": "Template metadata for current template"
            },
            {
              "name": "nodeInfo",
              "type": "NodeInfo",
              "description": "Node metadata for current template node"
            }
          ],
          "return": {
            "type": "boolean",
            "desc": "`true` if the visited node added node-specific\n  metadata to `nodeInfo`"
          },
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "_parseTemplateChildNodes",
          "description": "Parses template child nodes for the given root node.\n\nThis method also wraps whitelisted legacy template extensions\n(`is=\"dom-if\"` and `is=\"dom-repeat\"`) with their equivalent element\nwrappers, collapses text nodes, and strips whitespace from the template\nif the `templateInfo.stripWhitespace` setting was provided.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../bower_components/polymer/lib/mixins/template-stamp.html",
            "start": {
              "line": 258,
              "column": 6
            },
            "end": {
              "line": 295,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "root",
              "type": "Node",
              "description": "Root node whose `childNodes` will be parsed"
            },
            {
              "name": "templateInfo",
              "type": "!TemplateInfo",
              "description": "Template metadata for current template"
            },
            {
              "name": "nodeInfo",
              "type": "!NodeInfo",
              "description": "Node metadata for current template."
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "Polymer.TemplateStamp"
        },
        {
          "name": "_parseTemplateNestedTemplate",
          "description": "Overrides default `TemplateStamp` implementation to add support for\nbinding the properties that a nested template depends on to the template\nas `_host_<property>`.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../bower_components/polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 2529,
              "column": 6
            },
            "end": {
              "line": 2539,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "node",
              "type": "Node",
              "description": "Node to parse"
            },
            {
              "name": "templateInfo",
              "type": "TemplateInfo",
              "description": "Template metadata for current template"
            },
            {
              "name": "nodeInfo",
              "type": "NodeInfo",
              "description": "Node metadata for current template node"
            }
          ],
          "return": {
            "type": "boolean",
            "desc": "`true` if the visited node added node-specific\n  metadata to `nodeInfo`"
          },
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "_parseTemplateNodeAttributes",
          "description": "Parses template node attributes and adds node metadata to `nodeInfo`\nfor nodes of interest.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../bower_components/polymer/lib/mixins/template-stamp.html",
            "start": {
              "line": 333,
              "column": 6
            },
            "end": {
              "line": 342,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "node",
              "type": "Element",
              "description": "Node to parse"
            },
            {
              "name": "templateInfo",
              "type": "TemplateInfo",
              "description": "Template metadata for current template"
            },
            {
              "name": "nodeInfo",
              "type": "NodeInfo",
              "description": "Node metadata for current template."
            }
          ],
          "return": {
            "type": "boolean",
            "desc": "`true` if the visited node added node-specific\n  metadata to `nodeInfo`"
          },
          "inheritedFrom": "Polymer.TemplateStamp"
        },
        {
          "name": "_parseTemplateNodeAttribute",
          "description": "Overrides default `TemplateStamp` implementation to add support for\nparsing bindings from attributes.  A `bindings`\narray is added to `nodeInfo` and populated with binding metadata\nwith information capturing the binding target, and a `parts` array\nwith one or more metadata objects capturing the source(s) of the\nbinding.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../bower_components/polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 2477,
              "column": 6
            },
            "end": {
              "line": 2513,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "node",
              "type": "Element",
              "description": "Node to parse"
            },
            {
              "name": "templateInfo",
              "type": "TemplateInfo",
              "description": "Template metadata for current template"
            },
            {
              "name": "nodeInfo",
              "type": "NodeInfo",
              "description": "Node metadata for current template node"
            },
            {
              "name": "name",
              "type": "string",
              "description": "Attribute name"
            },
            {
              "name": "value",
              "type": "string",
              "description": "Attribute value"
            }
          ],
          "return": {
            "type": "boolean",
            "desc": "`true` if the visited node added node-specific\n  metadata to `nodeInfo`"
          },
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "_contentForTemplate",
          "description": "Returns the `content` document fragment for a given template.\n\nFor nested templates, Polymer performs an optimization to cache nested\ntemplate content to avoid the cost of cloning deeply nested templates.\nThis method retrieves the cached content for a given template.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../bower_components/polymer/lib/mixins/template-stamp.html",
            "start": {
              "line": 388,
              "column": 6
            },
            "end": {
              "line": 391,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "template",
              "type": "HTMLTemplateElement",
              "description": "Template to retrieve `content` for"
            }
          ],
          "return": {
            "type": "DocumentFragment",
            "desc": "Content fragment"
          },
          "inheritedFrom": "Polymer.TemplateStamp"
        },
        {
          "name": "createPropertiesForAttributes",
          "description": "Generates property accessors for all attributes in the standard\nstatic `observedAttributes` array.\n\nAttribute names are mapped to property names using the `dash-case` to\n`camelCase` convention",
          "privacy": "public",
          "sourceRange": {
            "file": "../bower_components/polymer/lib/mixins/property-accessors.html",
            "start": {
              "line": 115,
              "column": 6
            },
            "end": {
              "line": 120,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "Polymer.PropertyAccessors"
        },
        {
          "name": "addPropertyEffect",
          "description": "Ensures an accessor exists for the specified property, and adds\nto a list of \"property effects\" that will run when the accessor for\nthe specified property is set.  Effects are grouped by \"type\", which\nroughly corresponds to a phase in effect processing.  The effect\nmetadata should be in the following form:\n\n    {\n      fn: effectFunction, // Reference to function to call to perform effect\n      info: { ... }       // Effect metadata passed to function\n      trigger: {          // Optional triggering metadata; if not provided\n        name: string      // the property is treated as a wildcard\n        structured: boolean\n        wildcard: boolean\n      }\n    }\n\nEffects are called from `_propertiesChanged` in the following order by\ntype:\n\n1. COMPUTE\n2. PROPAGATE\n3. REFLECT\n4. OBSERVE\n5. NOTIFY\n\nEffect functions are called with the following signature:\n\n    effectFunction(inst, path, props, oldProps, info, hasPaths)",
          "privacy": "protected",
          "sourceRange": {
            "file": "../bower_components/polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 2163,
              "column": 6
            },
            "end": {
              "line": 2165,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "property",
              "type": "string",
              "description": "Property that should trigger the effect"
            },
            {
              "name": "type",
              "type": "string",
              "description": "Effect type, from this.PROPERTY_EFFECT_TYPES"
            },
            {
              "name": "effect",
              "type": "Object=",
              "description": "Effect metadata object"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "createPropertyObserver",
          "description": "Creates a single-property observer for the given property.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../bower_components/polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 2177,
              "column": 6
            },
            "end": {
              "line": 2179,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "property",
              "type": "string",
              "description": "Property name"
            },
            {
              "name": "method",
              "type": "(string|function (*, *))",
              "description": "Function or name of observer method to call"
            },
            {
              "name": "dynamicFn",
              "type": "boolean=",
              "description": "Whether the method name should be included as\n  a dependency to the effect."
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "createMethodObserver",
          "description": "Creates a multi-property \"method observer\" based on the provided\nexpression, which should be a string in the form of a normal JavaScript\nfunction signature: `'methodName(arg1, [..., argn])'`.  Each argument\nshould correspond to a property or path in the context of this\nprototype (or instance), or may be a literal string or number.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../bower_components/polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 2194,
              "column": 6
            },
            "end": {
              "line": 2196,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "expression",
              "type": "string",
              "description": "Method expression"
            },
            {
              "name": "dynamicFn",
              "type": "(boolean|Object)=",
              "description": "Boolean or object map indicating"
            }
          ],
          "return": {
            "type": "void",
            "desc": "whether method names should be included as a dependency to the effect."
          },
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "createNotifyingProperty",
          "description": "Causes the setter for the given property to dispatch `<property>-changed`\nevents to notify of changes to the property.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../bower_components/polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 2206,
              "column": 6
            },
            "end": {
              "line": 2208,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "property",
              "type": "string",
              "description": "Property name"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "createReadOnlyProperty",
          "description": "Creates a read-only accessor for the given property.\n\nTo set the property, use the protected `_setProperty` API.\nTo create a custom protected setter (e.g. `_setMyProp()` for\nproperty `myProp`), pass `true` for `protectedSetter`.\n\nNote, if the property will have other property effects, this method\nshould be called first, before adding other effects.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../bower_components/polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 2226,
              "column": 6
            },
            "end": {
              "line": 2228,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "property",
              "type": "string",
              "description": "Property name"
            },
            {
              "name": "protectedSetter",
              "type": "boolean=",
              "description": "Creates a custom protected setter\n  when `true`."
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "createReflectedProperty",
          "description": "Causes the setter for the given property to reflect the property value\nto a (dash-cased) attribute of the same name.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../bower_components/polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 2238,
              "column": 6
            },
            "end": {
              "line": 2240,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "property",
              "type": "string",
              "description": "Property name"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "createComputedProperty",
          "description": "Creates a computed property whose value is set to the result of the\nmethod described by the given `expression` each time one or more\narguments to the method changes.  The expression should be a string\nin the form of a normal JavaScript function signature:\n`'methodName(arg1, [..., argn])'`",
          "privacy": "protected",
          "sourceRange": {
            "file": "../bower_components/polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 2256,
              "column": 6
            },
            "end": {
              "line": 2258,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "property",
              "type": "string",
              "description": "Name of computed property to set"
            },
            {
              "name": "expression",
              "type": "string",
              "description": "Method expression"
            },
            {
              "name": "dynamicFn",
              "type": "(boolean|Object)=",
              "description": "Boolean or object map indicating whether\n  method names should be included as a dependency to the effect."
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "bindTemplate",
          "description": "Parses the provided template to ensure binding effects are created\nfor them, and then ensures property accessors are created for any\ndependent properties in the template.  Binding effects for bound\ntemplates are stored in a linked list on the instance so that\ntemplates can be efficiently stamped and unstamped.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../bower_components/polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 2272,
              "column": 6
            },
            "end": {
              "line": 2274,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "template",
              "type": "HTMLTemplateElement",
              "description": "Template containing binding\n  bindings"
            }
          ],
          "return": {
            "type": "Object",
            "desc": "Template metadata object"
          },
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "_addTemplatePropertyEffect",
          "description": "Adds a property effect to the given template metadata, which is run\nat the \"propagate\" stage of `_propertiesChanged` when the template\nhas been bound to the element via `_bindTemplate`.\n\nThe `effect` object should match the format in `_addPropertyEffect`.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../bower_components/polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 2338,
              "column": 6
            },
            "end": {
              "line": 2344,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "templateInfo",
              "type": "Object",
              "description": "Template metadata to add effect to"
            },
            {
              "name": "prop",
              "type": "string",
              "description": "Property that should trigger the effect"
            },
            {
              "name": "effect",
              "type": "Object=",
              "description": "Effect metadata object"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "_parseBindings",
          "description": "Called to parse text in a template (either attribute values or\ntextContent) into binding metadata.\n\nAny overrides of this method should return an array of binding part\nmetadata  representing one or more bindings found in the provided text\nand any \"literal\" text in between.  Any non-literal parts will be passed\nto `_evaluateBinding` when any dependencies change.  The only required\nfields of each \"part\" in the returned array are as follows:\n\n- `dependencies` - Array containing trigger metadata for each property\n  that should trigger the binding to update\n- `literal` - String containing text if the part represents a literal;\n  in this case no `dependencies` are needed\n\nAdditional metadata for use by `_evaluateBinding` may be provided in\neach part object as needed.\n\nThe default implementation handles the following types of bindings\n(one or more may be intermixed with literal strings):\n- Property binding: `[[prop]]`\n- Path binding: `[[object.prop]]`\n- Negated property or path bindings: `[[!prop]]` or `[[!object.prop]]`\n- Two-way property or path bindings (supports negation):\n  `{{prop}}`, `{{object.prop}}`, `{{!prop}}` or `{{!object.prop}}`\n- Inline computed method (supports negation):\n  `[[compute(a, 'literal', b)]]`, `[[!compute(a, 'literal', b)]]`",
          "privacy": "protected",
          "sourceRange": {
            "file": "../bower_components/polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 2574,
              "column": 6
            },
            "end": {
              "line": 2639,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "text",
              "type": "string",
              "description": "Text to parse from attribute or textContent"
            },
            {
              "name": "templateInfo",
              "type": "Object",
              "description": "Current template metadata"
            }
          ],
          "return": {
            "type": "Array.<!BindingPart>",
            "desc": "Array of binding part metadata"
          },
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "_evaluateBinding",
          "description": "Called to evaluate a previously parsed binding part based on a set of\none or more changed dependencies.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../bower_components/polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 2655,
              "column": 6
            },
            "end": {
              "line": 2672,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "inst",
              "type": "this",
              "description": "Element that should be used as scope for\n  binding dependencies"
            },
            {
              "name": "part",
              "type": "BindingPart",
              "description": "Binding part metadata"
            },
            {
              "name": "path",
              "type": "string",
              "description": "Property/path that triggered this effect"
            },
            {
              "name": "props",
              "type": "Object",
              "description": "Bag of current property changes"
            },
            {
              "name": "oldProps",
              "type": "Object",
              "description": "Bag of previous values for changed properties"
            },
            {
              "name": "hasPaths",
              "type": "boolean",
              "description": "True with `props` contains one or more paths"
            }
          ],
          "return": {
            "type": "*",
            "desc": "Value the binding part evaluated to"
          },
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "finalize",
          "description": "Called automatically when the first element instance is created to\nensure that class finalization work has been completed.\nMay be called by users to eagerly perform class finalization work\nprior to the creation of the first element instance.\n\nClass finalization work generally includes meta-programming such as\ncreating property accessors and any property effect metadata needed for\nthe features used.",
          "privacy": "public",
          "sourceRange": {
            "file": "../bower_components/polymer/lib/mixins/element-mixin.html",
            "start": {
              "line": 482,
              "column": 6
            },
            "end": {
              "line": 486,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "Polymer.ElementMixin"
        },
        {
          "name": "_processStyleText",
          "description": "Gather style text for a style element in the template.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../bower_components/polymer/lib/mixins/element-mixin.html",
            "start": {
              "line": 628,
              "column": 6
            },
            "end": {
              "line": 630,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "cssText",
              "type": "string",
              "description": "Text containing styling to process"
            },
            {
              "name": "baseURI",
              "type": "string",
              "description": "Base URI to rebase CSS paths against"
            }
          ],
          "return": {
            "type": "string",
            "desc": "The processed CSS text"
          },
          "inheritedFrom": "Polymer.ElementMixin"
        },
        {
          "name": "_finalizeTemplate",
          "description": "Configures an element `proto` to function with a given `template`.\nThe element name `is` and extends `ext` must be specified for ShadyCSS\nstyle scoping.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../bower_components/polymer/lib/mixins/element-mixin.html",
            "start": {
              "line": 641,
              "column": 6
            },
            "end": {
              "line": 652,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "is",
              "type": "string",
              "description": "Tag name (or type extension name) for this element"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "Polymer.ElementMixin"
        }
      ],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 45,
          "column": 4
        },
        "end": {
          "line": 61,
          "column": 5
        }
      },
      "privacy": "public",
      "superclass": "Polymer.Element",
      "name": "EsmmSearchboxInput",
      "attributes": [
        {
          "name": "search",
          "description": "Search string property",
          "sourceRange": {
            "start": {
              "line": 54,
              "column": 10
            },
            "end": {
              "line": 57,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "search-changed",
          "description": "Fired when the `search` property changes.",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "esmm-searchbox-input"
    },
    {
      "description": "",
      "summary": "",
      "path": "elements/options-list.html",
      "properties": [
        {
          "name": "optionValue",
          "type": "string",
          "description": "Option object property to use as value for selection",
          "privacy": "public",
          "sourceRange": {
            "file": "../mixins/list-item-utils-mixin.html",
            "start": {
              "line": 17,
              "column": 12
            },
            "end": {
              "line": 20,
              "column": 13
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "\"value\"",
          "inheritedFrom": "EsmmMixins.ListItemUtils"
        },
        {
          "name": "optionLabel",
          "type": "string",
          "description": "Option object property to use as label",
          "privacy": "public",
          "sourceRange": {
            "file": "../mixins/list-item-utils-mixin.html",
            "start": {
              "line": 22,
              "column": 12
            },
            "end": {
              "line": 25,
              "column": 13
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "\"label\"",
          "inheritedFrom": "EsmmMixins.ListItemUtils"
        },
        {
          "name": "twoLinesLabel",
          "type": "boolean",
          "description": "Show option label on 2 lines",
          "privacy": "public",
          "sourceRange": {
            "file": "../mixins/list-item-utils-mixin.html",
            "start": {
              "line": 27,
              "column": 12
            },
            "end": {
              "line": 31,
              "column": 13
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false",
          "inheritedFrom": "EsmmMixins.ListItemUtils"
        },
        {
          "name": "noneOptionLabel",
          "type": "string",
          "description": "None option label",
          "privacy": "public",
          "sourceRange": {
            "file": "../mixins/list-item-utils-mixin.html",
            "start": {
              "line": 33,
              "column": 12
            },
            "end": {
              "line": 36,
              "column": 13
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "\"-- NONE --\"",
          "inheritedFrom": "EsmmMixins.ListItemUtils"
        },
        {
          "name": "capitalize",
          "type": "boolean",
          "description": "Capitalize selected values/option, UI only",
          "privacy": "public",
          "sourceRange": {
            "file": "../mixins/list-item-utils-mixin.html",
            "start": {
              "line": 38,
              "column": 12
            },
            "end": {
              "line": 41,
              "column": 13
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false",
          "inheritedFrom": "EsmmMixins.ListItemUtils"
        },
        {
          "name": "multi",
          "type": "boolean",
          "description": "Multi selection flag. If true `selectedValues` array will be used instead `selected`",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 126,
              "column": 10
            },
            "end": {
              "line": 130,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false"
        },
        {
          "name": "selected",
          "type": "string",
          "description": "paper-listbox selected value is `multi` is false",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 132,
              "column": 10
            },
            "end": {
              "line": 135,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          }
        },
        {
          "name": "selectedValues",
          "type": "Array",
          "description": "paper-listbox selected values is `multi` is true",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 137,
              "column": 10
            },
            "end": {
              "line": 140,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          }
        },
        {
          "name": "shownOptions",
          "type": "Array",
          "description": "Array of options to be shown in dropdown",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 142,
              "column": 10
            },
            "end": {
              "line": 142,
              "column": 29
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "showNoSearchResultsWarning",
          "type": "boolean",
          "description": "Flag used to show no search result found warning",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 144,
              "column": 10
            },
            "end": {
              "line": 144,
              "column": 45
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "showLimitWarning",
          "type": "boolean",
          "description": "Flag to show the limit of options shown in dropdown",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 146,
              "column": 10
            },
            "end": {
              "line": 146,
              "column": 35
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "noOptionsAvailable",
          "type": "boolean",
          "description": "Flag to show a no options avaliable warning",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 148,
              "column": 10
            },
            "end": {
              "line": 148,
              "column": 37
            }
          },
          "metadata": {
            "polymer": {}
          }
        }
      ],
      "methods": [
        {
          "name": "getPrimaryLabel",
          "description": "Get option primary label. All chars until `|` .",
          "privacy": "public",
          "sourceRange": {
            "file": "../mixins/list-item-utils-mixin.html",
            "start": {
              "line": 50,
              "column": 8
            },
            "end": {
              "line": 59,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "label"
            }
          ],
          "return": {
            "type": "string"
          },
          "inheritedFrom": "EsmmMixins.ListItemUtils"
        },
        {
          "name": "getSecondaryLabel",
          "description": "Get option secondary label. All chars after `|`",
          "privacy": "public",
          "sourceRange": {
            "file": "../mixins/list-item-utils-mixin.html",
            "start": {
              "line": 66,
              "column": 8
            },
            "end": {
              "line": 78,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "label"
            }
          ],
          "return": {
            "type": "*"
          },
          "inheritedFrom": "EsmmMixins.ListItemUtils"
        },
        {
          "name": "_getValue",
          "description": "Get current option value",
          "privacy": "private",
          "sourceRange": {
            "file": "../mixins/list-item-utils-mixin.html",
            "start": {
              "line": 86,
              "column": 8
            },
            "end": {
              "line": 88,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "item"
            }
          ],
          "return": {
            "type": "null"
          },
          "inheritedFrom": "EsmmMixins.ListItemUtils"
        },
        {
          "name": "_getLabel",
          "description": "Get option label",
          "privacy": "private",
          "sourceRange": {
            "file": "../mixins/list-item-utils-mixin.html",
            "start": {
              "line": 96,
              "column": 8
            },
            "end": {
              "line": 106,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "item"
            }
          ],
          "return": {
            "type": "*"
          },
          "inheritedFrom": "EsmmMixins.ListItemUtils"
        },
        {
          "name": "_capitalizeString",
          "description": "Capitalize string",
          "privacy": "private",
          "sourceRange": {
            "file": "../mixins/list-item-utils-mixin.html",
            "start": {
              "line": 114,
              "column": 8
            },
            "end": {
              "line": 116,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "string"
            }
          ],
          "return": {
            "type": "string"
          },
          "inheritedFrom": "EsmmMixins.ListItemUtils"
        },
        {
          "name": "_itemSelected",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 157,
              "column": 6
            },
            "end": {
              "line": 167,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ]
        },
        {
          "name": "_getItemTitle",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 175,
              "column": 6
            },
            "end": {
              "line": 177,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "item"
            }
          ],
          "return": {
            "type": "*"
          }
        },
        {
          "name": "_getSelectedClass",
          "description": "Use of this method covers a corner case",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 185,
              "column": 6
            },
            "end": {
              "line": 187,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "item"
            }
          ],
          "return": {
            "type": "*"
          }
        },
        {
          "name": "_getSelectedClassSingle",
          "description": "Return `iron-selected` CSS class if needed",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 195,
              "column": 6
            },
            "end": {
              "line": 197,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "item"
            }
          ],
          "return": {
            "type": "string"
          }
        },
        {
          "name": "_getSelectedClassMulti",
          "description": "Return `iron-selected` CSS class if needed for multi selection dropdown",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 205,
              "column": 6
            },
            "end": {
              "line": 210,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "item"
            }
          ],
          "return": {
            "type": "*"
          }
        }
      ],
      "staticMethods": [],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 117,
          "column": 4
        },
        "end": {
          "line": 212,
          "column": 5
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "EsmmOptionsList",
      "attributes": [
        {
          "name": "option-value",
          "description": "Option object property to use as value for selection",
          "sourceRange": {
            "file": "../mixins/list-item-utils-mixin.html",
            "start": {
              "line": 17,
              "column": 12
            },
            "end": {
              "line": 20,
              "column": 13
            }
          },
          "metadata": {},
          "type": "string",
          "inheritedFrom": "EsmmMixins.ListItemUtils"
        },
        {
          "name": "option-label",
          "description": "Option object property to use as label",
          "sourceRange": {
            "file": "../mixins/list-item-utils-mixin.html",
            "start": {
              "line": 22,
              "column": 12
            },
            "end": {
              "line": 25,
              "column": 13
            }
          },
          "metadata": {},
          "type": "string",
          "inheritedFrom": "EsmmMixins.ListItemUtils"
        },
        {
          "name": "two-lines-label",
          "description": "Show option label on 2 lines",
          "sourceRange": {
            "file": "../mixins/list-item-utils-mixin.html",
            "start": {
              "line": 27,
              "column": 12
            },
            "end": {
              "line": 31,
              "column": 13
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "EsmmMixins.ListItemUtils"
        },
        {
          "name": "none-option-label",
          "description": "None option label",
          "sourceRange": {
            "file": "../mixins/list-item-utils-mixin.html",
            "start": {
              "line": 33,
              "column": 12
            },
            "end": {
              "line": 36,
              "column": 13
            }
          },
          "metadata": {},
          "type": "string",
          "inheritedFrom": "EsmmMixins.ListItemUtils"
        },
        {
          "name": "capitalize",
          "description": "Capitalize selected values/option, UI only",
          "sourceRange": {
            "file": "../mixins/list-item-utils-mixin.html",
            "start": {
              "line": 38,
              "column": 12
            },
            "end": {
              "line": 41,
              "column": 13
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "EsmmMixins.ListItemUtils"
        },
        {
          "name": "multi",
          "description": "Multi selection flag. If true `selectedValues` array will be used instead `selected`",
          "sourceRange": {
            "start": {
              "line": 126,
              "column": 10
            },
            "end": {
              "line": 130,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "selected",
          "description": "paper-listbox selected value is `multi` is false",
          "sourceRange": {
            "start": {
              "line": 132,
              "column": 10
            },
            "end": {
              "line": 135,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "selected-values",
          "description": "paper-listbox selected values is `multi` is true",
          "sourceRange": {
            "start": {
              "line": 137,
              "column": 10
            },
            "end": {
              "line": 140,
              "column": 11
            }
          },
          "metadata": {},
          "type": "Array"
        },
        {
          "name": "shown-options",
          "description": "Array of options to be shown in dropdown",
          "sourceRange": {
            "start": {
              "line": 142,
              "column": 10
            },
            "end": {
              "line": 142,
              "column": 29
            }
          },
          "metadata": {},
          "type": "Array"
        },
        {
          "name": "show-no-search-results-warning",
          "description": "Flag used to show no search result found warning",
          "sourceRange": {
            "start": {
              "line": 144,
              "column": 10
            },
            "end": {
              "line": 144,
              "column": 45
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "show-limit-warning",
          "description": "Flag to show the limit of options shown in dropdown",
          "sourceRange": {
            "start": {
              "line": 146,
              "column": 10
            },
            "end": {
              "line": 146,
              "column": 35
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "no-options-available",
          "description": "Flag to show a no options avaliable warning",
          "sourceRange": {
            "start": {
              "line": 148,
              "column": 10
            },
            "end": {
              "line": 148,
              "column": 37
            }
          },
          "metadata": {},
          "type": "boolean"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "close-etools-dropdown",
          "description": "close-etools-dropdown",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "selected-changed",
          "description": "Fired when the `selected` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "selected-values-changed",
          "description": "Fired when the `selectedValues` property changes.",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "esmm-options-list",
      "mixins": [
        "EsmmMixins.ListItemUtils"
      ]
    },
    {
      "description": "`etools-dropdown-multi`",
      "summary": "",
      "path": "etools-dropdown-multi.html",
      "properties": [
        {
          "name": "url",
          "type": "string",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "mixins/missing-options-mixin.html",
            "start": {
              "line": 16,
              "column": 8
            },
            "end": {
              "line": 16,
              "column": 19
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "EsmmMixins.MissingOptions"
        },
        {
          "name": "ajaxParams",
          "type": "Object",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "mixins/missing-options-mixin.html",
            "start": {
              "line": 17,
              "column": 8
            },
            "end": {
              "line": 17,
              "column": 26
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "EsmmMixins.MissingOptions"
        },
        {
          "name": "optionValue",
          "type": "string",
          "description": "Option object property to use as value for selection",
          "privacy": "public",
          "sourceRange": {
            "file": "mixins/list-item-utils-mixin.html",
            "start": {
              "line": 17,
              "column": 12
            },
            "end": {
              "line": 20,
              "column": 13
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "\"value\"",
          "inheritedFrom": "EsmmMixins.ListItemUtils"
        },
        {
          "name": "optionLabel",
          "type": "string",
          "description": "Option object property to use as label",
          "privacy": "public",
          "sourceRange": {
            "file": "mixins/list-item-utils-mixin.html",
            "start": {
              "line": 22,
              "column": 12
            },
            "end": {
              "line": 25,
              "column": 13
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "\"label\"",
          "inheritedFrom": "EsmmMixins.ListItemUtils"
        },
        {
          "name": "twoLinesLabel",
          "type": "boolean",
          "description": "Show option label on 2 lines",
          "privacy": "public",
          "sourceRange": {
            "file": "mixins/list-item-utils-mixin.html",
            "start": {
              "line": 27,
              "column": 12
            },
            "end": {
              "line": 31,
              "column": 13
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false",
          "inheritedFrom": "EsmmMixins.ListItemUtils"
        },
        {
          "name": "noneOptionLabel",
          "type": "string",
          "description": "None option label",
          "privacy": "public",
          "sourceRange": {
            "file": "mixins/list-item-utils-mixin.html",
            "start": {
              "line": 33,
              "column": 12
            },
            "end": {
              "line": 36,
              "column": 13
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "\"-- NONE --\"",
          "inheritedFrom": "EsmmMixins.ListItemUtils"
        },
        {
          "name": "capitalize",
          "type": "boolean",
          "description": "Capitalize selected values/option, UI only",
          "privacy": "public",
          "sourceRange": {
            "file": "mixins/list-item-utils-mixin.html",
            "start": {
              "line": 38,
              "column": 12
            },
            "end": {
              "line": 41,
              "column": 13
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false",
          "inheritedFrom": "EsmmMixins.ListItemUtils"
        },
        {
          "name": "label",
          "type": "string",
          "description": "Dropdown label",
          "privacy": "public",
          "sourceRange": {
            "file": "mixins/common-mixin.html",
            "start": {
              "line": 19,
              "column": 8
            },
            "end": {
              "line": 21,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "EsmmMixins.CommonFunctionality"
        },
        {
          "name": "noLabelFloat",
          "type": "boolean",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "mixins/common-mixin.html",
            "start": {
              "line": 22,
              "column": 8
            },
            "end": {
              "line": 22,
              "column": 29
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "EsmmMixins.CommonFunctionality"
        },
        {
          "name": "alwaysFloatLabel",
          "type": "boolean",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "mixins/common-mixin.html",
            "start": {
              "line": 23,
              "column": 8
            },
            "end": {
              "line": 26,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "true",
          "inheritedFrom": "EsmmMixins.CommonFunctionality"
        },
        {
          "name": "placeholder",
          "type": "string",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "mixins/common-mixin.html",
            "start": {
              "line": 27,
              "column": 8
            },
            "end": {
              "line": 30,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "\"—\"",
          "inheritedFrom": "EsmmMixins.CommonFunctionality"
        },
        {
          "name": "required",
          "type": "boolean",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "mixins/common-mixin.html",
            "start": {
              "line": 31,
              "column": 8
            },
            "end": {
              "line": 35,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_requiredChanged\""
            }
          },
          "inheritedFrom": "EsmmMixins.CommonFunctionality"
        },
        {
          "name": "errorMessage",
          "type": "string",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "mixins/common-mixin.html",
            "start": {
              "line": 36,
              "column": 8
            },
            "end": {
              "line": 39,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "\"This field is required\"",
          "inheritedFrom": "EsmmMixins.CommonFunctionality"
        },
        {
          "name": "autoValidate",
          "type": "boolean",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "mixins/common-mixin.html",
            "start": {
              "line": 40,
              "column": 8
            },
            "end": {
              "line": 42,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "EsmmMixins.CommonFunctionality"
        },
        {
          "name": "disabled",
          "type": "boolean",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "mixins/common-mixin.html",
            "start": {
              "line": 43,
              "column": 8
            },
            "end": {
              "line": 47,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false",
          "inheritedFrom": "EsmmMixins.CommonFunctionality"
        },
        {
          "name": "readonly",
          "type": "boolean",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "mixins/common-mixin.html",
            "start": {
              "line": 48,
              "column": 8
            },
            "end": {
              "line": 55,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_readonlyChanged\""
            }
          },
          "defaultValue": "false",
          "inheritedFrom": "EsmmMixins.CommonFunctionality"
        },
        {
          "name": "invalid",
          "type": "boolean",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "mixins/common-mixin.html",
            "start": {
              "line": 56,
              "column": 8
            },
            "end": {
              "line": 62,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false",
          "inheritedFrom": "EsmmMixins.CommonFunctionality"
        },
        {
          "name": "dynamicAlign",
          "type": "boolean",
          "description": "Makes the dropdown to show top or bottom where it will fit better",
          "privacy": "public",
          "sourceRange": {
            "file": "mixins/common-mixin.html",
            "start": {
              "line": 64,
              "column": 8
            },
            "end": {
              "line": 67,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "true",
          "inheritedFrom": "EsmmMixins.CommonFunctionality"
        },
        {
          "name": "allowOutsideScroll",
          "type": "boolean",
          "description": "Allows scroll outside opened dropdown",
          "privacy": "public",
          "sourceRange": {
            "file": "mixins/common-mixin.html",
            "start": {
              "line": 69,
              "column": 8
            },
            "end": {
              "line": 71,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "EsmmMixins.CommonFunctionality"
        },
        {
          "name": "search",
          "type": "string",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "mixins/common-mixin.html",
            "start": {
              "line": 72,
              "column": 8
            },
            "end": {
              "line": 75,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "EsmmMixins.CommonFunctionality"
        },
        {
          "name": "options",
          "type": "Array",
          "description": "Array of objects, dropdowns options used to compute shownOptions",
          "privacy": "public",
          "sourceRange": {
            "file": "mixins/common-mixin.html",
            "start": {
              "line": 77,
              "column": 8
            },
            "end": {
              "line": 79,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "EsmmMixins.CommonFunctionality"
        },
        {
          "name": "shownOptions",
          "type": "Array",
          "description": "Options seen by user",
          "privacy": "public",
          "sourceRange": {
            "file": "mixins/common-mixin.html",
            "start": {
              "line": 81,
              "column": 8
            },
            "end": {
              "line": 84,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          },
          "inheritedFrom": "EsmmMixins.CommonFunctionality"
        },
        {
          "name": "enableNoneOption",
          "type": "boolean",
          "description": "Flag to show `None` option (first dropdown option)\nUsed to reset single selection dropdown selected value",
          "privacy": "public",
          "sourceRange": {
            "file": "mixins/common-mixin.html",
            "start": {
              "line": 89,
              "column": 8
            },
            "end": {
              "line": 92,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false",
          "inheritedFrom": "EsmmMixins.CommonFunctionality"
        },
        {
          "name": "hideSearch",
          "type": "boolean",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "mixins/common-mixin.html",
            "start": {
              "line": 93,
              "column": 8
            },
            "end": {
              "line": 96,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false",
          "inheritedFrom": "EsmmMixins.CommonFunctionality"
        },
        {
          "name": "shownOptionsLimit",
          "type": "number",
          "description": "Limit displayed options",
          "privacy": "public",
          "sourceRange": {
            "file": "mixins/common-mixin.html",
            "start": {
              "line": 98,
              "column": 8
            },
            "end": {
              "line": 101,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "50",
          "inheritedFrom": "EsmmMixins.CommonFunctionality"
        },
        {
          "name": "noOptionsAvailable",
          "type": "boolean",
          "description": "Flag to show a no options avaliable warning",
          "privacy": "public",
          "sourceRange": {
            "file": "mixins/common-mixin.html",
            "start": {
              "line": 103,
              "column": 8
            },
            "end": {
              "line": 107,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          },
          "defaultValue": "true",
          "inheritedFrom": "EsmmMixins.CommonFunctionality"
        },
        {
          "name": "showLimitWarning",
          "type": "boolean",
          "description": "Flag to show the limit of options shown in dropdown",
          "privacy": "public",
          "sourceRange": {
            "file": "mixins/common-mixin.html",
            "start": {
              "line": 109,
              "column": 8
            },
            "end": {
              "line": 113,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          },
          "defaultValue": "false",
          "inheritedFrom": "EsmmMixins.CommonFunctionality"
        },
        {
          "name": "showNoSearchResultsWarning",
          "type": "boolean",
          "description": "Flag used to show no search result found warning",
          "privacy": "public",
          "sourceRange": {
            "file": "mixins/common-mixin.html",
            "start": {
              "line": 115,
              "column": 8
            },
            "end": {
              "line": 119,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          },
          "defaultValue": "false",
          "inheritedFrom": "EsmmMixins.CommonFunctionality"
        },
        {
          "name": "disableOnFocusHandling",
          "type": "boolean",
          "description": "Stop autofocus from paper-dialog",
          "privacy": "public",
          "sourceRange": {
            "file": "mixins/common-mixin.html",
            "start": {
              "line": 121,
              "column": 8
            },
            "end": {
              "line": 127,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "EsmmMixins.CommonFunctionality"
        },
        {
          "name": "fitInto",
          "type": "Object",
          "description": "Element that will prevent dropdown to overflow outside it's margins",
          "privacy": "public",
          "sourceRange": {
            "file": "mixins/common-mixin.html",
            "start": {
              "line": 132,
              "column": 8
            },
            "end": {
              "line": 132,
              "column": 23
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "EsmmMixins.CommonFunctionality"
        },
        {
          "name": "viewportEdgeMargin",
          "type": "number",
          "description": "Margin added if dropdown bottom is too close to the viewport bottom margin",
          "privacy": "public",
          "sourceRange": {
            "file": "mixins/common-mixin.html",
            "start": {
              "line": 134,
              "column": 8
            },
            "end": {
              "line": 137,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "20",
          "inheritedFrom": "EsmmMixins.CommonFunctionality"
        },
        {
          "name": "selectedValues",
          "type": "Array",
          "description": "Dropdown selected values",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 109,
              "column": 10
            },
            "end": {
              "line": 112,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          }
        },
        {
          "name": "selectedItems",
          "type": "Array",
          "description": "Selected options objects",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 114,
              "column": 10
            },
            "end": {
              "line": 118,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          },
          "defaultValue": "[]"
        },
        {
          "name": "notFoundOptions",
          "type": "Array",
          "description": "Array of not found values (in options list)",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 120,
              "column": 10
            },
            "end": {
              "line": 123,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "[]"
        },
        {
          "name": "triggerValueChangeEvent",
          "type": "boolean",
          "description": "Flag to trigger `etools-selected-items-changed` event",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 125,
              "column": 10
            },
            "end": {
              "line": 128,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false"
        },
        {
          "name": "title",
          "type": "string",
          "description": "Element title attribute",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 130,
              "column": 10
            },
            "end": {
              "line": 134,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          }
        }
      ],
      "methods": [
        {
          "name": "requestMissingOptions",
          "description": "If there are no selected options that are not found in dropdown options then request them from server using\nurl and ajaxParams(values property will contain missing values)\najaxParams = {\n   values: 1 // single value\n}\n\najaxParams = {\n   values: 1,2,3,4 // multiple values\n}",
          "privacy": "public",
          "sourceRange": {
            "file": "mixins/missing-options-mixin.html",
            "start": {
              "line": 34,
              "column": 4
            },
            "end": {
              "line": 57,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "notFoundValues",
              "type": "Array"
            }
          ],
          "inheritedFrom": "EsmmMixins.MissingOptions"
        },
        {
          "name": "handleMissingOptionsReqResponse",
          "description": "Handle missing option request response",
          "privacy": "public",
          "sourceRange": {
            "file": "mixins/missing-options-mixin.html",
            "start": {
              "line": 63,
              "column": 4
            },
            "end": {
              "line": 91,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "response"
            }
          ],
          "inheritedFrom": "EsmmMixins.MissingOptions"
        },
        {
          "name": "handleMissingOptionsReqError",
          "description": "Handle missing options request error",
          "privacy": "public",
          "sourceRange": {
            "file": "mixins/missing-options-mixin.html",
            "start": {
              "line": 97,
              "column": 4
            },
            "end": {
              "line": 100,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "errorResponse"
            }
          ],
          "inheritedFrom": "EsmmMixins.MissingOptions"
        },
        {
          "name": "shouldRequestMissingOption",
          "description": "Check if request missing option functionality can be used",
          "privacy": "public",
          "sourceRange": {
            "file": "mixins/missing-options-mixin.html",
            "start": {
              "line": 107,
              "column": 4
            },
            "end": {
              "line": 112,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "url"
            }
          ],
          "return": {
            "type": "boolean"
          },
          "inheritedFrom": "EsmmMixins.MissingOptions"
        },
        {
          "name": "isValidOption",
          "description": "Check if option received from missing options request is valid",
          "privacy": "public",
          "sourceRange": {
            "file": "mixins/missing-options-mixin.html",
            "start": {
              "line": 119,
              "column": 4
            },
            "end": {
              "line": 121,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "optionObj"
            }
          ],
          "return": {
            "type": "(boolean|*)"
          },
          "inheritedFrom": "EsmmMixins.MissingOptions"
        },
        {
          "name": "prepareReceivedOptions",
          "description": "Prepare new received options to add them to the current options list",
          "privacy": "public",
          "sourceRange": {
            "file": "mixins/missing-options-mixin.html",
            "start": {
              "line": 128,
              "column": 4
            },
            "end": {
              "line": 149,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "receivedOptions"
            }
          ],
          "return": {
            "type": "*"
          },
          "inheritedFrom": "EsmmMixins.MissingOptions"
        },
        {
          "name": "getPrimaryLabel",
          "description": "Get option primary label. All chars until `|` .",
          "privacy": "public",
          "sourceRange": {
            "file": "mixins/list-item-utils-mixin.html",
            "start": {
              "line": 50,
              "column": 8
            },
            "end": {
              "line": 59,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "label"
            }
          ],
          "return": {
            "type": "string"
          },
          "inheritedFrom": "EsmmMixins.ListItemUtils"
        },
        {
          "name": "getSecondaryLabel",
          "description": "Get option secondary label. All chars after `|`",
          "privacy": "public",
          "sourceRange": {
            "file": "mixins/list-item-utils-mixin.html",
            "start": {
              "line": 66,
              "column": 8
            },
            "end": {
              "line": 78,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "label"
            }
          ],
          "return": {
            "type": "*"
          },
          "inheritedFrom": "EsmmMixins.ListItemUtils"
        },
        {
          "name": "_getValue",
          "description": "Get current option value",
          "privacy": "private",
          "sourceRange": {
            "file": "mixins/list-item-utils-mixin.html",
            "start": {
              "line": 86,
              "column": 8
            },
            "end": {
              "line": 88,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "item"
            }
          ],
          "return": {
            "type": "null"
          },
          "inheritedFrom": "EsmmMixins.ListItemUtils"
        },
        {
          "name": "_getLabel",
          "description": "Get option label",
          "privacy": "private",
          "sourceRange": {
            "file": "mixins/list-item-utils-mixin.html",
            "start": {
              "line": 96,
              "column": 8
            },
            "end": {
              "line": 106,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "item"
            }
          ],
          "return": {
            "type": "*"
          },
          "inheritedFrom": "EsmmMixins.ListItemUtils"
        },
        {
          "name": "_capitalizeString",
          "description": "Capitalize string",
          "privacy": "private",
          "sourceRange": {
            "file": "mixins/list-item-utils-mixin.html",
            "start": {
              "line": 114,
              "column": 8
            },
            "end": {
              "line": 116,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "string"
            }
          ],
          "return": {
            "type": "string"
          },
          "inheritedFrom": "EsmmMixins.ListItemUtils"
        },
        {
          "name": "connectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 147,
              "column": 6
            },
            "end": {
              "line": 150,
              "column": 7
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_setFitInto",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "mixins/common-mixin.html",
            "start": {
              "line": 155,
              "column": 4
            },
            "end": {
              "line": 164,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "EsmmMixins.CommonFunctionality"
        },
        {
          "name": "_setResetSizeHandler",
          "description": "Reset dropdown size on close",
          "privacy": "protected",
          "sourceRange": {
            "file": "mixins/common-mixin.html",
            "start": {
              "line": 169,
              "column": 4
            },
            "end": {
              "line": 172,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "EsmmMixins.CommonFunctionality"
        },
        {
          "name": "_isUndefined",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "mixins/common-mixin.html",
            "start": {
              "line": 174,
              "column": 4
            },
            "end": {
              "line": 176,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "prop"
            }
          ],
          "inheritedFrom": "EsmmMixins.CommonFunctionality"
        },
        {
          "name": "resetIronDropdownSize",
          "description": "Reset previous calculated maxHeight,\nin this way on each dropdown open action we'll get the same calculated new height.",
          "privacy": "public",
          "sourceRange": {
            "file": "mixins/common-mixin.html",
            "start": {
              "line": 182,
              "column": 4
            },
            "end": {
              "line": 187,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "EsmmMixins.CommonFunctionality"
        },
        {
          "name": "_dropdownOpenedDownwards",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "mixins/common-mixin.html",
            "start": {
              "line": 189,
              "column": 4
            },
            "end": {
              "line": 192,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "overlayCoord"
            }
          ],
          "inheritedFrom": "EsmmMixins.CommonFunctionality"
        },
        {
          "name": "_noOptions",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "mixins/common-mixin.html",
            "start": {
              "line": 194,
              "column": 4
            },
            "end": {
              "line": 196,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "EsmmMixins.CommonFunctionality"
        },
        {
          "name": "_menuBtnIsDisabled",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "mixins/common-mixin.html",
            "start": {
              "line": 198,
              "column": 4
            },
            "end": {
              "line": 200,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "disabled"
            },
            {
              "name": "readonly"
            }
          ],
          "inheritedFrom": "EsmmMixins.CommonFunctionality"
        },
        {
          "name": "resetInvalidState",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "mixins/common-mixin.html",
            "start": {
              "line": 202,
              "column": 4
            },
            "end": {
              "line": 204,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "EsmmMixins.CommonFunctionality"
        },
        {
          "name": "_computeNoOptionsAvailable",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "mixins/common-mixin.html",
            "start": {
              "line": 206,
              "column": 4
            },
            "end": {
              "line": 211,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "options"
            },
            {
              "name": "optionsLength"
            }
          ],
          "inheritedFrom": "EsmmMixins.CommonFunctionality"
        },
        {
          "name": "_readonlyChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "mixins/common-mixin.html",
            "start": {
              "line": 213,
              "column": 4
            },
            "end": {
              "line": 221,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "newValue"
            },
            {
              "name": "oldValue"
            }
          ],
          "inheritedFrom": "EsmmMixins.CommonFunctionality"
        },
        {
          "name": "_requiredChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "mixins/common-mixin.html",
            "start": {
              "line": 223,
              "column": 4
            },
            "end": {
              "line": 231,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "newValue"
            },
            {
              "name": "oldValue"
            }
          ],
          "inheritedFrom": "EsmmMixins.CommonFunctionality"
        },
        {
          "name": "_attributeRepaintNeeded",
          "description": "Force styles update",
          "privacy": "protected",
          "sourceRange": {
            "file": "mixins/common-mixin.html",
            "start": {
              "line": 236,
              "column": 4
            },
            "end": {
              "line": 240,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "newValue"
            },
            {
              "name": "oldValue"
            }
          ],
          "inheritedFrom": "EsmmMixins.CommonFunctionality"
        },
        {
          "name": "_computeShownOptions",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "mixins/common-mixin.html",
            "start": {
              "line": 242,
              "column": 4
            },
            "end": {
              "line": 263,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "options"
            },
            {
              "name": "search"
            },
            {
              "name": "enableNoneOption"
            }
          ],
          "inheritedFrom": "EsmmMixins.CommonFunctionality"
        },
        {
          "name": "_trimByShownOptionsLimit",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "mixins/common-mixin.html",
            "start": {
              "line": 265,
              "column": 4
            },
            "end": {
              "line": 267,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "options"
            }
          ],
          "inheritedFrom": "EsmmMixins.CommonFunctionality"
        },
        {
          "name": "_itemContainsSearchString",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "mixins/common-mixin.html",
            "start": {
              "line": 269,
              "column": 4
            },
            "end": {
              "line": 272,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "item"
            }
          ],
          "inheritedFrom": "EsmmMixins.CommonFunctionality"
        },
        {
          "name": "_computeShowLimitWarning",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "mixins/common-mixin.html",
            "start": {
              "line": 274,
              "column": 4
            },
            "end": {
              "line": 279,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "limit"
            },
            {
              "name": "shownOptions"
            }
          ],
          "inheritedFrom": "EsmmMixins.CommonFunctionality"
        },
        {
          "name": "_showNoSearchResultsWarning",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "mixins/common-mixin.html",
            "start": {
              "line": 281,
              "column": 4
            },
            "end": {
              "line": 287,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "noOptionsAvailable"
            },
            {
              "name": "shownOptionsLength"
            },
            {
              "name": "optionsLength"
            }
          ],
          "inheritedFrom": "EsmmMixins.CommonFunctionality"
        },
        {
          "name": "_validCoordinates",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "mixins/common-mixin.html",
            "start": {
              "line": 289,
              "column": 4
            },
            "end": {
              "line": 294,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "coords"
            }
          ],
          "inheritedFrom": "EsmmMixins.CommonFunctionality"
        },
        {
          "name": "_bottomTooCloseToViewportEdge",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "mixins/common-mixin.html",
            "start": {
              "line": 296,
              "column": 4
            },
            "end": {
              "line": 299,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "dropdownBottom"
            }
          ],
          "inheritedFrom": "EsmmMixins.CommonFunctionality"
        },
        {
          "name": "_dropdownBottomOutsideViewPort",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "mixins/common-mixin.html",
            "start": {
              "line": 301,
              "column": 4
            },
            "end": {
              "line": 306,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "openedDropdownCoord"
            }
          ],
          "inheritedFrom": "EsmmMixins.CommonFunctionality"
        },
        {
          "name": "_getViewportHeight",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "mixins/common-mixin.html",
            "start": {
              "line": 308,
              "column": 4
            },
            "end": {
              "line": 310,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "EsmmMixins.CommonFunctionality"
        },
        {
          "name": "_recalculateOptionsListHeightForIE11",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "mixins/common-mixin.html",
            "start": {
              "line": 312,
              "column": 4
            },
            "end": {
              "line": 338,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "newComputedHeight"
            },
            {
              "name": "openedDropdownCoord"
            },
            {
              "name": "searchboxHeight"
            }
          ],
          "inheritedFrom": "EsmmMixins.CommonFunctionality"
        },
        {
          "name": "_getSearchFieldHeight",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "mixins/common-mixin.html",
            "start": {
              "line": 340,
              "column": 4
            },
            "end": {
              "line": 347,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "EsmmMixins.CommonFunctionality"
        },
        {
          "name": "_getNewHeightRelatedToBottomViewportEdge",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "mixins/common-mixin.html",
            "start": {
              "line": 349,
              "column": 4
            },
            "end": {
              "line": 352,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "openedDropdownCoord"
            },
            {
              "name": "searchboxHeight"
            }
          ],
          "inheritedFrom": "EsmmMixins.CommonFunctionality"
        },
        {
          "name": "_resizeOptionsListHeight",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "mixins/common-mixin.html",
            "start": {
              "line": 354,
              "column": 4
            },
            "end": {
              "line": 382,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "EsmmMixins.CommonFunctionality"
        },
        {
          "name": "_onDropdownOpen",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "mixins/common-mixin.html",
            "start": {
              "line": 384,
              "column": 4
            },
            "end": {
              "line": 387,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "EsmmMixins.CommonFunctionality"
        },
        {
          "name": "_setDropdownWidth",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "mixins/common-mixin.html",
            "start": {
              "line": 389,
              "column": 4
            },
            "end": {
              "line": 392,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "EsmmMixins.CommonFunctionality"
        },
        {
          "name": "_setFocusTarget",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "mixins/common-mixin.html",
            "start": {
              "line": 394,
              "column": 4
            },
            "end": {
              "line": 398,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "EsmmMixins.CommonFunctionality"
        },
        {
          "name": "_setPositionTarget",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "mixins/common-mixin.html",
            "start": {
              "line": 400,
              "column": 4
            },
            "end": {
              "line": 404,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "EsmmMixins.CommonFunctionality"
        },
        {
          "name": "_getIronDropdown",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "mixins/common-mixin.html",
            "start": {
              "line": 406,
              "column": 4
            },
            "end": {
              "line": 408,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "EsmmMixins.CommonFunctionality"
        },
        {
          "name": "_getIronDropdownContent",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "mixins/common-mixin.html",
            "start": {
              "line": 410,
              "column": 4
            },
            "end": {
              "line": 412,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "EsmmMixins.CommonFunctionality"
        },
        {
          "name": "_getOptionsList",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "mixins/common-mixin.html",
            "start": {
              "line": 414,
              "column": 4
            },
            "end": {
              "line": 416,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "EsmmMixins.CommonFunctionality"
        },
        {
          "name": "_getSearchox",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "mixins/common-mixin.html",
            "start": {
              "line": 418,
              "column": 4
            },
            "end": {
              "line": 420,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "EsmmMixins.CommonFunctionality"
        },
        {
          "name": "_openMenu",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "mixins/common-mixin.html",
            "start": {
              "line": 422,
              "column": 4
            },
            "end": {
              "line": 427,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "EsmmMixins.CommonFunctionality"
        },
        {
          "name": "_closeMenu",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "mixins/common-mixin.html",
            "start": {
              "line": 429,
              "column": 4
            },
            "end": {
              "line": 431,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "EsmmMixins.CommonFunctionality"
        },
        {
          "name": "notifyDropdownResize",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "mixins/common-mixin.html",
            "start": {
              "line": 450,
              "column": 4
            },
            "end": {
              "line": 453,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "EsmmMixins.CommonFunctionality"
        },
        {
          "name": "onInputFocus",
          "description": "On focus received from a previous element (filds navigation in form using Tab)",
          "privacy": "public",
          "sourceRange": {
            "file": "mixins/common-mixin.html",
            "start": {
              "line": 459,
              "column": 4
            },
            "end": {
              "line": 468,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "inheritedFrom": "EsmmMixins.CommonFunctionality"
        },
        {
          "name": "isIEBrowser",
          "description": "Checks for IE11 browser :)",
          "privacy": "public",
          "sourceRange": {
            "file": "mixins/common-mixin.html",
            "start": {
              "line": 474,
              "column": 4
            },
            "end": {
              "line": 477,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "boolean"
          },
          "inheritedFrom": "EsmmMixins.CommonFunctionality"
        },
        {
          "name": "_addEventListenerToNode",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/polymer/lib/mixins/gesture-event-listeners.html",
            "start": {
              "line": 47,
              "column": 6
            },
            "end": {
              "line": 51,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "node"
            },
            {
              "name": "eventName"
            },
            {
              "name": "handler"
            }
          ],
          "inheritedFrom": "Polymer.GestureEventListeners"
        },
        {
          "name": "_removeEventListenerFromNode",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/polymer/lib/mixins/gesture-event-listeners.html",
            "start": {
              "line": 53,
              "column": 6
            },
            "end": {
              "line": 57,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "node"
            },
            {
              "name": "eventName"
            },
            {
              "name": "handler"
            }
          ],
          "inheritedFrom": "Polymer.GestureEventListeners"
        },
        {
          "name": "_selectedValuesOrOptionsChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 152,
              "column": 6
            },
            "end": {
              "line": 162,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "selectedValuesOrLength"
            },
            {
              "name": "options"
            }
          ]
        },
        {
          "name": "_setSelectedItems",
          "description": "Can't use paper-listbox's on-selected-items-changed event ,\nbecause paper-lisbox doesn't cover the case when selectedItems are not in the shownOptions values",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 170,
              "column": 6
            },
            "end": {
              "line": 191,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "selectedValues",
              "type": "Array"
            }
          ]
        },
        {
          "name": "_selectedItemsChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 193,
              "column": 6
            },
            "end": {
              "line": 207,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "selectedItems"
            }
          ]
        },
        {
          "name": "_fireChangeEvent",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 212,
              "column": 6
            },
            "end": {
              "line": 214,
              "column": 7
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_setAnyNotFoundOptions",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 216,
              "column": 6
            },
            "end": {
              "line": 228,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "selectedItems"
            },
            {
              "name": "selectedValues"
            }
          ]
        },
        {
          "name": "_removeSelectedItem",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 230,
              "column": 6
            },
            "end": {
              "line": 247,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ]
        },
        {
          "name": "_notFoundOptionsAndUrlChanged",
          "description": "This observer makes sure request for missing option is triggered only after the url is set also.\nnotFoundOption is actually this.selected",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 253,
              "column": 6
            },
            "end": {
              "line": 260,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "notFoundOptions"
            },
            {
              "name": "url"
            }
          ]
        },
        {
          "name": "_handleSelectedNotFoundInOptions",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 262,
              "column": 6
            },
            "end": {
              "line": 271,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "notFoundSelectedValues"
            }
          ]
        },
        {
          "name": "_updateAfterMissingOptionsReceived",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 273,
              "column": 6
            },
            "end": {
              "line": 285,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "detail"
            }
          ]
        },
        {
          "name": "_onDropdownClose",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 287,
              "column": 6
            },
            "end": {
              "line": 291,
              "column": 7
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "validate",
          "description": "Validate multi selection",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 298,
              "column": 6
            },
            "end": {
              "line": 310,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "selectedValues"
            }
          ],
          "return": {
            "type": "boolean"
          }
        },
        {
          "name": "_openMultiMenu",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 316,
              "column": 6
            },
            "end": {
              "line": 323,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ]
        },
        {
          "name": "_clickedOnX",
          "description": "Tap on x to remove selected item",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 331,
              "column": 6
            },
            "end": {
              "line": 334,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "boolean"
          }
        },
        {
          "name": "_getValuesFromItems",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 336,
              "column": 6
            },
            "end": {
              "line": 340,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "selectedItems"
            }
          ]
        },
        {
          "name": "_noSelectedValues",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 342,
              "column": 6
            },
            "end": {
              "line": 347,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "selectedValues"
            }
          ]
        },
        {
          "name": "_noSelectedItems",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 349,
              "column": 6
            },
            "end": {
              "line": 354,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "selectedItems"
            }
          ]
        },
        {
          "name": "_selectedValuesToString",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 356,
              "column": 6
            },
            "end": {
              "line": 365,
              "column": 7
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_getElementTitle",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 367,
              "column": 6
            },
            "end": {
              "line": 373,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "selectedItems"
            }
          ]
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/index-multi.html",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 101,
          "column": 4
        },
        "end": {
          "line": 375,
          "column": 5
        }
      },
      "privacy": "public",
      "superclass": "MultiDropdownRequiredMixins",
      "name": "EtoolsDropdownMulti",
      "attributes": [
        {
          "name": "url",
          "description": "",
          "sourceRange": {
            "file": "mixins/missing-options-mixin.html",
            "start": {
              "line": 16,
              "column": 8
            },
            "end": {
              "line": 16,
              "column": 19
            }
          },
          "metadata": {},
          "type": "string",
          "inheritedFrom": "EsmmMixins.MissingOptions"
        },
        {
          "name": "ajax-params",
          "description": "",
          "sourceRange": {
            "file": "mixins/missing-options-mixin.html",
            "start": {
              "line": 17,
              "column": 8
            },
            "end": {
              "line": 17,
              "column": 26
            }
          },
          "metadata": {},
          "type": "Object",
          "inheritedFrom": "EsmmMixins.MissingOptions"
        },
        {
          "name": "option-value",
          "description": "Option object property to use as value for selection",
          "sourceRange": {
            "file": "mixins/list-item-utils-mixin.html",
            "start": {
              "line": 17,
              "column": 12
            },
            "end": {
              "line": 20,
              "column": 13
            }
          },
          "metadata": {},
          "type": "string",
          "inheritedFrom": "EsmmMixins.ListItemUtils"
        },
        {
          "name": "option-label",
          "description": "Option object property to use as label",
          "sourceRange": {
            "file": "mixins/list-item-utils-mixin.html",
            "start": {
              "line": 22,
              "column": 12
            },
            "end": {
              "line": 25,
              "column": 13
            }
          },
          "metadata": {},
          "type": "string",
          "inheritedFrom": "EsmmMixins.ListItemUtils"
        },
        {
          "name": "two-lines-label",
          "description": "Show option label on 2 lines",
          "sourceRange": {
            "file": "mixins/list-item-utils-mixin.html",
            "start": {
              "line": 27,
              "column": 12
            },
            "end": {
              "line": 31,
              "column": 13
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "EsmmMixins.ListItemUtils"
        },
        {
          "name": "none-option-label",
          "description": "None option label",
          "sourceRange": {
            "file": "mixins/list-item-utils-mixin.html",
            "start": {
              "line": 33,
              "column": 12
            },
            "end": {
              "line": 36,
              "column": 13
            }
          },
          "metadata": {},
          "type": "string",
          "inheritedFrom": "EsmmMixins.ListItemUtils"
        },
        {
          "name": "capitalize",
          "description": "Capitalize selected values/option, UI only",
          "sourceRange": {
            "file": "mixins/list-item-utils-mixin.html",
            "start": {
              "line": 38,
              "column": 12
            },
            "end": {
              "line": 41,
              "column": 13
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "EsmmMixins.ListItemUtils"
        },
        {
          "name": "label",
          "description": "Dropdown label",
          "sourceRange": {
            "file": "mixins/common-mixin.html",
            "start": {
              "line": 19,
              "column": 8
            },
            "end": {
              "line": 21,
              "column": 9
            }
          },
          "metadata": {},
          "type": "string",
          "inheritedFrom": "EsmmMixins.CommonFunctionality"
        },
        {
          "name": "no-label-float",
          "description": "",
          "sourceRange": {
            "file": "mixins/common-mixin.html",
            "start": {
              "line": 22,
              "column": 8
            },
            "end": {
              "line": 22,
              "column": 29
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "EsmmMixins.CommonFunctionality"
        },
        {
          "name": "always-float-label",
          "description": "",
          "sourceRange": {
            "file": "mixins/common-mixin.html",
            "start": {
              "line": 23,
              "column": 8
            },
            "end": {
              "line": 26,
              "column": 9
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "EsmmMixins.CommonFunctionality"
        },
        {
          "name": "placeholder",
          "description": "",
          "sourceRange": {
            "file": "mixins/common-mixin.html",
            "start": {
              "line": 27,
              "column": 8
            },
            "end": {
              "line": 30,
              "column": 9
            }
          },
          "metadata": {},
          "type": "string",
          "inheritedFrom": "EsmmMixins.CommonFunctionality"
        },
        {
          "name": "required",
          "description": "",
          "sourceRange": {
            "file": "mixins/common-mixin.html",
            "start": {
              "line": 31,
              "column": 8
            },
            "end": {
              "line": 35,
              "column": 9
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "EsmmMixins.CommonFunctionality"
        },
        {
          "name": "error-message",
          "description": "",
          "sourceRange": {
            "file": "mixins/common-mixin.html",
            "start": {
              "line": 36,
              "column": 8
            },
            "end": {
              "line": 39,
              "column": 9
            }
          },
          "metadata": {},
          "type": "string",
          "inheritedFrom": "EsmmMixins.CommonFunctionality"
        },
        {
          "name": "auto-validate",
          "description": "",
          "sourceRange": {
            "file": "mixins/common-mixin.html",
            "start": {
              "line": 40,
              "column": 8
            },
            "end": {
              "line": 42,
              "column": 9
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "EsmmMixins.CommonFunctionality"
        },
        {
          "name": "disabled",
          "description": "",
          "sourceRange": {
            "file": "mixins/common-mixin.html",
            "start": {
              "line": 43,
              "column": 8
            },
            "end": {
              "line": 47,
              "column": 9
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "EsmmMixins.CommonFunctionality"
        },
        {
          "name": "readonly",
          "description": "",
          "sourceRange": {
            "file": "mixins/common-mixin.html",
            "start": {
              "line": 48,
              "column": 8
            },
            "end": {
              "line": 55,
              "column": 9
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "EsmmMixins.CommonFunctionality"
        },
        {
          "name": "invalid",
          "description": "",
          "sourceRange": {
            "file": "mixins/common-mixin.html",
            "start": {
              "line": 56,
              "column": 8
            },
            "end": {
              "line": 62,
              "column": 9
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "EsmmMixins.CommonFunctionality"
        },
        {
          "name": "dynamic-align",
          "description": "Makes the dropdown to show top or bottom where it will fit better",
          "sourceRange": {
            "file": "mixins/common-mixin.html",
            "start": {
              "line": 64,
              "column": 8
            },
            "end": {
              "line": 67,
              "column": 9
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "EsmmMixins.CommonFunctionality"
        },
        {
          "name": "allow-outside-scroll",
          "description": "Allows scroll outside opened dropdown",
          "sourceRange": {
            "file": "mixins/common-mixin.html",
            "start": {
              "line": 69,
              "column": 8
            },
            "end": {
              "line": 71,
              "column": 9
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "EsmmMixins.CommonFunctionality"
        },
        {
          "name": "search",
          "description": "",
          "sourceRange": {
            "file": "mixins/common-mixin.html",
            "start": {
              "line": 72,
              "column": 8
            },
            "end": {
              "line": 75,
              "column": 9
            }
          },
          "metadata": {},
          "type": "string",
          "inheritedFrom": "EsmmMixins.CommonFunctionality"
        },
        {
          "name": "options",
          "description": "Array of objects, dropdowns options used to compute shownOptions",
          "sourceRange": {
            "file": "mixins/common-mixin.html",
            "start": {
              "line": 77,
              "column": 8
            },
            "end": {
              "line": 79,
              "column": 9
            }
          },
          "metadata": {},
          "type": "Array",
          "inheritedFrom": "EsmmMixins.CommonFunctionality"
        },
        {
          "name": "shown-options",
          "description": "Options seen by user",
          "sourceRange": {
            "file": "mixins/common-mixin.html",
            "start": {
              "line": 81,
              "column": 8
            },
            "end": {
              "line": 84,
              "column": 9
            }
          },
          "metadata": {},
          "type": "Array",
          "inheritedFrom": "EsmmMixins.CommonFunctionality"
        },
        {
          "name": "enable-none-option",
          "description": "Flag to show `None` option (first dropdown option)\nUsed to reset single selection dropdown selected value",
          "sourceRange": {
            "file": "mixins/common-mixin.html",
            "start": {
              "line": 89,
              "column": 8
            },
            "end": {
              "line": 92,
              "column": 9
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "EsmmMixins.CommonFunctionality"
        },
        {
          "name": "hide-search",
          "description": "",
          "sourceRange": {
            "file": "mixins/common-mixin.html",
            "start": {
              "line": 93,
              "column": 8
            },
            "end": {
              "line": 96,
              "column": 9
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "EsmmMixins.CommonFunctionality"
        },
        {
          "name": "shown-options-limit",
          "description": "Limit displayed options",
          "sourceRange": {
            "file": "mixins/common-mixin.html",
            "start": {
              "line": 98,
              "column": 8
            },
            "end": {
              "line": 101,
              "column": 9
            }
          },
          "metadata": {},
          "type": "number",
          "inheritedFrom": "EsmmMixins.CommonFunctionality"
        },
        {
          "name": "no-options-available",
          "description": "Flag to show a no options avaliable warning",
          "sourceRange": {
            "file": "mixins/common-mixin.html",
            "start": {
              "line": 103,
              "column": 8
            },
            "end": {
              "line": 107,
              "column": 9
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "EsmmMixins.CommonFunctionality"
        },
        {
          "name": "show-limit-warning",
          "description": "Flag to show the limit of options shown in dropdown",
          "sourceRange": {
            "file": "mixins/common-mixin.html",
            "start": {
              "line": 109,
              "column": 8
            },
            "end": {
              "line": 113,
              "column": 9
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "EsmmMixins.CommonFunctionality"
        },
        {
          "name": "show-no-search-results-warning",
          "description": "Flag used to show no search result found warning",
          "sourceRange": {
            "file": "mixins/common-mixin.html",
            "start": {
              "line": 115,
              "column": 8
            },
            "end": {
              "line": 119,
              "column": 9
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "EsmmMixins.CommonFunctionality"
        },
        {
          "name": "disable-on-focus-handling",
          "description": "Stop autofocus from paper-dialog",
          "sourceRange": {
            "file": "mixins/common-mixin.html",
            "start": {
              "line": 121,
              "column": 8
            },
            "end": {
              "line": 127,
              "column": 9
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "EsmmMixins.CommonFunctionality"
        },
        {
          "name": "fit-into",
          "description": "Element that will prevent dropdown to overflow outside it's margins",
          "sourceRange": {
            "file": "mixins/common-mixin.html",
            "start": {
              "line": 132,
              "column": 8
            },
            "end": {
              "line": 132,
              "column": 23
            }
          },
          "metadata": {},
          "type": "Object",
          "inheritedFrom": "EsmmMixins.CommonFunctionality"
        },
        {
          "name": "viewport-edge-margin",
          "description": "Margin added if dropdown bottom is too close to the viewport bottom margin",
          "sourceRange": {
            "file": "mixins/common-mixin.html",
            "start": {
              "line": 134,
              "column": 8
            },
            "end": {
              "line": 137,
              "column": 9
            }
          },
          "metadata": {},
          "type": "number",
          "inheritedFrom": "EsmmMixins.CommonFunctionality"
        },
        {
          "name": "selected-values",
          "description": "Dropdown selected values",
          "sourceRange": {
            "start": {
              "line": 109,
              "column": 10
            },
            "end": {
              "line": 112,
              "column": 11
            }
          },
          "metadata": {},
          "type": "Array"
        },
        {
          "name": "selected-items",
          "description": "Selected options objects",
          "sourceRange": {
            "start": {
              "line": 114,
              "column": 10
            },
            "end": {
              "line": 118,
              "column": 11
            }
          },
          "metadata": {},
          "type": "Array"
        },
        {
          "name": "not-found-options",
          "description": "Array of not found values (in options list)",
          "sourceRange": {
            "start": {
              "line": 120,
              "column": 10
            },
            "end": {
              "line": 123,
              "column": 11
            }
          },
          "metadata": {},
          "type": "Array"
        },
        {
          "name": "trigger-value-change-event",
          "description": "Flag to trigger `etools-selected-items-changed` event",
          "sourceRange": {
            "start": {
              "line": 125,
              "column": 10
            },
            "end": {
              "line": 128,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "title",
          "description": "Element title attribute",
          "sourceRange": {
            "start": {
              "line": 130,
              "column": 10
            },
            "end": {
              "line": 134,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "etools-selected-items-changed",
          "description": "etools-selected-items-changed",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "selected-values-changed",
          "description": "Fired when the `selectedValues` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "selected-items-changed",
          "description": "Fired when the `selectedItems` property changes.",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "etools-dropdown-multi",
      "mixins": [
        "MultiDropdownRequiredMixins"
      ]
    },
    {
      "description": "",
      "summary": "",
      "path": "demo/elements/multi-selection-demo.html",
      "properties": [
        {
          "name": "simpleOptions",
          "type": "Array",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "../mixins/test-data-mixin.html",
            "start": {
              "line": 14,
              "column": 8
            },
            "end": {
              "line": 24,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          },
          "inheritedFrom": "EsmmDemoHelpers.TestData"
        },
        {
          "name": "twoLineOptions",
          "type": "Array",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "../mixins/test-data-mixin.html",
            "start": {
              "line": 25,
              "column": 8
            },
            "end": {
              "line": 35,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          },
          "inheritedFrom": "EsmmDemoHelpers.TestData"
        }
      ],
      "methods": [],
      "staticMethods": [],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 38,
          "column": 4
        },
        "end": {
          "line": 48,
          "column": 5
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "EsmmMultiSelectionDemo",
      "attributes": [
        {
          "name": "simple-options",
          "description": "",
          "sourceRange": {
            "file": "../mixins/test-data-mixin.html",
            "start": {
              "line": 14,
              "column": 8
            },
            "end": {
              "line": 24,
              "column": 9
            }
          },
          "metadata": {},
          "type": "Array",
          "inheritedFrom": "EsmmDemoHelpers.TestData"
        },
        {
          "name": "two-line-options",
          "description": "",
          "sourceRange": {
            "file": "../mixins/test-data-mixin.html",
            "start": {
              "line": 25,
              "column": 8
            },
            "end": {
              "line": 35,
              "column": 9
            }
          },
          "metadata": {},
          "type": "Array",
          "inheritedFrom": "EsmmDemoHelpers.TestData"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "esmm-multi-selection-demo",
      "mixins": [
        "EsmmDemoHelpers.TestData"
      ]
    },
    {
      "description": "`etools-dropdown`",
      "summary": "",
      "path": "etools-dropdown.html",
      "properties": [
        {
          "name": "selected",
          "type": "number",
          "description": "Dropdown selected value `optionValue` prop of the selected option",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 112,
              "column": 10
            },
            "end": {
              "line": 116,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_selectedChanged\""
            }
          }
        },
        {
          "name": "selectedItem",
          "type": "Object",
          "description": "Selected option object",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 118,
              "column": 10
            },
            "end": {
              "line": 122,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          },
          "defaultValue": "null"
        },
        {
          "name": "notFoundOption",
          "type": "string",
          "description": "Selected value not found in options",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 124,
              "column": 10
            },
            "end": {
              "line": 126,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "title",
          "type": "string",
          "description": "Element title attribute",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 128,
              "column": 10
            },
            "end": {
              "line": 132,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          }
        }
      ],
      "methods": [
        {
          "name": "_selectedAndOptionsChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 143,
              "column": 6
            },
            "end": {
              "line": 145,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "selected"
            },
            {
              "name": "options"
            }
          ]
        },
        {
          "name": "_setSelectedItem",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 147,
              "column": 6
            },
            "end": {
              "line": 174,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "selected"
            },
            {
              "name": "selectedItem"
            }
          ]
        },
        {
          "name": "_getItemFromOptions",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 176,
              "column": 6
            },
            "end": {
              "line": 181,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            }
          ]
        },
        {
          "name": "_notFoundOptionAndUrlChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 183,
              "column": 6
            },
            "end": {
              "line": 187,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "notFoundOption"
            },
            {
              "name": "url"
            }
          ]
        },
        {
          "name": "_handleSelectedNotFoundInOptions",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 189,
              "column": 6
            },
            "end": {
              "line": 197,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "selected"
            }
          ]
        },
        {
          "name": "_updateAfterMissingOptionsReceived",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 199,
              "column": 6
            },
            "end": {
              "line": 207,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "detail"
            }
          ]
        },
        {
          "name": "_onDropdownClose",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 209,
              "column": 6
            },
            "end": {
              "line": 213,
              "column": 7
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "validate",
          "description": "Validate dropdown selection",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 220,
              "column": 6
            },
            "end": {
              "line": 228,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "selected"
            }
          ],
          "return": {
            "type": "boolean"
          }
        },
        {
          "name": "_selectedChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 230,
              "column": 6
            },
            "end": {
              "line": 237,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "selected"
            }
          ]
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/index.html",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 104,
          "column": 4
        },
        "end": {
          "line": 239,
          "column": 5
        }
      },
      "privacy": "public",
      "superclass": "DropdownRequiredMixins",
      "name": "EtoolsDropdown",
      "attributes": [
        {
          "name": "selected",
          "description": "Dropdown selected value `optionValue` prop of the selected option",
          "sourceRange": {
            "start": {
              "line": 112,
              "column": 10
            },
            "end": {
              "line": 116,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number"
        },
        {
          "name": "selected-item",
          "description": "Selected option object",
          "sourceRange": {
            "start": {
              "line": 118,
              "column": 10
            },
            "end": {
              "line": 122,
              "column": 11
            }
          },
          "metadata": {},
          "type": "Object"
        },
        {
          "name": "not-found-option",
          "description": "Selected value not found in options",
          "sourceRange": {
            "start": {
              "line": 124,
              "column": 10
            },
            "end": {
              "line": 126,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "title",
          "description": "Element title attribute",
          "sourceRange": {
            "start": {
              "line": 128,
              "column": 10
            },
            "end": {
              "line": 132,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "selected-changed",
          "description": "Fired when the `selected` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "selected-item-changed",
          "description": "Fired when the `selectedItem` property changes.",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "etools-dropdown",
      "mixins": [
        "DropdownRequiredMixins"
      ]
    },
    {
      "description": "",
      "summary": "",
      "path": "demo/elements/sigle-selection-demo.html",
      "properties": [
        {
          "name": "simpleOptions",
          "type": "Array",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "../mixins/test-data-mixin.html",
            "start": {
              "line": 14,
              "column": 8
            },
            "end": {
              "line": 24,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          },
          "inheritedFrom": "EsmmDemoHelpers.TestData"
        },
        {
          "name": "twoLineOptions",
          "type": "Array",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "../mixins/test-data-mixin.html",
            "start": {
              "line": 25,
              "column": 8
            },
            "end": {
              "line": 35,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          },
          "inheritedFrom": "EsmmDemoHelpers.TestData"
        }
      ],
      "methods": [],
      "staticMethods": [],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 40,
          "column": 4
        },
        "end": {
          "line": 50,
          "column": 5
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "EsmmSingleSelectionDemo",
      "attributes": [
        {
          "name": "simple-options",
          "description": "",
          "sourceRange": {
            "file": "../mixins/test-data-mixin.html",
            "start": {
              "line": 14,
              "column": 8
            },
            "end": {
              "line": 24,
              "column": 9
            }
          },
          "metadata": {},
          "type": "Array",
          "inheritedFrom": "EsmmDemoHelpers.TestData"
        },
        {
          "name": "two-line-options",
          "description": "",
          "sourceRange": {
            "file": "../mixins/test-data-mixin.html",
            "start": {
              "line": 25,
              "column": 8
            },
            "end": {
              "line": 35,
              "column": 9
            }
          },
          "metadata": {},
          "type": "Array",
          "inheritedFrom": "EsmmDemoHelpers.TestData"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "esmm-single-selection-demo",
      "mixins": [
        "EsmmDemoHelpers.TestData"
      ]
    }
  ],
  "mixins": [
    {
      "description": "",
      "summary": "",
      "path": "etools-dropdown-multi.html",
      "properties": [
        {
          "name": "url",
          "type": "string",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "mixins/missing-options-mixin.html",
            "start": {
              "line": 16,
              "column": 8
            },
            "end": {
              "line": 16,
              "column": 19
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "EsmmMixins.MissingOptions"
        },
        {
          "name": "ajaxParams",
          "type": "Object",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "mixins/missing-options-mixin.html",
            "start": {
              "line": 17,
              "column": 8
            },
            "end": {
              "line": 17,
              "column": 26
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "EsmmMixins.MissingOptions"
        },
        {
          "name": "optionValue",
          "type": "string",
          "description": "Option object property to use as value for selection",
          "privacy": "public",
          "sourceRange": {
            "file": "mixins/list-item-utils-mixin.html",
            "start": {
              "line": 17,
              "column": 12
            },
            "end": {
              "line": 20,
              "column": 13
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "\"value\"",
          "inheritedFrom": "EsmmMixins.ListItemUtils"
        },
        {
          "name": "optionLabel",
          "type": "string",
          "description": "Option object property to use as label",
          "privacy": "public",
          "sourceRange": {
            "file": "mixins/list-item-utils-mixin.html",
            "start": {
              "line": 22,
              "column": 12
            },
            "end": {
              "line": 25,
              "column": 13
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "\"label\"",
          "inheritedFrom": "EsmmMixins.ListItemUtils"
        },
        {
          "name": "twoLinesLabel",
          "type": "boolean",
          "description": "Show option label on 2 lines",
          "privacy": "public",
          "sourceRange": {
            "file": "mixins/list-item-utils-mixin.html",
            "start": {
              "line": 27,
              "column": 12
            },
            "end": {
              "line": 31,
              "column": 13
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false",
          "inheritedFrom": "EsmmMixins.ListItemUtils"
        },
        {
          "name": "noneOptionLabel",
          "type": "string",
          "description": "None option label",
          "privacy": "public",
          "sourceRange": {
            "file": "mixins/list-item-utils-mixin.html",
            "start": {
              "line": 33,
              "column": 12
            },
            "end": {
              "line": 36,
              "column": 13
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "\"-- NONE --\"",
          "inheritedFrom": "EsmmMixins.ListItemUtils"
        },
        {
          "name": "capitalize",
          "type": "boolean",
          "description": "Capitalize selected values/option, UI only",
          "privacy": "public",
          "sourceRange": {
            "file": "mixins/list-item-utils-mixin.html",
            "start": {
              "line": 38,
              "column": 12
            },
            "end": {
              "line": 41,
              "column": 13
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false",
          "inheritedFrom": "EsmmMixins.ListItemUtils"
        },
        {
          "name": "label",
          "type": "string",
          "description": "Dropdown label",
          "privacy": "public",
          "sourceRange": {
            "file": "mixins/common-mixin.html",
            "start": {
              "line": 19,
              "column": 8
            },
            "end": {
              "line": 21,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "EsmmMixins.CommonFunctionality"
        },
        {
          "name": "noLabelFloat",
          "type": "boolean",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "mixins/common-mixin.html",
            "start": {
              "line": 22,
              "column": 8
            },
            "end": {
              "line": 22,
              "column": 29
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "EsmmMixins.CommonFunctionality"
        },
        {
          "name": "alwaysFloatLabel",
          "type": "boolean",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "mixins/common-mixin.html",
            "start": {
              "line": 23,
              "column": 8
            },
            "end": {
              "line": 26,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "true",
          "inheritedFrom": "EsmmMixins.CommonFunctionality"
        },
        {
          "name": "placeholder",
          "type": "string",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "mixins/common-mixin.html",
            "start": {
              "line": 27,
              "column": 8
            },
            "end": {
              "line": 30,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "\"—\"",
          "inheritedFrom": "EsmmMixins.CommonFunctionality"
        },
        {
          "name": "required",
          "type": "boolean",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "mixins/common-mixin.html",
            "start": {
              "line": 31,
              "column": 8
            },
            "end": {
              "line": 35,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_requiredChanged\""
            }
          },
          "inheritedFrom": "EsmmMixins.CommonFunctionality"
        },
        {
          "name": "errorMessage",
          "type": "string",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "mixins/common-mixin.html",
            "start": {
              "line": 36,
              "column": 8
            },
            "end": {
              "line": 39,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "\"This field is required\"",
          "inheritedFrom": "EsmmMixins.CommonFunctionality"
        },
        {
          "name": "autoValidate",
          "type": "boolean",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "mixins/common-mixin.html",
            "start": {
              "line": 40,
              "column": 8
            },
            "end": {
              "line": 42,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "EsmmMixins.CommonFunctionality"
        },
        {
          "name": "disabled",
          "type": "boolean",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "mixins/common-mixin.html",
            "start": {
              "line": 43,
              "column": 8
            },
            "end": {
              "line": 47,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false",
          "inheritedFrom": "EsmmMixins.CommonFunctionality"
        },
        {
          "name": "readonly",
          "type": "boolean",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "mixins/common-mixin.html",
            "start": {
              "line": 48,
              "column": 8
            },
            "end": {
              "line": 55,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_readonlyChanged\""
            }
          },
          "defaultValue": "false",
          "inheritedFrom": "EsmmMixins.CommonFunctionality"
        },
        {
          "name": "invalid",
          "type": "boolean",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "mixins/common-mixin.html",
            "start": {
              "line": 56,
              "column": 8
            },
            "end": {
              "line": 62,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false",
          "inheritedFrom": "EsmmMixins.CommonFunctionality"
        },
        {
          "name": "dynamicAlign",
          "type": "boolean",
          "description": "Makes the dropdown to show top or bottom where it will fit better",
          "privacy": "public",
          "sourceRange": {
            "file": "mixins/common-mixin.html",
            "start": {
              "line": 64,
              "column": 8
            },
            "end": {
              "line": 67,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "true",
          "inheritedFrom": "EsmmMixins.CommonFunctionality"
        },
        {
          "name": "allowOutsideScroll",
          "type": "boolean",
          "description": "Allows scroll outside opened dropdown",
          "privacy": "public",
          "sourceRange": {
            "file": "mixins/common-mixin.html",
            "start": {
              "line": 69,
              "column": 8
            },
            "end": {
              "line": 71,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "EsmmMixins.CommonFunctionality"
        },
        {
          "name": "search",
          "type": "string",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "mixins/common-mixin.html",
            "start": {
              "line": 72,
              "column": 8
            },
            "end": {
              "line": 75,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "EsmmMixins.CommonFunctionality"
        },
        {
          "name": "options",
          "type": "Array",
          "description": "Array of objects, dropdowns options used to compute shownOptions",
          "privacy": "public",
          "sourceRange": {
            "file": "mixins/common-mixin.html",
            "start": {
              "line": 77,
              "column": 8
            },
            "end": {
              "line": 79,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "EsmmMixins.CommonFunctionality"
        },
        {
          "name": "shownOptions",
          "type": "Array",
          "description": "Options seen by user",
          "privacy": "public",
          "sourceRange": {
            "file": "mixins/common-mixin.html",
            "start": {
              "line": 81,
              "column": 8
            },
            "end": {
              "line": 84,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          },
          "inheritedFrom": "EsmmMixins.CommonFunctionality"
        },
        {
          "name": "enableNoneOption",
          "type": "boolean",
          "description": "Flag to show `None` option (first dropdown option)\nUsed to reset single selection dropdown selected value",
          "privacy": "public",
          "sourceRange": {
            "file": "mixins/common-mixin.html",
            "start": {
              "line": 89,
              "column": 8
            },
            "end": {
              "line": 92,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false",
          "inheritedFrom": "EsmmMixins.CommonFunctionality"
        },
        {
          "name": "hideSearch",
          "type": "boolean",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "mixins/common-mixin.html",
            "start": {
              "line": 93,
              "column": 8
            },
            "end": {
              "line": 96,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false",
          "inheritedFrom": "EsmmMixins.CommonFunctionality"
        },
        {
          "name": "shownOptionsLimit",
          "type": "number",
          "description": "Limit displayed options",
          "privacy": "public",
          "sourceRange": {
            "file": "mixins/common-mixin.html",
            "start": {
              "line": 98,
              "column": 8
            },
            "end": {
              "line": 101,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "50",
          "inheritedFrom": "EsmmMixins.CommonFunctionality"
        },
        {
          "name": "noOptionsAvailable",
          "type": "boolean",
          "description": "Flag to show a no options avaliable warning",
          "privacy": "public",
          "sourceRange": {
            "file": "mixins/common-mixin.html",
            "start": {
              "line": 103,
              "column": 8
            },
            "end": {
              "line": 107,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          },
          "defaultValue": "true",
          "inheritedFrom": "EsmmMixins.CommonFunctionality"
        },
        {
          "name": "showLimitWarning",
          "type": "boolean",
          "description": "Flag to show the limit of options shown in dropdown",
          "privacy": "public",
          "sourceRange": {
            "file": "mixins/common-mixin.html",
            "start": {
              "line": 109,
              "column": 8
            },
            "end": {
              "line": 113,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          },
          "defaultValue": "false",
          "inheritedFrom": "EsmmMixins.CommonFunctionality"
        },
        {
          "name": "showNoSearchResultsWarning",
          "type": "boolean",
          "description": "Flag used to show no search result found warning",
          "privacy": "public",
          "sourceRange": {
            "file": "mixins/common-mixin.html",
            "start": {
              "line": 115,
              "column": 8
            },
            "end": {
              "line": 119,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          },
          "defaultValue": "false",
          "inheritedFrom": "EsmmMixins.CommonFunctionality"
        },
        {
          "name": "disableOnFocusHandling",
          "type": "boolean",
          "description": "Stop autofocus from paper-dialog",
          "privacy": "public",
          "sourceRange": {
            "file": "mixins/common-mixin.html",
            "start": {
              "line": 121,
              "column": 8
            },
            "end": {
              "line": 127,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "EsmmMixins.CommonFunctionality"
        },
        {
          "name": "fitInto",
          "type": "Object",
          "description": "Element that will prevent dropdown to overflow outside it's margins",
          "privacy": "public",
          "sourceRange": {
            "file": "mixins/common-mixin.html",
            "start": {
              "line": 132,
              "column": 8
            },
            "end": {
              "line": 132,
              "column": 23
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "EsmmMixins.CommonFunctionality"
        },
        {
          "name": "viewportEdgeMargin",
          "type": "number",
          "description": "Margin added if dropdown bottom is too close to the viewport bottom margin",
          "privacy": "public",
          "sourceRange": {
            "file": "mixins/common-mixin.html",
            "start": {
              "line": 134,
              "column": 8
            },
            "end": {
              "line": 137,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "20",
          "inheritedFrom": "EsmmMixins.CommonFunctionality"
        }
      ],
      "methods": [
        {
          "name": "requestMissingOptions",
          "description": "If there are no selected options that are not found in dropdown options then request them from server using\nurl and ajaxParams(values property will contain missing values)\najaxParams = {\n   values: 1 // single value\n}\n\najaxParams = {\n   values: 1,2,3,4 // multiple values\n}",
          "privacy": "public",
          "sourceRange": {
            "file": "mixins/missing-options-mixin.html",
            "start": {
              "line": 34,
              "column": 4
            },
            "end": {
              "line": 57,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "notFoundValues",
              "type": "Array"
            }
          ],
          "inheritedFrom": "EsmmMixins.MissingOptions"
        },
        {
          "name": "handleMissingOptionsReqResponse",
          "description": "Handle missing option request response",
          "privacy": "public",
          "sourceRange": {
            "file": "mixins/missing-options-mixin.html",
            "start": {
              "line": 63,
              "column": 4
            },
            "end": {
              "line": 91,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "response"
            }
          ],
          "inheritedFrom": "EsmmMixins.MissingOptions"
        },
        {
          "name": "handleMissingOptionsReqError",
          "description": "Handle missing options request error",
          "privacy": "public",
          "sourceRange": {
            "file": "mixins/missing-options-mixin.html",
            "start": {
              "line": 97,
              "column": 4
            },
            "end": {
              "line": 100,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "errorResponse"
            }
          ],
          "inheritedFrom": "EsmmMixins.MissingOptions"
        },
        {
          "name": "shouldRequestMissingOption",
          "description": "Check if request missing option functionality can be used",
          "privacy": "public",
          "sourceRange": {
            "file": "mixins/missing-options-mixin.html",
            "start": {
              "line": 107,
              "column": 4
            },
            "end": {
              "line": 112,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "url"
            }
          ],
          "return": {
            "type": "boolean"
          },
          "inheritedFrom": "EsmmMixins.MissingOptions"
        },
        {
          "name": "isValidOption",
          "description": "Check if option received from missing options request is valid",
          "privacy": "public",
          "sourceRange": {
            "file": "mixins/missing-options-mixin.html",
            "start": {
              "line": 119,
              "column": 4
            },
            "end": {
              "line": 121,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "optionObj"
            }
          ],
          "return": {
            "type": "(boolean|*)"
          },
          "inheritedFrom": "EsmmMixins.MissingOptions"
        },
        {
          "name": "prepareReceivedOptions",
          "description": "Prepare new received options to add them to the current options list",
          "privacy": "public",
          "sourceRange": {
            "file": "mixins/missing-options-mixin.html",
            "start": {
              "line": 128,
              "column": 4
            },
            "end": {
              "line": 149,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "receivedOptions"
            }
          ],
          "return": {
            "type": "*"
          },
          "inheritedFrom": "EsmmMixins.MissingOptions"
        },
        {
          "name": "getPrimaryLabel",
          "description": "Get option primary label. All chars until `|` .",
          "privacy": "public",
          "sourceRange": {
            "file": "mixins/list-item-utils-mixin.html",
            "start": {
              "line": 50,
              "column": 8
            },
            "end": {
              "line": 59,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "label"
            }
          ],
          "return": {
            "type": "string"
          },
          "inheritedFrom": "EsmmMixins.ListItemUtils"
        },
        {
          "name": "getSecondaryLabel",
          "description": "Get option secondary label. All chars after `|`",
          "privacy": "public",
          "sourceRange": {
            "file": "mixins/list-item-utils-mixin.html",
            "start": {
              "line": 66,
              "column": 8
            },
            "end": {
              "line": 78,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "label"
            }
          ],
          "return": {
            "type": "*"
          },
          "inheritedFrom": "EsmmMixins.ListItemUtils"
        },
        {
          "name": "_getValue",
          "description": "Get current option value",
          "privacy": "private",
          "sourceRange": {
            "file": "mixins/list-item-utils-mixin.html",
            "start": {
              "line": 86,
              "column": 8
            },
            "end": {
              "line": 88,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "item"
            }
          ],
          "return": {
            "type": "null"
          },
          "inheritedFrom": "EsmmMixins.ListItemUtils"
        },
        {
          "name": "_getLabel",
          "description": "Get option label",
          "privacy": "private",
          "sourceRange": {
            "file": "mixins/list-item-utils-mixin.html",
            "start": {
              "line": 96,
              "column": 8
            },
            "end": {
              "line": 106,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "item"
            }
          ],
          "return": {
            "type": "*"
          },
          "inheritedFrom": "EsmmMixins.ListItemUtils"
        },
        {
          "name": "_capitalizeString",
          "description": "Capitalize string",
          "privacy": "private",
          "sourceRange": {
            "file": "mixins/list-item-utils-mixin.html",
            "start": {
              "line": 114,
              "column": 8
            },
            "end": {
              "line": 116,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "string"
            }
          ],
          "return": {
            "type": "string"
          },
          "inheritedFrom": "EsmmMixins.ListItemUtils"
        },
        {
          "name": "connectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "mixins/common-mixin.html",
            "start": {
              "line": 141,
              "column": 4
            },
            "end": {
              "line": 153,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "EsmmMixins.CommonFunctionality"
        },
        {
          "name": "_setFitInto",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "mixins/common-mixin.html",
            "start": {
              "line": 155,
              "column": 4
            },
            "end": {
              "line": 164,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "EsmmMixins.CommonFunctionality"
        },
        {
          "name": "_setResetSizeHandler",
          "description": "Reset dropdown size on close",
          "privacy": "protected",
          "sourceRange": {
            "file": "mixins/common-mixin.html",
            "start": {
              "line": 169,
              "column": 4
            },
            "end": {
              "line": 172,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "EsmmMixins.CommonFunctionality"
        },
        {
          "name": "_isUndefined",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "mixins/common-mixin.html",
            "start": {
              "line": 174,
              "column": 4
            },
            "end": {
              "line": 176,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "prop"
            }
          ],
          "inheritedFrom": "EsmmMixins.CommonFunctionality"
        },
        {
          "name": "resetIronDropdownSize",
          "description": "Reset previous calculated maxHeight,\nin this way on each dropdown open action we'll get the same calculated new height.",
          "privacy": "public",
          "sourceRange": {
            "file": "mixins/common-mixin.html",
            "start": {
              "line": 182,
              "column": 4
            },
            "end": {
              "line": 187,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "EsmmMixins.CommonFunctionality"
        },
        {
          "name": "_dropdownOpenedDownwards",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "mixins/common-mixin.html",
            "start": {
              "line": 189,
              "column": 4
            },
            "end": {
              "line": 192,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "overlayCoord"
            }
          ],
          "inheritedFrom": "EsmmMixins.CommonFunctionality"
        },
        {
          "name": "_noOptions",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "mixins/common-mixin.html",
            "start": {
              "line": 194,
              "column": 4
            },
            "end": {
              "line": 196,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "EsmmMixins.CommonFunctionality"
        },
        {
          "name": "_menuBtnIsDisabled",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "mixins/common-mixin.html",
            "start": {
              "line": 198,
              "column": 4
            },
            "end": {
              "line": 200,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "disabled"
            },
            {
              "name": "readonly"
            }
          ],
          "inheritedFrom": "EsmmMixins.CommonFunctionality"
        },
        {
          "name": "resetInvalidState",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "mixins/common-mixin.html",
            "start": {
              "line": 202,
              "column": 4
            },
            "end": {
              "line": 204,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "EsmmMixins.CommonFunctionality"
        },
        {
          "name": "_computeNoOptionsAvailable",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "mixins/common-mixin.html",
            "start": {
              "line": 206,
              "column": 4
            },
            "end": {
              "line": 211,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "options"
            },
            {
              "name": "optionsLength"
            }
          ],
          "inheritedFrom": "EsmmMixins.CommonFunctionality"
        },
        {
          "name": "_readonlyChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "mixins/common-mixin.html",
            "start": {
              "line": 213,
              "column": 4
            },
            "end": {
              "line": 221,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "newValue"
            },
            {
              "name": "oldValue"
            }
          ],
          "inheritedFrom": "EsmmMixins.CommonFunctionality"
        },
        {
          "name": "_requiredChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "mixins/common-mixin.html",
            "start": {
              "line": 223,
              "column": 4
            },
            "end": {
              "line": 231,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "newValue"
            },
            {
              "name": "oldValue"
            }
          ],
          "inheritedFrom": "EsmmMixins.CommonFunctionality"
        },
        {
          "name": "_attributeRepaintNeeded",
          "description": "Force styles update",
          "privacy": "protected",
          "sourceRange": {
            "file": "mixins/common-mixin.html",
            "start": {
              "line": 236,
              "column": 4
            },
            "end": {
              "line": 240,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "newValue"
            },
            {
              "name": "oldValue"
            }
          ],
          "inheritedFrom": "EsmmMixins.CommonFunctionality"
        },
        {
          "name": "_computeShownOptions",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "mixins/common-mixin.html",
            "start": {
              "line": 242,
              "column": 4
            },
            "end": {
              "line": 263,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "options"
            },
            {
              "name": "search"
            },
            {
              "name": "enableNoneOption"
            }
          ],
          "inheritedFrom": "EsmmMixins.CommonFunctionality"
        },
        {
          "name": "_trimByShownOptionsLimit",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "mixins/common-mixin.html",
            "start": {
              "line": 265,
              "column": 4
            },
            "end": {
              "line": 267,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "options"
            }
          ],
          "inheritedFrom": "EsmmMixins.CommonFunctionality"
        },
        {
          "name": "_itemContainsSearchString",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "mixins/common-mixin.html",
            "start": {
              "line": 269,
              "column": 4
            },
            "end": {
              "line": 272,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "item"
            }
          ],
          "inheritedFrom": "EsmmMixins.CommonFunctionality"
        },
        {
          "name": "_computeShowLimitWarning",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "mixins/common-mixin.html",
            "start": {
              "line": 274,
              "column": 4
            },
            "end": {
              "line": 279,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "limit"
            },
            {
              "name": "shownOptions"
            }
          ],
          "inheritedFrom": "EsmmMixins.CommonFunctionality"
        },
        {
          "name": "_showNoSearchResultsWarning",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "mixins/common-mixin.html",
            "start": {
              "line": 281,
              "column": 4
            },
            "end": {
              "line": 287,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "noOptionsAvailable"
            },
            {
              "name": "shownOptionsLength"
            },
            {
              "name": "optionsLength"
            }
          ],
          "inheritedFrom": "EsmmMixins.CommonFunctionality"
        },
        {
          "name": "_validCoordinates",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "mixins/common-mixin.html",
            "start": {
              "line": 289,
              "column": 4
            },
            "end": {
              "line": 294,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "coords"
            }
          ],
          "inheritedFrom": "EsmmMixins.CommonFunctionality"
        },
        {
          "name": "_bottomTooCloseToViewportEdge",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "mixins/common-mixin.html",
            "start": {
              "line": 296,
              "column": 4
            },
            "end": {
              "line": 299,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "dropdownBottom"
            }
          ],
          "inheritedFrom": "EsmmMixins.CommonFunctionality"
        },
        {
          "name": "_dropdownBottomOutsideViewPort",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "mixins/common-mixin.html",
            "start": {
              "line": 301,
              "column": 4
            },
            "end": {
              "line": 306,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "openedDropdownCoord"
            }
          ],
          "inheritedFrom": "EsmmMixins.CommonFunctionality"
        },
        {
          "name": "_getViewportHeight",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "mixins/common-mixin.html",
            "start": {
              "line": 308,
              "column": 4
            },
            "end": {
              "line": 310,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "EsmmMixins.CommonFunctionality"
        },
        {
          "name": "_recalculateOptionsListHeightForIE11",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "mixins/common-mixin.html",
            "start": {
              "line": 312,
              "column": 4
            },
            "end": {
              "line": 338,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "newComputedHeight"
            },
            {
              "name": "openedDropdownCoord"
            },
            {
              "name": "searchboxHeight"
            }
          ],
          "inheritedFrom": "EsmmMixins.CommonFunctionality"
        },
        {
          "name": "_getSearchFieldHeight",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "mixins/common-mixin.html",
            "start": {
              "line": 340,
              "column": 4
            },
            "end": {
              "line": 347,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "EsmmMixins.CommonFunctionality"
        },
        {
          "name": "_getNewHeightRelatedToBottomViewportEdge",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "mixins/common-mixin.html",
            "start": {
              "line": 349,
              "column": 4
            },
            "end": {
              "line": 352,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "openedDropdownCoord"
            },
            {
              "name": "searchboxHeight"
            }
          ],
          "inheritedFrom": "EsmmMixins.CommonFunctionality"
        },
        {
          "name": "_resizeOptionsListHeight",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "mixins/common-mixin.html",
            "start": {
              "line": 354,
              "column": 4
            },
            "end": {
              "line": 382,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "EsmmMixins.CommonFunctionality"
        },
        {
          "name": "_onDropdownOpen",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "mixins/common-mixin.html",
            "start": {
              "line": 384,
              "column": 4
            },
            "end": {
              "line": 387,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "EsmmMixins.CommonFunctionality"
        },
        {
          "name": "_setDropdownWidth",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "mixins/common-mixin.html",
            "start": {
              "line": 389,
              "column": 4
            },
            "end": {
              "line": 392,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "EsmmMixins.CommonFunctionality"
        },
        {
          "name": "_setFocusTarget",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "mixins/common-mixin.html",
            "start": {
              "line": 394,
              "column": 4
            },
            "end": {
              "line": 398,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "EsmmMixins.CommonFunctionality"
        },
        {
          "name": "_setPositionTarget",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "mixins/common-mixin.html",
            "start": {
              "line": 400,
              "column": 4
            },
            "end": {
              "line": 404,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "EsmmMixins.CommonFunctionality"
        },
        {
          "name": "_getIronDropdown",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "mixins/common-mixin.html",
            "start": {
              "line": 406,
              "column": 4
            },
            "end": {
              "line": 408,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "EsmmMixins.CommonFunctionality"
        },
        {
          "name": "_getIronDropdownContent",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "mixins/common-mixin.html",
            "start": {
              "line": 410,
              "column": 4
            },
            "end": {
              "line": 412,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "EsmmMixins.CommonFunctionality"
        },
        {
          "name": "_getOptionsList",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "mixins/common-mixin.html",
            "start": {
              "line": 414,
              "column": 4
            },
            "end": {
              "line": 416,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "EsmmMixins.CommonFunctionality"
        },
        {
          "name": "_getSearchox",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "mixins/common-mixin.html",
            "start": {
              "line": 418,
              "column": 4
            },
            "end": {
              "line": 420,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "EsmmMixins.CommonFunctionality"
        },
        {
          "name": "_openMenu",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "mixins/common-mixin.html",
            "start": {
              "line": 422,
              "column": 4
            },
            "end": {
              "line": 427,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "EsmmMixins.CommonFunctionality"
        },
        {
          "name": "_closeMenu",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "mixins/common-mixin.html",
            "start": {
              "line": 429,
              "column": 4
            },
            "end": {
              "line": 431,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "EsmmMixins.CommonFunctionality"
        },
        {
          "name": "notifyDropdownResize",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "mixins/common-mixin.html",
            "start": {
              "line": 450,
              "column": 4
            },
            "end": {
              "line": 453,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "EsmmMixins.CommonFunctionality"
        },
        {
          "name": "onInputFocus",
          "description": "On focus received from a previous element (filds navigation in form using Tab)",
          "privacy": "public",
          "sourceRange": {
            "file": "mixins/common-mixin.html",
            "start": {
              "line": 459,
              "column": 4
            },
            "end": {
              "line": 468,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "inheritedFrom": "EsmmMixins.CommonFunctionality"
        },
        {
          "name": "isIEBrowser",
          "description": "Checks for IE11 browser :)",
          "privacy": "public",
          "sourceRange": {
            "file": "mixins/common-mixin.html",
            "start": {
              "line": 474,
              "column": 4
            },
            "end": {
              "line": 477,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "boolean"
          },
          "inheritedFrom": "EsmmMixins.CommonFunctionality"
        },
        {
          "name": "_addEventListenerToNode",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/polymer/lib/mixins/gesture-event-listeners.html",
            "start": {
              "line": 47,
              "column": 6
            },
            "end": {
              "line": 51,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "node"
            },
            {
              "name": "eventName"
            },
            {
              "name": "handler"
            }
          ],
          "inheritedFrom": "Polymer.GestureEventListeners"
        },
        {
          "name": "_removeEventListenerFromNode",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/polymer/lib/mixins/gesture-event-listeners.html",
            "start": {
              "line": 53,
              "column": 6
            },
            "end": {
              "line": 57,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "node"
            },
            {
              "name": "eventName"
            },
            {
              "name": "handler"
            }
          ],
          "inheritedFrom": "Polymer.GestureEventListeners"
        }
      ],
      "staticMethods": [],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 89,
          "column": 4
        },
        "end": {
          "line": 90,
          "column": 57
        }
      },
      "privacy": "public",
      "name": "MultiDropdownRequiredMixins",
      "attributes": [
        {
          "name": "url",
          "description": "",
          "sourceRange": {
            "file": "mixins/missing-options-mixin.html",
            "start": {
              "line": 16,
              "column": 8
            },
            "end": {
              "line": 16,
              "column": 19
            }
          },
          "metadata": {},
          "type": "string",
          "inheritedFrom": "EsmmMixins.MissingOptions"
        },
        {
          "name": "ajax-params",
          "description": "",
          "sourceRange": {
            "file": "mixins/missing-options-mixin.html",
            "start": {
              "line": 17,
              "column": 8
            },
            "end": {
              "line": 17,
              "column": 26
            }
          },
          "metadata": {},
          "type": "Object",
          "inheritedFrom": "EsmmMixins.MissingOptions"
        },
        {
          "name": "option-value",
          "description": "Option object property to use as value for selection",
          "sourceRange": {
            "file": "mixins/list-item-utils-mixin.html",
            "start": {
              "line": 17,
              "column": 12
            },
            "end": {
              "line": 20,
              "column": 13
            }
          },
          "metadata": {},
          "type": "string",
          "inheritedFrom": "EsmmMixins.ListItemUtils"
        },
        {
          "name": "option-label",
          "description": "Option object property to use as label",
          "sourceRange": {
            "file": "mixins/list-item-utils-mixin.html",
            "start": {
              "line": 22,
              "column": 12
            },
            "end": {
              "line": 25,
              "column": 13
            }
          },
          "metadata": {},
          "type": "string",
          "inheritedFrom": "EsmmMixins.ListItemUtils"
        },
        {
          "name": "two-lines-label",
          "description": "Show option label on 2 lines",
          "sourceRange": {
            "file": "mixins/list-item-utils-mixin.html",
            "start": {
              "line": 27,
              "column": 12
            },
            "end": {
              "line": 31,
              "column": 13
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "EsmmMixins.ListItemUtils"
        },
        {
          "name": "none-option-label",
          "description": "None option label",
          "sourceRange": {
            "file": "mixins/list-item-utils-mixin.html",
            "start": {
              "line": 33,
              "column": 12
            },
            "end": {
              "line": 36,
              "column": 13
            }
          },
          "metadata": {},
          "type": "string",
          "inheritedFrom": "EsmmMixins.ListItemUtils"
        },
        {
          "name": "capitalize",
          "description": "Capitalize selected values/option, UI only",
          "sourceRange": {
            "file": "mixins/list-item-utils-mixin.html",
            "start": {
              "line": 38,
              "column": 12
            },
            "end": {
              "line": 41,
              "column": 13
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "EsmmMixins.ListItemUtils"
        },
        {
          "name": "label",
          "description": "Dropdown label",
          "sourceRange": {
            "file": "mixins/common-mixin.html",
            "start": {
              "line": 19,
              "column": 8
            },
            "end": {
              "line": 21,
              "column": 9
            }
          },
          "metadata": {},
          "type": "string",
          "inheritedFrom": "EsmmMixins.CommonFunctionality"
        },
        {
          "name": "no-label-float",
          "description": "",
          "sourceRange": {
            "file": "mixins/common-mixin.html",
            "start": {
              "line": 22,
              "column": 8
            },
            "end": {
              "line": 22,
              "column": 29
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "EsmmMixins.CommonFunctionality"
        },
        {
          "name": "always-float-label",
          "description": "",
          "sourceRange": {
            "file": "mixins/common-mixin.html",
            "start": {
              "line": 23,
              "column": 8
            },
            "end": {
              "line": 26,
              "column": 9
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "EsmmMixins.CommonFunctionality"
        },
        {
          "name": "placeholder",
          "description": "",
          "sourceRange": {
            "file": "mixins/common-mixin.html",
            "start": {
              "line": 27,
              "column": 8
            },
            "end": {
              "line": 30,
              "column": 9
            }
          },
          "metadata": {},
          "type": "string",
          "inheritedFrom": "EsmmMixins.CommonFunctionality"
        },
        {
          "name": "required",
          "description": "",
          "sourceRange": {
            "file": "mixins/common-mixin.html",
            "start": {
              "line": 31,
              "column": 8
            },
            "end": {
              "line": 35,
              "column": 9
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "EsmmMixins.CommonFunctionality"
        },
        {
          "name": "error-message",
          "description": "",
          "sourceRange": {
            "file": "mixins/common-mixin.html",
            "start": {
              "line": 36,
              "column": 8
            },
            "end": {
              "line": 39,
              "column": 9
            }
          },
          "metadata": {},
          "type": "string",
          "inheritedFrom": "EsmmMixins.CommonFunctionality"
        },
        {
          "name": "auto-validate",
          "description": "",
          "sourceRange": {
            "file": "mixins/common-mixin.html",
            "start": {
              "line": 40,
              "column": 8
            },
            "end": {
              "line": 42,
              "column": 9
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "EsmmMixins.CommonFunctionality"
        },
        {
          "name": "disabled",
          "description": "",
          "sourceRange": {
            "file": "mixins/common-mixin.html",
            "start": {
              "line": 43,
              "column": 8
            },
            "end": {
              "line": 47,
              "column": 9
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "EsmmMixins.CommonFunctionality"
        },
        {
          "name": "readonly",
          "description": "",
          "sourceRange": {
            "file": "mixins/common-mixin.html",
            "start": {
              "line": 48,
              "column": 8
            },
            "end": {
              "line": 55,
              "column": 9
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "EsmmMixins.CommonFunctionality"
        },
        {
          "name": "invalid",
          "description": "",
          "sourceRange": {
            "file": "mixins/common-mixin.html",
            "start": {
              "line": 56,
              "column": 8
            },
            "end": {
              "line": 62,
              "column": 9
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "EsmmMixins.CommonFunctionality"
        },
        {
          "name": "dynamic-align",
          "description": "Makes the dropdown to show top or bottom where it will fit better",
          "sourceRange": {
            "file": "mixins/common-mixin.html",
            "start": {
              "line": 64,
              "column": 8
            },
            "end": {
              "line": 67,
              "column": 9
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "EsmmMixins.CommonFunctionality"
        },
        {
          "name": "allow-outside-scroll",
          "description": "Allows scroll outside opened dropdown",
          "sourceRange": {
            "file": "mixins/common-mixin.html",
            "start": {
              "line": 69,
              "column": 8
            },
            "end": {
              "line": 71,
              "column": 9
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "EsmmMixins.CommonFunctionality"
        },
        {
          "name": "search",
          "description": "",
          "sourceRange": {
            "file": "mixins/common-mixin.html",
            "start": {
              "line": 72,
              "column": 8
            },
            "end": {
              "line": 75,
              "column": 9
            }
          },
          "metadata": {},
          "type": "string",
          "inheritedFrom": "EsmmMixins.CommonFunctionality"
        },
        {
          "name": "options",
          "description": "Array of objects, dropdowns options used to compute shownOptions",
          "sourceRange": {
            "file": "mixins/common-mixin.html",
            "start": {
              "line": 77,
              "column": 8
            },
            "end": {
              "line": 79,
              "column": 9
            }
          },
          "metadata": {},
          "type": "Array",
          "inheritedFrom": "EsmmMixins.CommonFunctionality"
        },
        {
          "name": "shown-options",
          "description": "Options seen by user",
          "sourceRange": {
            "file": "mixins/common-mixin.html",
            "start": {
              "line": 81,
              "column": 8
            },
            "end": {
              "line": 84,
              "column": 9
            }
          },
          "metadata": {},
          "type": "Array",
          "inheritedFrom": "EsmmMixins.CommonFunctionality"
        },
        {
          "name": "enable-none-option",
          "description": "Flag to show `None` option (first dropdown option)\nUsed to reset single selection dropdown selected value",
          "sourceRange": {
            "file": "mixins/common-mixin.html",
            "start": {
              "line": 89,
              "column": 8
            },
            "end": {
              "line": 92,
              "column": 9
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "EsmmMixins.CommonFunctionality"
        },
        {
          "name": "hide-search",
          "description": "",
          "sourceRange": {
            "file": "mixins/common-mixin.html",
            "start": {
              "line": 93,
              "column": 8
            },
            "end": {
              "line": 96,
              "column": 9
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "EsmmMixins.CommonFunctionality"
        },
        {
          "name": "shown-options-limit",
          "description": "Limit displayed options",
          "sourceRange": {
            "file": "mixins/common-mixin.html",
            "start": {
              "line": 98,
              "column": 8
            },
            "end": {
              "line": 101,
              "column": 9
            }
          },
          "metadata": {},
          "type": "number",
          "inheritedFrom": "EsmmMixins.CommonFunctionality"
        },
        {
          "name": "no-options-available",
          "description": "Flag to show a no options avaliable warning",
          "sourceRange": {
            "file": "mixins/common-mixin.html",
            "start": {
              "line": 103,
              "column": 8
            },
            "end": {
              "line": 107,
              "column": 9
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "EsmmMixins.CommonFunctionality"
        },
        {
          "name": "show-limit-warning",
          "description": "Flag to show the limit of options shown in dropdown",
          "sourceRange": {
            "file": "mixins/common-mixin.html",
            "start": {
              "line": 109,
              "column": 8
            },
            "end": {
              "line": 113,
              "column": 9
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "EsmmMixins.CommonFunctionality"
        },
        {
          "name": "show-no-search-results-warning",
          "description": "Flag used to show no search result found warning",
          "sourceRange": {
            "file": "mixins/common-mixin.html",
            "start": {
              "line": 115,
              "column": 8
            },
            "end": {
              "line": 119,
              "column": 9
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "EsmmMixins.CommonFunctionality"
        },
        {
          "name": "disable-on-focus-handling",
          "description": "Stop autofocus from paper-dialog",
          "sourceRange": {
            "file": "mixins/common-mixin.html",
            "start": {
              "line": 121,
              "column": 8
            },
            "end": {
              "line": 127,
              "column": 9
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "EsmmMixins.CommonFunctionality"
        },
        {
          "name": "fit-into",
          "description": "Element that will prevent dropdown to overflow outside it's margins",
          "sourceRange": {
            "file": "mixins/common-mixin.html",
            "start": {
              "line": 132,
              "column": 8
            },
            "end": {
              "line": 132,
              "column": 23
            }
          },
          "metadata": {},
          "type": "Object",
          "inheritedFrom": "EsmmMixins.CommonFunctionality"
        },
        {
          "name": "viewport-edge-margin",
          "description": "Margin added if dropdown bottom is too close to the viewport bottom margin",
          "sourceRange": {
            "file": "mixins/common-mixin.html",
            "start": {
              "line": 134,
              "column": 8
            },
            "end": {
              "line": 137,
              "column": 9
            }
          },
          "metadata": {},
          "type": "number",
          "inheritedFrom": "EsmmMixins.CommonFunctionality"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "mixins": [
        "EsmmMixins.MissingOptions",
        "EsmmMixins.CommonFunctionality",
        "Polymer.GestureEventListeners"
      ]
    },
    {
      "description": "",
      "summary": "",
      "path": "etools-dropdown.html",
      "properties": [],
      "methods": [],
      "staticMethods": [],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 93,
          "column": 4
        },
        "end": {
          "line": 94,
          "column": 57
        }
      },
      "privacy": "public",
      "name": "DropdownRequiredMixins",
      "attributes": [],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": []
    }
  ]
}
